
1.装包
软件源来源？ 官网下载  XXX.主.次（偶数为稳定版）.修改次数
软件包封包类型（rpm 源码）？
源码 可以自定义配置和安装  必须解决依赖关系
rpm 软件是封装好的不可以自定义安装  安装卸载简单
     rpm -ivh 
     rpm  -e
2.[root@host50 ~]# ss -antup | grep mysqld
tcp    LISTEN     0      80       :::3306               :::*       users:(("mysqld",pid=3468,fd=18))
[root@host50 ~]# ps  -C  mysqld   //单独查
  PID TTY          TIME CMD
 3468 ?        00:00:00 mysqld

###########################################################

数据库  庞丽静工作邮箱:  panglj@tedu.cn

rhel7     yum -y install mariadb-server
rhel6     yum -y install mysql

学习环境:
禁用selinux
关闭防火墙
ftp 176.19.7.250
Name:  anonymous                          //匿名登录ftp
Password： Enter



createrepo /var/ftp/mysql                 //创建yum仓库

[mysql]
name=mysql
baseurl=ftp://192.168.4.254/mysql
enable=1
gpgcheck=0

[dvd]
name=rhel7
baseurl=ftp://192.168.4.254/rhel7
enable=1
gpgcheck=0


yum -y install     mysql-community-*        //装包

systemctl start mysqld                     //启服务

grep -i password /var/log/mysqld.log       //查密码

mysql -uroot -p"密码"    登录

set global validate_password_policy=0;     //修改安全策略只要求长度

set global validate_password_length=6;     //修改密码长度为6

alter user user() identified by "123456";  //修改密码为123456

vim /etc/my.cnf                            //永久修改
validate_password_policy=0      
validate_password_length=6



数据库的命名规则:可以使用数字/字母/下划线,但不能为纯数字
                区分大小写,具有唯一性
                不可以使用指令关键字,特殊字符

SQL命令:
show databases;            	//显示已有的库
create database (库名);    	//创建库
drop database (库名);       	//删除库
use (库名);                 	//切换库
select database();          	//显示当前所在的库
show tables;                	//显示已有的表

使用SQL(结构化查询语言)命令的使用规则和分类:
  1.每条命令必须以;(分号)结束或分隔
  2.命令不区分大小写(密码和变量除外)
  3.不支持tab自动补全数据库操作:
  4.\c可以废弃当前的命令

常用SQL的操作指令
  1.DDL数据定义语言   (create  alter  drop)
  2.DML数据操作语言   (insert  update  delete)
  3.DCL数据控制语言   (grant  H)
  4.DTL数据事物语言   (commit  rollback  savepoint)

数据表:

表必须在库里创建

create database md1;         //创建md1库
create table md1.student(    //在md1库中创建student表
name char(15),               //第一个字段名为name,最多15个字符
sex char(10),                //第二个字段名为sex,最多10个字符
age int,                     //第三个字段名为age,只能为整数
tel char(11)                 //第四个字段名为tel,最多11个字符
);

###############################################################################

修改密码

设置管理mysql数据库管理员root密码:操作系统管理员有权限修改

修改配置文件
vim /etc/my.cnf                       //修改配置文件
set global validate_password_policy=0 //修改密码策略,只验证密码长度
set global validate_password_length=6 //修改密码策略,密码长度最短为6
:wq                                   //保存修改

mysqladmin -hlocalhost -uroot -p password "新密码"
                                      //命令行修改密码

恢复数据库管理员root登录密码:
systemctl stop mysqld                 //停用mysql

vim /etc/my.cnf                       //修改配置
skip_grant_tables                     //跳过授权
:wq                                   //保存修改

systemctl start mysqld                //启用mysql

]#mysql

mysql> update mysql.user set authentication_string=password("123456") where user="root" and host="localhost";     
                                     //authentication_string为登录密码字段
                                     //password()是mysql自带加密算法
flush privileges;                    //刷新修改

systemctl stop mysqld                //停用mysql

vim /etc/my.cnf                      //修改配置文件
#skip_grant_tables                   //注释跳过授权
:wq                                  //保存修改

systemctl start mysqld               //启用mysql

mysql -uroot -p123456                //用新密码登录

----------------------------------------------------------------------------------

修改mariadb数据库密码：

1. vim  /etc/my.cnf
skip-grant-tables　　　　# 加入这一行

2. systemctl start  mariadb


3. ]# mysql
   > update mysql.user  set password=password('123456')  where user='root';
   > flush privileges;
4. vim   /etc/my.cnf
  # skip-grant-tables

5. systemctl start  mariadb


6. mysql  -uroot -p123456



###################################################################################

1.临时和永久设置密码验证策略为只验证长度的命令分别是什么?
2.MySQL的主配置文件,数据库目录,端口号,进程名,传输协议,进程所有者,进程所属组分别是啥?
3.显示已有的库,切换库,显示当前所在的库,创建新库,显示已有的表,删除库的命令分别是啥?
4.查看表结构,查看表记录,删除表的命令分别是啥?
5.查看表记录,插入表记录,修改表记录,删除表记录的命令分别是啥?



1.1)临时:mysql> set global validate_password_policy=0; 
  2)永久: vim  /etc/my.cnf
  validate_password_policy=0 
2.主配置文件   /etc/my.cnf
  数据库目录    /var/lib/mysql
  默认端口号   3306
   进程名         mysqld
  传输协议       TCP
  进程所有者     mysql
  进程所属组     mysql
3.Show    databases;      //显示已有的库
  Use  库名;                            //切换库
  Select   database();    //显示当前所在的库
  Create  database  库名;    //创建新库
  Show   tables;          //显示已有的表
  Drop    database  库名；  //删除库
4.  Desc   表名;                         //查看表结构
    Select   *  from   表名； //查看表记录
    Drop  table  表名;              //删除表
5.  Insert   into  表名   values(值列表);  //插入表记录
    Update 表名  set  字段=值;                        //修改表记录  
    Delete  from   表名;                                //删除表记录

#####################################################################################

3.mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| db1                |
| db2                |
| hao                |
| hao2               |
| lujiawen           |
| mysql              |
| performance_schema |
| studb              |
| sys                |
| yy                 |
+--------------------+
11 rows in set (0.08 sec)

mysql> desc db2;
ERROR 1046 (3D000): No database selected
mysql> use db2;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql> 
mysql> select database();
+------------+
| database() |
+------------+
| db2        |
+------------+
1 row in set (0.00 sec)

mysql> show table db2;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'db2' at line 1
mysql> show table db2.t9;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'db2.t9' at line 1
mysql> show table db2.t9;







mysql> desc db2.t9;
ERROR 1146 (42S02): Table 'db2.t9' doesn't exist
mysql> desc db2.t10;
ERROR 1146 (42S02): Table 'db2.t10' doesn't exist
mysql> desc db2.t8;
+-------+--------------------+------+-----+---------+-------+
| Field | Type               | Null | Key | Default | Extra |
+-------+--------------------+------+-----+---------+-------+
| name  | char(14)           | NO   |     |         |       |
| class | char(17)           | YES  |     | nsd1000 |       |
| age   | tinyint(2)         | NO   |     | 19      |       |
| sex   | enum('boy','girl') | NO   |     | boy     |       |
+-------+--------------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

mysql> show tables;
+---------------+
| Tables_in_db2 |
+---------------+
| dogperson     |
| stuinfo       |
| t11111        |
| t2            |
| t5            |
| t7            |
| t8            |
+---------------+
7 rows in set (0.00 sec)

mysql> create index aaa on stuinfo(name);
Query OK, 0 rows affected (0.23 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc stuinfo;
+------------+-----------------------------------+------+-----+---------+-------+
| Field      | Type                              | Null | Key | Default | Extra |
+------------+-----------------------------------+------+-----+---------+-------+
| stu_number | varchar(9)                        | YES  |     | NULL    |       |
| name       | char(14)                          | NO   | MUL |         |       |
| sex        | enum('boy','girl','no')           | NO   |     | boy     |       |
| class      | char(17)                          | YES  |     | nsd1000 |       |
| age        | int(2)                            | NO   |     | 19      |       |
| likes      | set('eat','sleeps','game','film') | YES  |     | NULL    |       |
+------------+-----------------------------------+------+-----+---------+-------+
6 rows in set (0.00 sec)

mysql> show index from stuinfo;
+---------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| Table   | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |
+---------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| stuinfo |          1 | aaa      |            1 | name        | A         |           2 |     NULL | NULL   |      | BTREE      |         |               |
+---------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
1 row in set (0.00 sec)

mysql>  show index from stuinfo\G; 
*************************** 1. row ***************************
        Table: stuinfo
   Non_unique: 1
     Key_name: aaa
 Seq_in_index: 1
  Column_name: name
    Collation: A
  Cardinality: 2
     Sub_part: NULL
       Packed: NULL
         Null: 
   Index_type: BTREE
      Comment: 
Index_comment: 
1 row in set (0.00 sec)

mysql> drop index aaa on  stuinfo;
Query OK, 0 rows affected (0.23 sec)alter
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc stuinfo;
+------------+-----------------------------------+------+-----+---------+-------+
| Field      | Type                              | Null | Key | Default | Extra |
+------------+-----------------------------------+------+-----+---------+-------+
| stu_number | varchar(9)               mysql> show  index from stuinfo;
Empty set (0.00 sec)

         | YES  |     | NULL    |       |
| name       | char(14)                          | NO   |     |         |       |
| sex        | enum('boy','girl','no')           | NO   |     | boy     |       |
| class      | char(17)                          | YES  |     | nsd1000 |       |
| age        | int(2)                            | NO   |     | 19      |       |
| likes      | set('eat','sleeps','game','film') | YES  |     | NULL    |       |
+------------+-----------------------------------+------+-----+---------+-------+
6 rows in set (0.00 sec)
mysql> show  index from stuinfo;
Empty set (0.00 sec)biaoji


两种方式设置主键
mysql> create table t10(stu_id char(9)  primary key , name char(10) , age  int(2));
Query OK, 0 rows affected (0.32 sec)

mysql> desc t10;
+--------+----------+------+-----+---------+-------+
| Field  | Type     | Null | Key | Default | Extra |
+--------+----------+------+-----+---------+-------+
| stu_id | char(9)  | NO   | PRI | NULL    |       |
| name   | char(10) | YES  |     | NULL    |       |
| age    | int(2)   | YES  |     | NULL    |       |
+--------+----------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> create table t11(stu_id char(9) , name char(10) , age  int(2),primary key(stu_id));
Query OK, 0 rows affected (0.28 sec)

mysql> desc t11;
+--------+----------+------+-----+---------+-------+
| Field  | Type     | Null | Key | Default | Extra |
+--------+----------+------+-----+---------+-------+
| stu_id | char(9)  | NO   | PRI | NULL    |       |
| name   | char(10) | YES  |     | NULL    |       |
| age    | int(2)   | YES  |     | NULL    |       |
+--------+----------+------+-----+---------+-------+
3 rows in set (0.01 sec)


删除主键
mysql> alter  table t10 drop primary key;
Query OK, 0 rows affected (0.43 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc t10;
+--------+----------+------+-----+---------+-------+
| Field  | Type     | Null | Key | Default | Extra |
+--------+----------+------+-----+---------+-------+
| stu_id | char(9)  | NO   |     | NULL    |       |
| name   | char(10) | YES  |     | NULL    |       |
| age    | int(2)   | YES  |     | NULL    |       |
+--------+----------+------+-----+---------+-------+
3 rows in set (0.00 sec)


mysql> insert into t10  values("nsd","haio",21);                                             Query OK, 1 row affected (0.06 sec)

mysql> insert into t10  values("nsd","haiosa",21);
Query OK, 1 row affected (0.04 sec)

mysql> insert into t10  values("null","haiosa",21);
Query OK, 1 row affected (0.08 sec)

mysql> insert into t10  values(null,"haiosa",21);biaoji
ERROR 1048 (23000): Column 'stu_id' cannot be null
mysql> desc t10;
+--------+----------+------+-----+---------+-------+
| Field  | Type     | Null | Key | Default | Extra |
+--------+----------+------+-----+---------+-------+
| stu_id | char(9)  | NO   |     | NULL    |       |
| name   | char(10) | YES  |     | NULL    |       |
| age    | int(2)   | YES  |     | NULL    |       |ho
+--------+----------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> insert into t10  values("nsd","haiosa",21);
Query OK, 1 row affected (0.04 sec)

mysql> select * from  t10;
+--------+--------+------+
| stu_id | name   | age  |
+--------+--------+------+
| nsd    | haio   |   21 |
| nsd    | haiosa |   21 |
| null   | haiosa |   21 |
| nsd    | haiosa |   21 |
+--------+--------+------+
4 rows in set (0.00 sec)


在已经主键里创建主键字段

delete  from  t10;
  alter table t10 add primary key (stu_id);
desc t10;

mysql> delete  from  t10;
Query OK, 4 rows affected (0.04 sec)

mysql> desc t10;
+--------+----------+------+-----+---------+-------+
| Field  | Type     | Null | Key | Default | Extra |
+--------+----------+------+-----+---------+-------+
| stu_id | char(9)  | NO   |     | NULL    |       |
| name   | char(10) | YES  |     | NULL    |       |
| age    | int(2)   | YES  |     | NULL    |       |
+--------+----------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> select * from  t10;
Empty set (0.00 sec)

mysql> alter table t10 add primary key (stu_id);
Query OK, 0 rows affected (0.45 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc t10;
+--------+----------+------+-----+---------+-------+
| Field  | Type     | Null | Key | Default | Extra |                                 
+--------+----------+------+-----+---------+-------+
| stu_id | char(9)  | NO   | PRI | NULL    |       |
| name   | char(10) | YES  |     | NULL    |       |
| age    | int(2)   | YES  |     | NULL    |       |
+--------+----------+------+-----+---------+-------+
3 rows in set (0.00 sec)

创建复合主键:表中的多个字段一起做主键,赋值时,主键字段的值不同时重复

create table t13(
name char(15),
class char(15),
pay enum("yes","no"),
primary key (name,class)
);
mysql> create table t13(
    -> name char(15),
    -> class char(15),
    -> pay enum("yes","no"),
    -> primary key (name,class)
    -> );
Query OK, 0 rows affected (0.32 sec)

mysql> desc t13;
+-------+------------------+------+-----+---------+-------+
| Field | Type             | Null | Key | Default | Extra |
+-------+------------------+------+-----+---------+-------+
| name  | char(15)         | NO   | PRI | NULL    |       |
| class | char(15)         | NO   | PRI | NULL    |       |
| pay   | enum('yes','no') | YES  |     | NULL    |       |
+-------+------------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

但是不能下列方式创建复合主键
create table t13(
name char(15) primary key,
class char(15) primary key,
pay enum("yes","no")
);

PRI   PRImysql> create table t13(
    -> name char(15) primary key,
    -> class char(15) primary key,
    -> pay enum("yes","no")
    -> );
ERROR 1068 (42000): Multiple primary key defined

mysql> insert  into  t13 values("bob","nsd1804","yes");
Query OK, 1 row affected (0.06 sec)

mysql> insert  into  t13 values("bob","nsd1805","yes");
Query OK, 1 row affected (0.05 sec)

mysql> insert  into  t13 values("bob","nsd1804","no");
ERROR 1062 (23000): Duplicate entry 'bob-nsd1804' for key 'PRIMARY'
mysql> insert  into  t13 values("lucy","nsd1804","no");
Query OK, 1 row affected (0.07 sec)

mysql> select  *  from t13;
+------+---------+------+
| name | class   | pay  |
+------+---------+------+
| bob  | nsd1804 | yes  |
| bob  | nsd1805 | yes  |
| lucy | nsd1804 | no   |
+------+---------+------+
3 rows in set (0.00 sec)

name  class      pay
bob   nsd1804    yes 
bob   nsd1804    no
lucy  nsd1805    yes

删除复合键

alter table t12 drop primary key;

在已经有表中创建复合主键

delete *  from  t12;
alter table t12 add primary key (name,class);

##########################################################################

2018年 07月 12日 星期四 09:05:08 CST

批量更新表字段值

mysql> select * from t11;
+--------+-------+------+
| stu_id | name  | age  |
+--------+-------+------+
| hao    | nihao |   55 |
+--------+-------+------+
1 row in set (0.00 sec)

mysql> update t11 set stu_id="good"  where age=55;
Query OK, 1 row affected (0.04 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from t11;
+--------+-------+------+
| stu_id | name  | age  |
+--------+-------+------+
| good   | nihao |   55 |
+--------+-------+------+
1 row in set (0.00 sec)

mysql> update t11 set stu_id="good",name="hhhhhh"  where age=55;
Query OK, 1 row affected (0.05 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from t11;
+--------+--------+------+
| stu_id | name   | age  |
+--------+--------+------+
| good   | hhhhhh |   55 |
+--------+--------+------+
1 row in set (0.00 sec)

mysql> update t11 set stu_id="goodgood",name="haohaohaohaoah"  where age=55;
ERROR 1406 (22001): Data too long for column 'name' at row 1
mysql> update t11 set stu_id="goodgood",name="haohao"  where age=55;
Query OK, 1 row affected (0.05 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from t11;
+----------+--------+------+
| stu_id   | name   | age  |
+----------+--------+------+
| goodgood | haohao |   55 |
+----------+--------+------+
1 row in set (0.00 sec)

auto_increment:

mysql> create table t( id  int(2)  primary key auto_increment,  name char(15) not null ,  age tinyint(2)  unsigned  default 19, pay  float(7,2) default 26800);
Query OK, 0 rows affected (1.37 sec)


mysql> desc t;
+-------+---------------------+------+-----+----------+----------------+
| Field | Type                | Null | Key | Default  | Extra          |
+-------+---------------------+------+-----+----------+----------------+
| id    | int(2)              | NO   | PRI | NULL     | auto_increment |
| name  | char(15)            | NO   |     | NULL     |                |
| age   | tinyint(2) unsigned | YES  |     | 19       |                |
| pay   | float(7,2)          | YES  |     | 26800.00 |                |
+-------+---------------------+------+-----+----------+----------------+
4 rows in set (0.01 sec)

mysql> insert into t(name,age,pay)  values("tom",21,18888);
Query OK, 1 row affected (0.05 sec)


mysql> select *  from  t;
+----+------+------+----------+
| id | name | age  | pay      |
+----+------+------+----------+
|  1 | tom  |   21 | 18888.00 |
+----+------+------+----------+
1 row in set (0.00 sec)

mysql> insert into t(name,age,pay)  values("harry",26,18888);
Query OK, 1 row affected (0.07 sec)

mysql> select *  from  t;
+----+-------+------+----------+
| id | name  | age  | pay      |
+----+-------+------+----------+
|  1 | tom   |   21 | 18888.00 |
|  2 | harry |   26 | 18888.00 |
+----+-------+------+----------+
2 rows in set (0.00 sec)


mysql> insert into t values(7,"harry",26,18888);
Query OK, 1 row affected (0.05 sec)
+-------+---------------------+------+-----+----------+----------------+
| Field | Type                | Null | Key | Default  | Extra          |
+-------+---------------------+------+-----+----------+----------------+
| id    | int(2)              | NO   | PRI | NULL     | auto_increment |
| name  | char(15)            | NO   |     | NULL     |                |
| age   | tinyint(2) unsigned | YES  |     | 19       |                |
| pay   | float(7,2)          | YES  |     | 26800.00 |                |
+-------+---------------------+------+-----+----------+----------------+
4 rows in set (0.01 sec)

mysql> insert into t(name,age,pay)  values("tom",21,18888);
Query OK, 1 row affected (0.05 sec)

mysql> desc t;
+-------+---------------------+------+-----+----------+----------------+
| Field | Type                | Null | Key | Default  | Extra          |
+-------+---------------------+------+-----+----------+----------------+
| id    | int(2)              | NO   | PRI | NULL     | auto_increment |
| name  | char(15)            | NO   |     | NULL     |                |
| age   | tinyint(2) unsigned | YES  |     | 19       |                |
| pay   | float(7,2)          | YES  |     | 26800.00 |                |
+-------+---------------------+------+-----+----------+----------------+
4 rows in set (0.00 sec)

mysql> select *  from  t;
+----+-------+------+----------+
| id | name  | age  | pay      |
+----+-------+------+----------+
|  1 | tom   |   21 | 18888.00 |
|  2 | harry |   26 | 18888.00 |
|  7 | harry |   26 | 18888.00 |
+----+-------+------+----------+
3 rows in set (0.01 sec)

mysql> insert into t(name,age,pay)  values("ok",16,18888);
Query OK, 1 row affected (0.05 sec)

mysql> select *  from  t;
+----+-------+------+----------+
| id | name  | age  | pay      |
+----+-------+------+----------+
|  1 | tom   |   21 | 18888.00 |
|  2 | harry |   26 | 18888.00 |
|  7 | harry |   26 | 18888.00 |
|  8 | ok    |   16 | 18888.00 |
+----+-------+------+----------+
4 rows in set (0.00 sec)

mysql> insert into t values(null,"harry",26,18888);
Query OK, 1 row affected (0.05 sec)

mysql> select *  from  t;
+----+-------+------+----------+
| id | name  | age  | pay      |
+----+-------+------+----------+
|  1 | tom   |   21 | 18888.00 |
|  2 | harry |   26 | 18888.00 |
|  7 | harry |   26 | 18888.00 |
|  8 | ok    |   16 | 18888.00 |
|  9 | harry |   26 | 18888.00 |
+----+-------+------+----------+
5 rows in set (0.01 sec)

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

外键:让当前表字段的值在另一个表中字段值的范围内选择

使用外键的条件:
-表的存储引擎必须是innodb
-字段类型要一致
-被参照字段必须要是索引类型的一种 (primary key)


mysql> create table  yginfo (yg_id int(2) primary key auto_increment, name char(15))engine=innodb;
Query OK, 0 rows affected (0.61 sec)

mysql> desc yginfo;
+-------+----------+------+-----+---------+----------------+
| Field | Type     | Null | Key | Default | Extra          |
+-------+----------+------+-----+---------+----------------+
| yg_id | int(2)   | NO   | PRI | NULL    | auto_increment |
| name  | char(15) | YES  |     | NULL    |                |
+-------+----------+------+-----+---------+----------------+
2 rows in set (0.00 sec)


mysql> insert into yginfo(name) values("bob");
Query OK, 1 row affected (0.33 sec)

mysql> select *  from yginfo;
+-------+------+
| yg_id | name |
+-------+------+
|     1 | bob  |
+-------+------+
1 row in set (0.00 sec)

mysql> insert into yginfo(name) values("bob");
Query OK, 1 row affected (0.07 sec)

mysql> select *  from yginfo;
+-------+------+
| yg_id | name |
+-------+------+
|     1 | bob  |
|     2 | bob  |
+-------+------+
2 rows in set (0.00 sec)

mysql> insert into yginfo(name) values("lucy");
Query OK, 1 row affected (0.08 sec)

mysql> select *  from yginfo;
+-------+------+
| yg_id | name |
+-------+------+
|     1 | bob  |
|     2 | bob  |
|     3 | lucy |
+-------+------+
3 rows in set (0.00 sec)

mysql> create table gztab(gz_id int(2),pay float(7,2),foreign  key(gz_id)  references yginfo(yg_id) on delete cascade  on  update cascade)engine=innodb;
Query OK, 0 rows affected (0.30 sec)



mysql> desc gztab;
+-------+------------+------+-----+---------+-------+
| Field | Type       | Null | Key | Default | Extra |
+-------+------------+------+-----+---------+-------+
| gz_id | int(2)     | YES  | MUL | NULL    |       |
| pay   | float(7,2) | YES  |     | NULL    |       |
+-------+------------+------+-----+---------+-------+
2 rows in set (0.00 sec)

mysql> show  create  table gztab;
+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Table | Create Table                                                                                                                                                                                                                                                               |
+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| gztab | CREATE TABLE `gztab` (
  `gz_id` int(2) DEFAULT NULL,
  `pay` float(7,2) DEFAULT NULL,
  KEY `gz_id` (`gz_id`),
  CONSTRAINT `gztab_ibfk_1` FOREIGN KEY (`gz_id`) REFERENCES `yginfo` (`yg_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1 |
+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)


mysql> select *  from gztab;
Empty set (0.00 sec)


mysql> insert into gztab values (1,20000);
Query OK, 1 row affected (0.05 sec)

mysql> select * from gztab;
+-------+----------+
| gz_id | pay      |
+-------+----------+
|     1 | 20000.00 |
+-------+----------+
1 row in set (0.00 sec)

mysql> insert into gztab values (2,27000);
Query OK, 1 row affected (0.04 sec)

mysql> insert into gztab values (3,29900);
Query OK, 1 row affected (0.05 sec)

mysql> select * from gztab;
+-------+----------+
| gz_id | pay      |
+-------+----------+
|     1 | 20000.00 |
|     2 | 27000.00 |
|     3 | 29900.00 |
+-------+----------+
3 rows in set (0.00 sec)

mysql> insert into gztab values (4,89900);
ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails (`db3`.`gztab`, CONSTRAINT `gztab_ibfk_1` FOREIGN KEY (`gz_id`) REFERENCES `yginfo` (`yg_id`) ON DELETE CASCADE ON UPDATE CASCADE)


mysql> update yginfo set yg_id=7  where yg_id=2;
Query OK, 1 row affected (0.12 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select *  from  yginfo;
+-------+------+
| yg_id | name |
+-------+------+
|     1 | bob  |
|     3 | lucy |
|     7 | bob  |
+-------+------+
3 rows in set (0.00 sec)


mysql> select *  from  gztab;
+-------+----------+
| gz_id | pay      |
+-------+----------+
|     1 | 20000.00 |
|     7 | 27000.00 |
|     3 | 29900.00 |
+-------+----------+
3 rows in set (0.00 sec)

mysql> delete from yginfo where yg_id=3;     //Delete  from   表名;                    //删除表记录
Query OK, 1 row affected (0.06 sec)

mysql> select *  from  yginfo;
+-------+------+
| yg_id | name |
+-------+------+
|     1 | bob  |
|     7 | bob  |
+-------+------+
2 rows in set (0.00 sec)

mysql> select *  from  gztab;
+-------+----------+
| gz_id | pay      |
+-------+----------+
|     1 | 20000.00 |
|     7 | 27000.00 |
+-------+----------+
2 rows in set (0.00 sec)

######################################################


数据导入:把系统文件的内容存储到数据库服务器的表里. 有格式规律


数据导出:把数据库服务器的表里的记录存储到习题文件里


导入,导出数据文件存储路径  默认是 /var/lib/mysql-files


mysql>show variables like  "secure_file_priv";
 ----------------------->>/var/lib/mysql-files

mysql> show variables  like "secure_file_priv";
+------------------+-----------------------+
| Variable_name    | Value                 |
+------------------+-----------------------+
| secure_file_priv | /var/lib/mysql-files/ |
+------------------+-----------------------+
1 row in set (0.00 sec)



修改默认文件存储路径
[root@host50 ~]# mkdir  /mydata
[root@host50 ~]# chown  mysql  /mydata
[root@host50 ~]# vim /etc/my.cnf
[mysqld]
secure_file_priv="/mydata"
:x
systemctl  restart  mysqld

mysql> show variables  like "secure_file_priv";
+------------------+----------+
| Variable_name    | Value    |
+------------------+----------+
| secure_file_priv | /mydata/ |
+------------------+----------+
1 row in set (0.01 sec)

数据导入:
把系统文件拷贝指定的目录下
创建存储文件内容的表
导入数据(;命令格式)


数据库里执行命令加 system:
mysql> system  cp  /etc/passwd  /mydata
mysql> system ls  /mydata
passwd

create table db3.user(
name char(50),
password char(1),
uid int(2),
gid int(2),
comment varchar(150),
homedir  char(150),
shell char(150),
index(name)
);


mysql> load  data infile "/mydata/passwd" into table db3.user fields terminated by ":"  lines terminated by "\n";


mysql>  load  data infile "/mydata/passwd" into table db3.user fields terminated by ":"  lines terminated by "\n";
Query OK, 42 rows affected (0.07 sec)
Records: 42  Deleted: 0  Skipped: 0  Warnings: 0

mysql> select  *  from  user;
+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
| name                | password | uid   | gid   | comment                                                         | homedir                   | shell          |
+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
| root                | x        |     0 |     0 | root                                                            | /root                     | /bin/bash      |
| bin                 | x        |     1 |     1 | bin                                                             | /bin                      | /sbin/nologin  |
| daemon              | x        |     2 |     2 | daemon                                                          | /sbin                     | /sbin/nologin  |
| adm                 | x        |     3 |     4 | adm                                                             | /var/adm                  | /sbin/nologin  |
| lp                  | x        |     4 |     7 | lp                                                              | /var/spool/lpd            | /sbin/nologin  |
| sync                | x        |     5 |     0 | sync                                                            | /sbin                     | /bin/sync      |
| shutdown            | x        |     6 |     0 | shutdown                                                        | /sbin                     | /sbin/shutdown |
| halt                | x        |     7 |     0 | halt                                                            | /sbin                     | /sbin/halt     |
| mail                | x        |     8 |    12 | mail                                                            | /var/spool/mail           | /sbin/nologin  |
| operator            | x        |    11 |     0 | operator                                                        | /root                     | /sbin/nologin  |
| games               | x        |    12 |   100 | games                                                           | /usr/games                | /sbin/nologin  |
| ftp                 | x        |    14 |    50 | FTP User                                                        | /var/ftp                  | /sbin/nologin  |
| nobody              | x        |    99 |    99 | Nobody                                                          | /                         | /sbin/nologin  |
| systemd-network     | x        |   192 |   192 | systemd Network Management                                      | /                         | /sbin/nologin  |
| dbus                | x        |    81 |    81 | System message bus                                              | /                         | /sbin/nologin  |
| polkitd             | x        |   999 |   998 | User for polkitd                                                | /                         | /sbin/nologin  |
| libstoragemgmt      | x        |   998 |   996 | daemon account for libstoragemgmt                               | /var/run/lsm              | /sbin/nologin  |
| rpc                 | x        |    32 |    32 | Rpcbind Daemon                                                  | /var/lib/rpcbind          | /sbin/nologin  |
| colord              | x        |   997 |   995 | User for colord                                                 | /var/lib/colord           | /sbin/nologin  |
| saslauth            | x        |   996 |    76 | Saslauthd user                                                  | /run/saslauthd            | /sbin/nologin  |
| abrt                | x        |   173 |   173 |                                                                 | /etc/abrt                 | /sbin/nologin  |
| rtkit               | x        |   172 |   172 | RealtimeKit                                                     | /proc                     | /sbin/nologin  |
| radvd               | x        |    75 |    75 | radvd user                                                      | /                         | /sbin/nologin  |
| chrony              | x        |   995 |   993 |                                                                 | /var/lib/chrony           | /sbin/nologin  |
| tss                 | x        |    59 |    59 | Account used by the trousers package to sandbox the tcsd daemon | /dev/null                 | /sbin/nologin  |
| usbmuxd             | x        |   113 |   113 | usbmuxd user                                                    | /                         | /sbin/nologin  |
| geoclue             | x        |   994 |   991 | User for geoclue                                                | /var/lib/geoclue          | /sbin/nologin  |
| qemu                | x        |   107 |   107 | qemu user                                                       | /                         | /sbin/nologin  |
| rpcuser             | x        |    29 |    29 | RPC Service User                                                | /var/lib/nfs              | /sbin/nologin  |
| nfsnobody           | x        | 65534 | 65534 | Anonymous NFS User                                              | /var/lib/nfs              | /sbin/nologin  |
| setroubleshoot      | x        |   993 |   990 |                                                                 | /var/lib/setroubleshoot   | /sbin/nologin  |
| pulse               | x        |   171 |   171 | PulseAudio System Daemon                                        | /var/run/pulse            | /sbin/nologin  |
| gdm                 | x        |    42 |    42 |                                                                 | /var/lib/gdm              | /sbin/nologin  |
| gnome-initial-setup | x        |   992 |   987 |                                                                 | /run/gnome-initial-setup/ | /sbin/nologin  |
| sshd                | x        |    74 |    74 | Privilege-separated SSH                                         | /var/empty/sshd           | /sbin/nologin  |
| avahi               | x        |    70 |    70 | Avahi mDNS/DNS-SD Stack                                         | /var/run/avahi-daemon     | /sbin/nologin  |
| postfix             | x        |    89 |    89 |                                                                 | /var/spool/postfix        | /sbin/nologin  |
| ntp                 | x        |    38 |    38 |                                                                 | /etc/ntp                  | /sbin/nologin  |
| tcpdump             | x        |    72 |    72 |                                                                 | /                         | /sbin/nologin  |
| lisi                | x        |  1000 |  1000 | lisi                                                            | /home/lisi                | /bin/bash      |
| mysql               | x        |    27 |    27 | MySQL Server                                                    | /var/lib/mysql            | /bin/false     |
| apache              | x        |    48 |    48 | Apache                                                          | /usr/share/httpd          | /sbin/nologin  |
+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
42 rows in set (0.01 sec)

 
mysql> alter  table  user  add id int(5) primary key auto_increment first;
Query OK, 0 rows affected (0.68 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> select  *  from  user;
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
| id | name                | password | uid   | gid   | comment                                                         | homedir                   | shell          |
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
|  1 | root                | x        |     0 |     0 | root                                                            | /root                     | /bin/bash      |
|  2 | bin                 | x        |     1 |     1 | bin                                                             | /bin                      | /sbin/nologin  |
|  3 | daemon              | x        |     2 |     2 | daemon                                                          | /sbin                     | /sbin/nologin  |
|  4 | adm                 | x        |     3 |     4 | adm                                                             | /var/adm                  | /sbin/nologin  |
|  5 | lp                  | x        |     4 |     7 | lp                                                              | /var/spool/lpd            | /sbin/nologin  |
|  6 | sync                | x        |     5 |     0 | sync                                                            | /sbin                     | /bin/sync      |
|  7 | shutdown            | x        |     6 |     0 | shutdown                                                        | /sbin                     | /sbin/shutdown |
|  8 | halt                | x        |     7 |     0 | halt                                                            | /sbin                     | /sbin/halt     |
|  9 | mail                | x        |     8 |    12 | mail                                                            | /var/spool/mail           | /sbin/nologin  |
| 10 | operator            | x        |    11 |     0 | operator                                                        | /root                     | /sbin/nologin  |
| 11 | games               | x        |    12 |   100 | games                                                           | /usr/games                | /sbin/nologin  |
| 12 | ftp                 | x        |    14 |    50 | FTP User                                                        | /var/ftp                  | /sbin/nologin  |
| 13 | nobody              | x        |    99 |    99 | Nobody                                                          | /                         | /sbin/nologin  |
| 14 | systemd-network     | x        |   192 |   192 | systemd Network Management                                      | /                         | /sbin/nologin  |
| 15 | dbus                | x        |    81 |    81 | System message bus                                              | /                         | /sbin/nologin  |
| 16 | polkitd             | x        |   999 |   998 | User for polkitd                                                | /                         | /sbin/nologin  |
| 17 | libstoragemgmt      | x        |   998 |   996 | daemon account for libstoragemgmt                               | /var/run/lsm              | /sbin/nologin  |
| 18 | rpc                 | x        |    32 |    32 | Rpcbind Daemon                                                  | /var/lib/rpcbind          | /sbin/nologin  |
| 19 | colord              | x        |   997 |   995 | User for colord                                                 | /var/lib/colord           | /sbin/nologin  |
| 20 | saslauth            | x        |   996 |    76 | Saslauthd user                                                  | /run/saslauthd            | /sbin/nologin  |
| 21 | abrt                | x        |   173 |   173 |                                                                 | /etc/abrt                 | /sbin/nologin  |
| 22 | rtkit               | x        |   172 |   172 | RealtimeKit                                                     | /proc                     | /sbin/nologin  |
| 23 | radvd               | x        |    75 |    75 | radvd user                                                      | /                         | /sbin/nologin  |
| 24 | chrony              | x        |   995 |   993 |                                                                 | /var/lib/chrony           | /sbin/nologin  |
| 25 | tss                 | x        |    59 |    59 | Account used by the trousers package to sandbox the tcsd daemon | /dev/null                 | /sbin/nologin  |
| 26 | usbmuxd             | x        |   113 |   113 | usbmuxd user                                                    | /                         | /sbin/nologin  |
| 27 | geoclue             | x        |   994 |   991 | User for geoclue                                                | /var/lib/geoclue          | /sbin/nologin  |
| 28 | qemu                | x        |   107 |   107 | qemu user                                                       | /                         | /sbin/nologin  |
| 29 | rpcuser             | x        |    29 |    29 | RPC Service User                                                | /var/lib/nfs              | /sbin/nologin  |
| 30 | nfsnobody           | x        | 65534 | 65534 | Anonymous NFS User                                              | /var/lib/nfs              | /sbin/nologin  |
| 31 | setroubleshoot      | x        |   993 |   990 |                                                                 | /var/lib/setroubleshoot   | /sbin/nologin  |
| 32 | pulse               | x        |   171 |   171 | PulseAudio System Daemon                                        | /var/run/pulse            | /sbin/nologin  |
| 33 | gdm                 | x        |    42 |    42 |                                                                 | /var/lib/gdm              | /sbin/nologin  |
| 34 | gnome-initial-setup | x        |   992 |   987 |                                                                 | /run/gnome-initial-setup/ | /sbin/nologin  |
| 35 | sshd                | x        |    74 |    74 | Privilege-separated SSH                                         | /var/empty/sshd           | /sbin/nologin  |
| 36 | avahi               | x        |    70 |    70 | Avahi mDNS/DNS-SD Stack                                         | /var/run/avahi-daemon     | /sbin/nologin  |
| 37 | postfix             | x        |    89 |    89 |                                                                 | /var/spool/postfix        | /sbin/nologin  |
| 38 | ntp                 | x        |    38 |    38 |                                                                 | /etc/ntp                  | /sbin/nologin  |
| 39 | tcpdump             | x        |    72 |    72 |                                                                 | /                         | /sbin/nologin  |
| 40 | lisi                | x        |  1000 |  1000 | lisi                                                            | /home/lisi                | /bin/bash      |
| 41 | mysql               | x        |    27 |    27 | MySQL Server                                                    | /var/lib/mysql            | /bin/false     |
| 42 | apache              | x        |    48 |    48 | Apache                                                          | /usr/share/httpd          | /sbin/nologin  |
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
42 rows in set (0.01 sec)

数据导出
mysql>  sql

select *  from user into outfile "/mydata/t1.txt";

select *  from user into outfile "/mydata/t2.txt" fields terminated by "#";

select *  from user into outfile "/mydata/t2.txt" fields terminated by "#" lines terminated by "!!!!!!";


mysql> select *  from user into outfile "/mydata/t1.txt";outfile
Query OK, 42 rows affected (0.00 sec)

mysql> system  cat  /mydata/t1.txt
1	root	x	0	0	root	/root	/bin/bash
2	bin	x	1	1	bin	/bin	/sbin/nologin
3	daemon	x	2	2	daemon	/sbin	/sbin/nologin
4	adm	x	3	4	adm	/var/adm	/sbin/nologin
5	lp	x	4	7	lp	/var/spool/lpd	/sbin/nologin
6	sync	x	5	0	sync	/sbin	/bin/sync
7	shutdown	x	6	0	shutdown	/sbin	/sbin/shutdown
8	halt	x	7	0	halt	/sbin	/sbin/halt
9	mail	x	8	12	mail	/var/spool/mail	/sbin/nologin
10	operator	x	11	0	operator	/root	/sbin/nologin
11	games	x	12	100	games	/usr/games	/sbin/nologin
12	ftp	x	14	50	FTP User	/var/ftp	/sbin/nologin
13	nobody	x	99	99	Nobody	/	/sbin/nologin
14	systemd-network	x	192	192	systemd Network Management	/	/sbin/nologin
15	dbus	x	81	81	System message bus	/	/sbin/nologin
16	polkitd	x	999	998	User for polkitd	/	/sbin/nologin
17	libstoragemgmt	x	998	996	daemon account for libstoragemgmt	/var/run/lsm	/sbin/nologin
18	rpc	x	32	32	Rpcbind Daemon	/var/lib/rpcbind	/sbin/nologin
19	colord	x	997	995	User for colord	/var/lib/colord	/sbin/nologin
20	saslauth	x	996	76	Saslauthd user	/run/saslauthd	/sbin/nologin
21	abrt	x	173	173		/etc/abrt	/sbin/nologin
22	rtkit	x	172	172	RealtimeKit	/proc	/sbin/nologin
23	radvd	x	75	75	radvd user	/	/sbin/nologin
24	chrony	x	995	993		/var/lib/chrony	/sbin/nologin
25	tss	x	59	59	Account used by the trousers package to sandbox the tcsd daemon	/dev/null	/sbin/nologin
26	usbmuxd	x	113	113	usbmuxd user	/	/sbin/nologin
27	geoclue	x	994	991	User for geoclue	/var/lib/geoclue	/sbin/nologin
28	qemu	x	107	107	qemu user	/	/sbin/nologin
29	rpcuser	x	29	29	RPC Service User	/var/lib/nfs	/sbin/nologin
30	nfsnobody	x	65534	65534	Anonymous NFS User	/var/lib/nfs	/sbin/nologin
31	setroubleshoot	x	993	990		/var/lib/setroubleshoot	/sbin/nologin
32	pulse	x	171	171	PulseAudio System Daemon	/var/run/pulse	/sbin/nologin
33	gdm	x	42	42		/var/lib/gdm	/sbin/nologin
34	gnome-initial-setup	x	992	987		/run/gnome-initial-setup/	/sbin/nologin
35	sshd	x	74	74	Privilege-separated SSH	/var/empty/sshd	/sbin/nologin
36	avahi	x	70	70	Avahi mDNS/DNS-SD Stack	/var/run/avahi-daemon	/sbin/nologin
37	postfix	x	89	89		/var/spool/postfix	/sbin/nologin
38	ntp	x	38	38		/etc/ntp	/sbin/nologin
39	tcpdump	x	72	72		/	/sbin/nologin
40	lisi	x	1000	1000	lisi	/home/lisi	/bin/bash
41	mysql	x	27	27	MySQL Server	/var/lib/mysql	/bin/false
42	apache	x	48	48	Apache	/usr/share/httpd	/sbin/nologin


mysql> select *  from user into outfile "/mydata/t2.txt" fields terminated by "#";
Query OK, 42 rows affected (0.00 sec)

mysql> system  cat  /mydata/t2.txt
1#root#x#0#0#root#/root#/bin/bash
2#bin#x#1#1#bin#/bin#/sbin/nologin
3#daemon#x#2#2#daemon#/sbin#/sbin/nologin
4#adm#x#3#4#adm#/var/adm#/sbin/nologin
5#lp#x#4#7#lp#/var/spool/lpd#/sbin/nologin
6#sync#x#5#0#sync#/sbin#/bin/sync
7#shutdown#x#6#0#shutdown#/sbin#/sbin/shutdown
8#halt#x#7#0#halt#/sbin#/sbin/halt
9#mail#x#8#12#mail#/var/spool/mail#/sbin/nologin
10#operator#x#11#0#operator#/root#/sbin/nologin
11#games#x#12#100#games#/usr/games#/sbin/nologin
12#ftp#x#14#50#FTP User#/var/ftp#/sbin/nologin
13#nobody#x#99#99#Nobody#/#/sbin/nologin
14#systemd-network#x#192#192#systemd Network Management#/#/sbin/nologin
15#dbus#x#81#81#System message bus#/#/sbin/nologin
16#polkitd#x#999#998#User for polkitd#/#/sbin/nologin
17#libstoragemgmt#x#998#996#daemon account for libstoragemgmt#/var/run/lsm#/sbin/nologin
18#rpc#x#32#32#Rpcbind Daemon#/var/lib/rpcbind#/sbin/nologin
19#colord#x#997#995#User for colord#/var/lib/colord#/sbin/nologin
20#saslauth#x#996#76#Saslauthd user#/run/saslauthd#/sbin/nologin
21#abrt#x#173#173##/etc/abrt#/sbin/nologin
22#rtkit#x#172#172#RealtimeKit#/proc#/sbin/nologin
23#radvd#x#75#75#radvd user#/#/sbin/nologin
24#chrony#x#995#993##/var/lib/chrony#/sbin/nologin
25#tss#x#59#59#Account used by the trousers package to sandbox the tcsd daemon#/dev/null#/sbin/nologin
26#usbmuxd#x#113#113#usbmuxd user#/#/sbin/nologin
27#geoclue#x#994#991#User for geoclue#/var/lib/geoclue#/sbin/nologin
28#qemu#x#107#107#qemu user#/#/sbin/nologin
29#rpcuser#x#29#29#RPC Service User#/var/lib/nfs#/sbin/nologin
30#nfsnobody#x#65534#65534#Anonymous NFS User#/var/lib/nfs#/sbin/nologin
31#setroubleshoot#x#993#990##/var/lib/setroubleshoot#/sbin/nologin
32#pulse#x#171#171#PulseAudio System Daemon#/var/run/pulse#/sbin/nologin
33#gdm#x#42#42##/var/lib/gdm#/sbin/nologin
34#gnome-initial-setup#x#992#987##/run/gnome-initial-setup/#/sbin/nologin
35#sshd#x#74#74#Privilege-separated SSH#/var/empty/sshd#/sbin/nologin
36#avahi#x#70#70#Avahi mDNS/DNS-SD Stack#/var/run/avahi-daemon#/sbin/nologin
37#postfix#x#89#89##/var/spool/postfix#/sbin/nologin
38#ntp#x#38#38##/etc/ntp#/sbin/nologin
39#tcpdump#x#72#72##/#/sbin/nologin
40#lisi#x#1000#1000#lisi#/home/lisi#/bin/bash
41#mysql#x#27#27#MySQL Server#/var/lib/mysql#/bin/false
42#apache#x#48#48#Apache#/usr/share/httpd#/sbin/nologin

mysql> select *  from user into outfile "/mydata/t3.txt" fields terminated by "#" lines terminated by "!!!!!!";
Query OK, 42 rows affected (0.00 sec)

mysql> system  cat  /mydata/t3.txt
1#root#x#0#0#root#/root#/bin/bash!!!!!!2#bin#x#1#1#bin#/bin#/sbin/nologin!!!!!!3#daemon#x#2#2#daemon#/sbin#/sbin/nologin!!!!!!4#adm#x#3#4#adm#/var/adm#/sbin/nologin!!!!!!5#lp#x#4#7#lp#/var/spool/lpd#/sbin/nologin!!!!!!6#sync#x#5#0#sync#/sbin#/bin/sync!!!!!!7#shutdown#x#6#0#shutdown#/sbin#/sbin/shutdown!!!!!!8#halt#x#7#0#halt#/sbin#/sbin/halt!!!!!!9#mail#x#8#12#mail#/var/spool/mail#/sbin/nologin!!!!!!10#operator#x#11#0#operator#/root#/sbin/nologin!!!!!!11#games#x#12#100#games#/usr/games#/sbin/nologin!!!!!!12#ftp#x#14#50#FTP User#/var/ftp#/sbin/nologin!!!!!!13#nobody#x#99#99#Nobody#/#/sbin/nologin!!!!!!14#systemd-network#x#192#192#systemd Network Management#/#/sbin/nologin!!!!!!15#dbus#x#81#81#System message bus#/#/sbin/nologin!!!!!!16#polkitd#x#999#998#User for polkitd#/#/sbin/nologin!!!!!!17#libstoragemgmt#x#998#996#daemon account for libstoragemgmt#/var/run/lsm#/sbin/nologin!!!!!!18#rpc#x#32#32#Rpcbind Daemon#/var/lib/rpcbind#/sbin/nologin!!!!!!19#colord#x#997#995#User for colord#/var/lib/colord#/sbin/nologin!!!!!!20#saslauth#x#996#76#Saslauthd user#/run/saslauthd#/sbin/nologin!!!!!!21#abrt#x#173#173##/etc/abrt#/sbin/nologin!!!!!!22#rtkit#x#172#172#RealtimeKit#/proc#/sbin/nologin!!!!!!23#radvd#x#75#75#radvd user#/#/sbin/nologin!!!!!!24#chrony#x#995#993##/var/lib/chrony#/sbin/nologin!!!!!!25#tss#x#59#59#Account used by the trousers package to sandbox the tcsd daemon#/dev/null#/sbin/nologin!!!!!!26#usbmuxd#x#113#113#usbmuxd user#/#/sbin/nologin!!!!!!27#geoclue#x#994#991#User for geoclue#/var/lib/geoclue#/sbin/nologin!!!!!!28#qemu#x#107#107#qemu user#/#/sbin/nologin!!!!!!29#rpcuser#x#29#29#RPC Service User#/var/lib/nfs#/sbin/nologin!!!!!!30#nfsnobody#x#65534#65534#Anonymous NFS User#/var/lib/nfs#/sbin/nologin!!!!!!31#setroubleshoot#x#993#990##/var/lib/setroubleshoot#/sbin/nologin!!!!!!32#pulse#x#171#171#PulseAudio System Daemon#/var/run/pulse#/sbin/nologin!!!!!!33#gdm#x#42#42##/var/lib/gdm#/sbin/nologin!!!!!!34#gnome-initial-setup#x#992#987##/run/gnome-initial-setup/#/sbin/nologin!!!!!!35#sshd#x#74#74#Privilege-separated SSH#/var/empty/sshd#/sbin/nologin!!!!!!36#avahi#x#70#70#Avahi mDNS/DNS-SD Stack#/var/run/avahi-daemon#/sbin/nologin!!!!!!37#postfix#x#89#89##/var/spool/postfix#/sbin/nologin!!!!!!38#ntp#x#38#38##/etc/ntp#/sbin/nologin!!!!!!39#tcpdump#x#72#72##/#/sbin/nologin!!!!!!40#lisi#x#1000#1000#lisi#/home/lisi#/bin/bash!!!!!!41#mysql#x#27#27#MySQL Server#/var/lib/mysql#/bin/false!!!!!!42#apache#x#48#48#Apache#/usr/share/httpd#/sbin/nologin!!!!!!mysql> 

####################################################################################################################


添加一条新记录
insert into user values
(43,"ok","x",2000,2000,"student user","/home/ok","/bin/bahs");

mysql> insert into user values
    -> (43,"ok","x",2000,2000,"student user","/home/ok","/bin/bahs");
Query OK, 1 row affected (0.32 sec)

mysql> select  *  from user;
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
| id | name                | password | uid   | gid   | comment                                                         | homedir                   | shell          |
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
|  1 | root                | x        |     0 |     0 | root                                                            | /root                     | /bin/bash      |
|  2 | bin                 | x        |     1 |     1 | bin                                                             | /bin                      | /sbin/nologin  |
|  3 | daemon              | x        |     2 |     2 | daemon                                                          | /sbin                     | /sbin/nologin  |
|  4 | adm                 | x        |     3 |     4 | adm                                                             | /var/adm                  | /sbin/nologin  |
|  5 | lp                  | x        |     4 |     7 | lp                                                              | /var/spool/lpd            | /sbin/nologin  |
|  6 | sync                | x        |     5 |     0 | sync                                                            | /sbin                     | /bin/sync      |
|  7 | shutdown            | x        |     6 |     0 | shutdown                                                        | /sbin                     | /sbin/shutdown |
|  8 | halt                | x        |     7 |     0 | halt                                                            | /sbin                     | /sbin/halt     |
|  9 | mail                | x        |     8 |    12 | mail                                                            | /var/spool/mail           | /sbin/nologin  |
| 10 | operator            | x        |    11 |     0 | operator                                                        | /root                     | /sbin/nologin  |
| 11 | games               | x        |    12 |   100 | games                                                           | /usr/games                | /sbin/nologin  |
| 12 | ftp                 | x        |    14 |    50 | FTP User                                                        | /var/ftp                  | /sbin/nologin  |
| 13 | nobody              | x        |    99 |    99 | Nobody                                                          | /                         | /sbin/nologin  |
| 14 | systemd-network     | x        |   192 |   192 | systemd Network Management                                      | /                         | /sbin/nologin  |
| 15 | dbus                | x        |    81 |    81 | System message bus                                              | /                         | /sbin/nologin  |
| 16 | polkitd             | x        |   999 |   998 | User for polkitd                                                | /                         | /sbin/nologin  |
| 17 | libstoragemgmt      | x        |   998 |   996 | daemon account for libstoragemgmt                               | /var/run/lsm              | /sbin/nologin  |
| 18 | rpc                 | x        |    32 |    32 | Rpcbind Daemon                                                  | /var/lib/rpcbind          | /sbin/nologin  |
| 19 | colord              | x        |   997 |   995 | User for colord                                                 | /var/lib/colord           | /sbin/nologin  |
| 20 | saslauth            | x        |   996 |    76 | Saslauthd user                                                  | /run/saslauthd            | /sbin/nologin  |
| 21 | abrt                | x        |   173 |   173 |                                                                 | /etc/abrt                 | /sbin/nologin  |
| 22 | rtkit               | x        |   172 |   172 | RealtimeKit                                                     | /proc                     | /sbin/nologin  |
| 23 | radvd               | x        |    75 |    75 | radvd user                                                      | /                         | /sbin/nologin  |
| 24 | chrony              | x        |   995 |   993 |                                                                 | /var/lib/chrony           | /sbin/nologin  |
| 25 | tss                 | x        |    59 |    59 | Account used by the trousers package to sandbox the tcsd daemon | /dev/null                 | /sbin/nologin  |
| 26 | usbmuxd             | x        |   113 |   113 | usbmuxd user                                                    | /                         | /sbin/nologin  |
| 27 | geoclue             | x        |   994 |   991 | User for geoclue                                                | /var/lib/geoclue          | /sbin/nologin  |
| 28 | qemu                | x        |   107 |   107 | qemu user                                                       | /                         | /sbin/nologin  |
| 29 | rpcuser             | x        |    29 |    29 | RPC Service User                                                | /var/lib/nfs              | /sbin/nologin  |
| 30 | nfsnobody           | x        | 65534 | 65534 | Anonymous NFS User                                              | /var/lib/nfs              | /sbin/nologin  |
| 31 | setroubleshoot      | x        |   993 |   990 |                                                                 | /var/lib/setroubleshoot   | /sbin/nologin  |
| 32 | pulse               | x        |   171 |   171 | PulseAudio System Daemon                                        | /var/run/pulse            | /sbin/nologin  |
| 33 | gdm                 | x        |    42 |    42 |                                                                 | /var/lib/gdm              | /sbin/nologin  |
| 34 | gnome-initial-setup | x        |   992 |   987 |                                                                 | /run/gnome-initial-setup/ | /sbin/nologin  |
| 35 | sshd                | x        |    74 |    74 | Privilege-separated SSH                                         | /var/empty/sshd           | /sbin/nologin  |
| 36 | avahi               | x        |    70 |    70 | Avahi mDNS/DNS-SD Stack                                         | /var/run/avahi-daemon     | /sbin/nologin  |
| 37 | postfix             | x        |    89 |    89 |                                                                 | /var/spool/postfix        | /sbin/nologin  |
| 38 | ntp                 | x        |    38 |    38 |                                                                 | /etc/ntp                  | /sbin/nologin  |
| 39 | tcpdump             | x        |    72 |    72 |                                                                 | /                         | /sbin/nologin  |
| 40 | lisi                | x        |  1000 |  1000 | lisi                                                            | /home/lisi                | /bin/bash      |
| 41 | mysql               | x        |    27 |    27 | MySQL Server                                                    | /var/lib/mysql            | /bin/false     |
| 42 | apache              | x        |    48 |    48 | Apache                                                          | /usr/share/httpd          | /sbin/nologin  |
| 43 | ok                  | x        |  2000 |  2000 | student user                                                    | /home/ok                  | /bin/bahs      |
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
43 rows in set (0.00 sec)


添加多条新记录
insert into user values
(44,"ok","x",2000,2000,"student user","/home/ok","/bin/bash"),
(45,"ok","x",2000,2000,"student user","/home/ok","/bin/bash"),
(46,"ok","x",2000,2000,"student user","/home/ok","/bin/bash");

mysql> insert into user values
    -> (44,"ok","x",2000,2000,"student user","/home/ok","/bin/bash"),
    -> (45,"ok","x",2000,2000,"student user","/home/ok","/bin/bash"),
    -> (46,"ok","x",2000,2000,"student user","/home/ok","/bin/bash");
Query OK, 3 rows affected (0.05 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> select  *  from user;
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
| id | name                | password | uid   | gid   | comment                                                         | homedir                   | shell          |
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
|  1 | root                | x        |     0 |     0 | root                                                            | /root                     | /bin/bash      |
|  2 | bin                 | x        |     1 |     1 | bin                                                             | /bin                      | /sbin/nologin  |
|  3 | daemon              | x        |     2 |     2 | daemon                                                          | /sbin                     | /sbin/nologin  |
|  4 | adm                 | x        |     3 |     4 | adm                                                             | /var/adm                  | /sbin/nologin  |
|  5 | lp                  | x        |     4 |     7 | lp                                                              | /var/spool/lpd            | /sbin/nologin  |
|  6 | sync                | x        |     5 |     0 | sync                                                            | /sbin                     | /bin/sync      |
|  7 | shutdown            | x        |     6 |     0 | shutdown                                                        | /sbin                     | /sbin/shutdown |
|  8 | halt                | x        |     7 |     0 | halt                                                            | /sbin                     | /sbin/halt     |
|  9 | mail                | x        |     8 |    12 | mail                                                            | /var/spool/mail           | /sbin/nologin  |
| 10 | operator            | x        |    11 |     0 | operator                                                        | /root                     | /sbin/nologin  |
| 11 | games               | x        |    12 |   100 | games                                                           | /usr/games                | /sbin/nologin  |
| 12 | ftp                 | x        |    14 |    50 | FTP User                                                        | /var/ftp                  | /sbin/nologin  |
| 13 | nobody              | x        |    99 |    99 | Nobody                                                          | /                         | /sbin/nologin  |
| 14 | systemd-network     | x        |   192 |   192 | systemd Network Management                                      | /                         | /sbin/nologin  |
| 15 | dbus                | x        |    81 |    81 | System message bus                                              | /                         | /sbin/nologin  |
| 16 | polkitd             | x        |   999 |   998 | User for polkitd                                                | /                         | /sbin/nologin  |
| 17 | libstoragemgmt      | x        |   998 |   996 | daemon account for libstoragemgmt                               | /var/run/lsm              | /sbin/nologin  |
| 18 | rpc                 | x        |    32 |    32 | Rpcbind Daemon                                                  | /var/lib/rpcbind          | /sbin/nologin  |
| 19 | colord              | x        |   997 |   995 | User for colord                                                 | /var/lib/colord           | /sbin/nologin  |
| 20 | saslauth            | x        |   996 |    76 | Saslauthd user                                                  | /run/saslauthd            | /sbin/nologin  |
| 21 | abrt                | x        |   173 |   173 |                                                                 | /etc/abrt                 | /sbin/nologin  |
| 22 | rtkit               | x        |   172 |   172 | RealtimeKit                                                     | /proc                     | /sbin/nologin  |
| 23 | radvd               | x        |    75 |    75 | radvd user                                                      | /                         | /sbin/nologin  |
| 24 | chrony              | x        |   995 |   993 |                                                                 | /var/lib/chrony           | /sbin/nologin  |
| 25 | tss                 | x        |    59 |    59 | Account used by the trousers package to sandbox the tcsd daemon | /dev/null                 | /sbin/nologin  |
| 26 | usbmuxd             | x        |   113 |   113 | usbmuxd user                                                    | /                         | /sbin/nologin  |
| 27 | geoclue             | x        |   994 |   991 | User for geoclue                                                | /var/lib/geoclue          | /sbin/nologin  |
| 28 | qemu                | x        |   107 |   107 | qemu user                                                       | /                         | /sbin/nologin  |
| 29 | rpcuser             | x        |    29 |    29 | RPC Service User                                                | /var/lib/nfs              | /sbin/nologin  |
| 30 | nfsnobody           | x        | 65534 | 65534 | Anonymous NFS User                                              | /var/lib/nfs              | /sbin/nologin  |
| 31 | setroubleshoot      | x        |   993 |   990 |                                                                 | /var/lib/setroubleshoot   | /sbin/nologin  |
| 32 | pulse               | x        |   171 |   171 | PulseAudio System Daemon                                        | /var/run/pulse            | /sbin/nologin  |
| 33 | gdm                 | x        |    42 |    42 |                                                                 | /var/lib/gdm              | /sbin/nologin  |
| 34 | gnome-initial-setup | x        |   992 |   987 |                                                                 | /run/gnome-initial-setup/ | /sbin/nologin  |
| 35 | sshd                | x        |    74 |    74 | Privilege-separated SSH                                         | /var/empty/sshd           | /sbin/nologin  |
| 36 | avahi               | x        |    70 |    70 | Avahi mDNS/DNS-SD Stack                                         | /var/run/avahi-daemon     | /sbin/nologin  |
| 37 | postfix             | x        |    89 |    89 |                                                                 | /var/spool/postfix        | /sbin/nologin  |
| 38 | ntp                 | x        |    38 |    38 |                                                                 | /etc/ntp                  | /sbin/nologin  |
| 39 | tcpdump             | x        |    72 |    72 |                                                                 | /                         | /sbin/nologin  |
| 40 | lisi                | x        |  1000 |  1000 | lisi                                                            | /home/lisi                | /bin/bash      |
| 41 | mysql               | x        |    27 |    27 | MySQL Server                                                    | /var/lib/mysql            | /bin/false     |
| 42 | apache              | x        |    48 |    48 | Apache                                                          | /usr/share/httpd          | /sbin/nologin  |
| 43 | ok                  | x        |  2000 |  2000 | student user                                                    | /home/ok                  | /bin/bahs      |
| 44 | ok                  | x        |  2000 |  2000 | student user                                                    | /home/ok                  | /bin/bash      |
| 45 | ok                  | x        |  2000 |  2000 | student user                                                    | /home/ok                  | /bin/bash      |
| 46 | ok                  | x        |  2000 |  2000 | student user                                                    | /home/ok                  | /bin/bash      |
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
46 rows in set (0.00 sec)

insert  into  user (name,shell,uid)
values
("lucy","/bin/bash","1999");

mysql> insert  into  user (name,shell,uid)
    -> values
    -> ("lucy","/bin/bash","1999");
Query OK, 1 row affected (0.03 sec)

mysql> select  *  from user;
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
| id | name                | password | uid   | gid   | comment                                                         | homedir                   | shell          |
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
|  1 | root                | x        |     0 |     0 | root                                                            | /root                     | /bin/bash      |
|  2 | bin                 | x        |     1 |     1 | bin                                                             | /bin                      | /sbin/nologin  |
|  3 | daemon              | x        |     2 |     2 | daemon                                                          | /sbin                     | /sbin/nologin  |
|  4 | adm                 | x        |     3 |     4 | adm                                                             | /var/adm                  | /sbin/nologin  |
|  5 | lp                  | x        |     4 |     7 | lp                                                              | /var/spool/lpd            | /sbin/nologin  |
|  6 | sync                | x        |     5 |     0 | sync                                                            | /sbin                     | /bin/sync      |
|  7 | shutdown            | x        |     6 |     0 | shutdown                                                        | /sbin                     | /sbin/shutdown |
|  8 | halt                | x        |     7 |     0 | halt                                                            | /sbin                     | /sbin/halt     |
|  9 | mail                | x        |     8 |    12 | mail                                                            | /var/spool/mail           | /sbin/nologin  |
| 10 | operator            | x        |    11 |     0 | operator                                                        | /root                     | /sbin/nologin  |
| 11 | games               | x        |    12 |   100 | games                                                           | /usr/games                | /sbin/nologin  |
| 12 | ftp                 | x        |    14 |    50 | FTP User                                                        | /var/ftp                  | /sbin/nologin  |
| 13 | nobody              | x        |    99 |    99 | Nobody                                                          | /                         | /sbin/nologin  |
| 14 | systemd-network     | x        |   192 |   192 | systemd Network Management                                      | /                         | /sbin/nologin  |
| 15 | dbus                | x        |    81 |    81 | System message bus                                              | /                         | /sbin/nologin  |
| 16 | polkitd             | x        |   999 |   998 | User for polkitd                                                | /                         | /sbin/nologin  |
| 17 | libstoragemgmt      | x        |   998 |   996 | daemon account for libstoragemgmt                               | /var/run/lsm              | /sbin/nologin  |
| 18 | rpc                 | x        |    32 |    32 | Rpcbind Daemon                                                  | /var/lib/rpcbind          | /sbin/nologin  |
| 19 | colord              | x        |   997 |   995 | User for colord                                                 | /var/lib/colord           | /sbin/nologin  |
| 20 | saslauth            | x        |   996 |    76 | Saslauthd user                                                  | /run/saslauthd            | /sbin/nologin  |
| 21 | abrt                | x        |   173 |   173 |                                                                 | /etc/abrt                 | /sbin/nologin  |
| 22 | rtkit               | x        |   172 |   172 | RealtimeKit                                                     | /proc                     | /sbin/nologin  |
| 23 | radvd               | x        |    75 |    75 | radvd user                                                      | /                         | /sbin/nologin  |
| 24 | chrony              | x        |   995 |   993 |                                                                 | /var/lib/chrony           | /sbin/nologin  |
| 25 | tss                 | x        |    59 |    59 | Account used by the trousers package to sandbox the tcsd daemon | /dev/null                 | /sbin/nologin  |
| 26 | usbmuxd             | x        |   113 |   113 | usbmuxd user                                                    | /                         | /sbin/nologin  |
| 27 | geoclue             | x        |   994 |   991 | User for geoclue                                                | /var/lib/geoclue          | /sbin/nologin  |
| 28 | qemu                | x        |   107 |   107 | qemu user                                                       | /                         | /sbin/nologin  |
| 29 | rpcuser             | x        |    29 |    29 | RPC Service User                                                | /var/lib/nfs              | /sbin/nologin  |
| 30 | nfsnobody           | x        | 65534 | 65534 | Anonymous NFS User                                              | /var/lib/nfs              | /sbin/nologin  |
| 31 | setroubleshoot      | x        |   993 |   990 |                                                                 | /var/lib/setroubleshoot   | /sbin/nologin  |
| 32 | pulse               | x        |   171 |   171 | PulseAudio System Daemon                                        | /var/run/pulse            | /sbin/nologin  |
| 33 | gdm                 | x        |    42 |    42 |                                                                 | /var/lib/gdm              | /sbin/nologin  |
| 34 | gnome-initial-setup | x        |   992 |   987 |                                                                 | /run/gnome-initial-setup/ | /sbin/nologin  |
| 35 | sshd                | x        |    74 |    74 | Privilege-separated SSH                                         | /var/empty/sshd           | /sbin/nologin  |
| 36 | avahi               | x        |    70 |    70 | Avahi mDNS/DNS-SD Stack                                         | /var/run/avahi-daemon     | /sbin/nologin  |
| 37 | postfix             | x        |    89 |    89 |                                                                 | /var/spool/postfix        | /sbin/nologin  |
| 38 | ntp                 | x        |    38 |    38 |                                                                 | /etc/ntp                  | /sbin/nologin  |
| 39 | tcpdump             | x        |    72 |    72 |                                                                 | /                         | /sbin/nologin  |
| 40 | lisi                | x        |  1000 |  1000 | lisi                                                            | /home/lisi                | /bin/bash      |
| 41 | mysql               | x        |    27 |    27 | MySQL Server                                                    | /var/lib/mysql            | /bin/false     |
| 42 | apache              | x        |    48 |    48 | Apache                                                          | /usr/share/httpd          | /sbin/nologin  |
| 43 | ok                  | x        |  2000 |  2000 | student user                                                    | /home/ok                  | /bin/bahs      |
| 44 | ok                  | x        |  2000 |  2000 | student user                                                    | /home/ok                  | /bin/bash      |
| 45 | ok                  | x        |  2000 |  2000 | student user                                                    | /home/ok                  | /bin/bash      |
| 46 | ok                  | x        |  2000 |  2000 | student user                                                    | /home/ok                  | /bin/bash      |
| 47 | lucy                | NULL     |  1999 |  NULL | NULL                                                            | NULL                      | /bin/bash      |
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
47 rows in set (0.00 sec)

insert  into  user (name,shell,uid)
values
("lucy1","/bin/bash","1999"),
("lucy2","/bin/bash","1999"),
("lucy3","/bin/bash","1999");

mysql> insert  into  user (name,shell,uid)
    -> values
    -> ("lucy1","/bin/bash","1999"),
    -> ("lucy2","/bin/bash","1999"),
    -> ("lucy3","/bin/bash","1999");
Query OK, 3 rows affected (0.04 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> select  *  from user;
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
| id | name                | password | uid   | gid   | comment                                                         | homedir                   | shell          |
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
|  1 | root                | x        |     0 |     0 | root                                                            | /root                     | /bin/bash      |
|  2 | bin                 | x        |     1 |     1 | bin                                                             | /bin                      | /sbin/nologin  |
|  3 | daemon              | x        |     2 |     2 | daemon                                                          | /sbin                     | /sbin/nologin  |
|  4 | adm                 | x        |     3 |     4 | adm                                                             | /var/adm                  | /sbin/nologin  |
|  5 | lp                  | x        |     4 |     7 | lp                                                              | /var/spool/lpd            | /sbin/nologin  |
|  6 | sync                | x        |     5 |     0 | sync                                                            | /sbin                     | /bin/sync      |
|  7 | shutdown            | x        |     6 |     0 | shutdown                                                        | /sbin                     | /sbin/shutdown |
|  8 | halt                | x        |     7 |     0 | halt                                                            | /sbin                     | /sbin/halt     |
|  9 | mail                | x        |     8 |    12 | mail                                                            | /var/spool/mail           | /sbin/nologin  |
| 10 | operator            | x        |    11 |     0 | operator                                                        | /root                     | /sbin/nologin  |
| 11 | games               | x        |    12 |   100 | games                                                           | /usr/games                | /sbin/nologin  |
| 12 | ftp                 | x        |    14 |    50 | FTP User                                                        | /var/ftp                  | /sbin/nologin  |
| 13 | nobody              | x        |    99 |    99 | Nobody                                                          | /                         | /sbin/nologin  |
| 14 | systemd-network     | x        |   192 |   192 | systemd Network Management                                      | /                         | /sbin/nologin  |
| 15 | dbus                | x        |    81 |    81 | System message bus                                              | /                         | /sbin/nologin  |
| 16 | polkitd             | x        |   999 |   998 | User for polkitd                                                | /                         | /sbin/nologin  |
| 17 | libstoragemgmt      | x        |   998 |   996 | daemon account for libstoragemgmt                               | /var/run/lsm              | /sbin/nologin  |
| 18 | rpc                 | x        |    32 |    32 | Rpcbind Daemon                                                  | /var/lib/rpcbind          | /sbin/nologin  |
| 19 | colord              | x        |   997 |   995 | User for colord                                                 | /var/lib/colord           | /sbin/nologin  |
| 20 | saslauth            | x        |   996 |    76 | Saslauthd user                                                  | /run/saslauthd            | /sbin/nologin  |
| 21 | abrt                | x        |   173 |   173 |                                                                 | /etc/abrt                 | /sbin/nologin  |
| 22 | rtkit               | x        |   172 |   172 | RealtimeKit                                                     | /proc                     | /sbin/nologin  |
| 23 | radvd               | x        |    75 |    75 | radvd user                                                      | /                         | /sbin/nologin  |
| 24 | chrony              | x        |   995 |   993 |                                                                 | /var/lib/chrony           | /sbin/nologin  |
| 25 | tss                 | x        |    59 |    59 | Account used by the trousers package to sandbox the tcsd daemon | /dev/null                 | /sbin/nologin  |
| 26 | usbmuxd             | x        |   113 |   113 | usbmuxd user                                                    | /                         | /sbin/nologin  |
| 27 | geoclue             | x        |   994 |   991 | User for geoclue                                                | /var/lib/geoclue          | /sbin/nologin  |
| 28 | qemu                | x        |   107 |   107 | qemu user                                                       | /                         | /sbin/nologin  |
| 29 | rpcuser             | x        |    29 |    29 | RPC Service User                                                | /var/lib/nfs              | /sbin/nologin  |
| 30 | nfsnobody           | x        | 65534 | 65534 | Anonymous NFS User                                              | /var/lib/nfs              | /sbin/nologin  |
| 31 | setroubleshoot      | x        |   993 |   990 |                                                                 | /var/lib/setroubleshoot   | /sbin/nologin  |
| 32 | pulse               | x        |   171 |   171 | PulseAudio System Daemon                                        | /var/run/pulse            | /sbin/nologin  |
| 33 | gdm                 | x        |    42 |    42 |                                                                 | /var/lib/gdm              | /sbin/nologin  |
| 34 | gnome-initial-setup | x        |   992 |   987 |                                                                 | /run/gnome-initial-setup/ | /sbin/nologin  |
| 35 | sshd                | x        |    74 |    74 | Privilege-separated SSH                                         | /var/empty/sshd           | /sbin/nologin  |
| 36 | avahi               | x        |    70 |    70 | Avahi mDNS/DNS-SD Stack                                         | /var/run/avahi-daemon     | /sbin/nologin  |
| 37 | postfix             | x        |    89 |    89 |                                                                 | /var/spool/postfix        | /sbin/nologin  |
| 38 | ntp                 | x        |    38 |    38 |                                                                 | /etc/ntp                  | /sbin/nologin  |
| 39 | tcpdump             | x        |    72 |    72 |                                                                 | /                         | /sbin/nologin  |
| 40 | lisi                | x        |  1000 |  1000 | lisi                                                            | /home/lisi                | /bin/bash      |
| 41 | mysql               | x        |    27 |    27 | MySQL Server                                                    | /var/lib/mysql            | /bin/false     |
| 42 | apache              | x        |    48 |    48 | Apache                                                          | /usr/share/httpd          | /sbin/nologin  |
| 43 | ok                  | x        |  2000 |  2000 | student user                                                    | /home/ok                  | /bin/bahs      |
| 44 | ok                  | x        |  2000 |  2000 | student user                                                    | /home/ok                  | /bin/bash      |
| 45 | ok                  | x        |  2000 |  2000 | student user                                                    | /home/ok                  | /bin/bash      |
| 46 | ok                  | x        |  2000 |  2000 | student user                                                    | /home/ok                  | /bin/bash      |
| 47 | lucy                | NULL     |  1999 |  NULL | NULL                                                            | NULL                      | /bin/bash      |
| 48 | lucy1               | NULL     |  1999 |  NULL | NULL                                                            | NULL                      | /bin/bash      |
| 49 | lucy2               | NULL     |  1999 |  NULL | NULL                                                            | NULL                      | /bin/bash      |
| 50 | lucy3               | NULL     |  1999 |  NULL | NULL                                                            | NULL                      | /bin/bash      |
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
50 rows in set (0.00 sec)


mysql> select name,uid,shell from user;
+---------------------+-------+----------------+
| name                | uid   | shell          |
+---------------------+-------+----------------+
| root                |     0 | /bin/bash      |
| bin                 |     1 | /sbin/nologin  |
| daemon              |     2 | /sbin/nologin  |
| adm                 |     3 | /sbin/nologin  |
| lp                  |     4 | /sbin/nologin  |
| sync                |     5 | /bin/sync      |
| shutdown            |     6 | /sbin/shutdown |
| halt                |     7 | /sbin/halt     |
| mail                |     8 | /sbin/nologin  |
| operator            |    11 | /sbin/nologin  |
| games               |    12 | /sbin/nologin  |
| ftp                 |    14 | /sbin/nologin  |
| nobody              |    99 | /sbin/nologin  |
| systemd-network     |   192 | /sbin/nologin  |
| dbus                |    81 | /sbin/nologin  |
| polkitd             |   999 | /sbin/nologin  |
| libstoragemgmt      |   998 | /sbin/nologin  |
| rpc                 |    32 | /sbin/nologin  |
| colord              |   997 | /sbin/nologin  |
| saslauth            |   996 | /sbin/nologin  |
| abrt                |   173 | /sbin/nologin  |
| rtkit               |   172 | /sbin/nologin  |
| radvd               |    75 | /sbin/nologin  |
| chrony              |   995 | /sbin/nologin  |
| tss                 |    59 | /sbin/nologin  |
| usbmuxd             |   113 | /sbin/nologin  |
| geoclue             |   994 | /sbin/nologin  |
| qemu                |   107 | /sbin/nologin  |
| rpcuser             |    29 | /sbin/nologin  |
| nfsnobody           | 65534 | /sbin/nologin  |
| setroubleshoot      |   993 | /sbin/nologin  |
| pulse               |   171 | /sbin/nologin  |
| gdm                 |    42 | /sbin/nologin  |
| gnome-initial-setup |   992 | /sbin/nologin  |
| sshd                |    74 | /sbin/nologin  |
| avahi               |    70 | /sbin/nologin  |
| postfix             |    89 | /sbin/nologin  |
| ntp                 |    38 | /sbin/nologin  |
| tcpdump             |    72 | /sbin/nologin  |
| lisi                |  1000 | /bin/bash      |
| mysql               |    27 | /bin/false     |
| apache              |    48 | /sbin/nologin  |
| ok                  |  2000 | /bin/bahs      |
| ok                  |  2000 | /bin/bash      |
| ok                  |  2000 | /bin/bash      |
| ok                  |  2000 | /bin/bash      |
| lucy                |  1999 | /bin/bash      |
| lucy1               |  1999 | /bin/bash      |
| lucy2               |  1999 | /bin/bash      |
| lucy3               |  1999 | /bin/bash      |
+---------------------+-------+----------------+
50 rows in set (0.00 sec)

mysql> select name,uid,shell from user where id=1;
+------+------+-----------+
| name | uid  | shell     |
+------+------+-----------+
| root |    0 | /bin/bash |
+------+------+-----------+
1 row in set (0.00 sec)

mysql> select name,uid,shell from user where id<6;
+--------+------+---------------+
| name   | uid  | shell         |
+--------+------+---------------+
| root   |    0 | /bin/bash     |
| bin    |    1 | /sbin/nologin |
| daemon |    2 | /sbin/nologin |
| adm    |    3 | /sbin/nologin |
| lp     |    4 | /sbin/nologin |
+--------+------+---------------+
5 rows in set (0.00 sec)

mysql> select name,uid,shell from user where id>=6;
+---------------------+-------+----------------+
| name                | uid   | shell          |
+---------------------+-------+----------------+
| sync                |     5 | /bin/sync      |
| shutdown            |     6 | /sbin/shutdown |
| halt                |     7 | /sbin/halt     |
| mail                |     8 | /sbin/nologin  |
| operator            |    11 | /sbin/nologin  |
| games               |    12 | /sbin/nologin  |
| ftp                 |    14 | /sbin/nologin  |
| nobody              |    99 | /sbin/nologin  |
| systemd-network     |   192 | /sbin/nologin  |
| dbus                |    81 | /sbin/nologin  |
| polkitd             |   999 | /sbin/nologin  |
| libstoragemgmt      |   998 | /sbin/nologin  |
| rpc                 |    32 | /sbin/nologin  |
| colord              |   997 | /sbin/nologin  |
| saslauth            |   996 | /sbin/nologin  |
| abrt                |   173 | /sbin/nologin  |
| rtkit               |   172 | /sbin/nologin  |
| radvd               |    75 | /sbin/nologin  |
| chrony              |   995 | /sbin/nologin  |
| tss                 |    59 | /sbin/nologin  |
| usbmuxd             |   113 | /sbin/nologin  |
| geoclue             |   994 | /sbin/nologin  |
| qemu                |   107 | /sbin/nologin  |
| rpcuser             |    29 | /sbin/nologin  |
| nfsnobody           | 65534 | /sbin/nologin  |
| setroubleshoot      |   993 | /sbin/nologin  |
| pulse               |   171 | /sbin/nologin  |
| gdm                 |    42 | /sbin/nologin  |
| gnome-initial-setup |   992 | /sbin/nologin  |
| sshd                |    74 | /sbin/nologin  |
| avahi               |    70 | /sbin/nologin  |
| postfix             |    89 | /sbin/nologin  |
| ntp                 |    38 | /sbin/nologin  |
| tcpdump             |    72 | /sbin/nologin  |
| lisi                |  1000 | /bin/bash      |
| mysql               |    27 | /bin/false     |
| apache              |    48 | /sbin/nologin  |
| ok                  |  2000 | /bin/bahs      |
| ok                  |  2000 | /bin/bash      |
| ok                  |  2000 | /bin/bash      |
| ok                  |  2000 | /bin/bash      |
| lucy                |  1999 | /bin/bash      |
| lucy1               |  1999 | /bin/bash      |
| lucy2               |  1999 | /bin/bash      |
| lucy3               |  1999 | /bin/bash      |
+---------------------+-------+----------------+
45 rows in set (0.00 sec)

mysql> select name,uid,shell from user where id<=6;
+--------+------+---------------+
| name   | uid  | shell         |
+--------+------+---------------+
| root   |    0 | /bin/bash     |
| bin    |    1 | /sbin/nologin |
| daemon |    2 | /sbin/nologin |
| adm    |    3 | /sbin/nologin |
| lp     |    4 | /sbin/nologin |
| sync   |    5 | /bin/sync     |
+--------+------+---------------+
6 rows in set (0.00 sec)

mysql> select name,uid,shell from user where shell="/bin/bash";
+-------+------+-----------+
| name  | uid  | shell     |
+-------+------+-----------+
| root  |    0 | /bin/bash |
| lisi  | 1000 | /bin/bash |
| ok    | 2000 | /bin/bash |
| ok    | 2000 | /bin/bash |
| ok    | 2000 | /bin/bash |
| lucy  | 1999 | /bin/bash |
| lucy1 | 1999 | /bin/bash |
| lucy2 | 1999 | /bin/bash |
| lucy3 | 1999 | /bin/bash |
+-------+------+-----------+
9 rows in set (0.00 sec)


更新记录字段的值　update 

update 表　set 字段名＝值，字段名＝值，　．．．where 条件；

删除记录 delete (删除表里的行)
delete from  表　where 条件；

匹配条件的表示方式（）
数值比较　　＞　　＞＝　　＜　　＜＝　　＝　　！＝
where  字段名　符号　数值

字符比较



mysql>  insert into user(id ,name) values(51,""),(52,"null"),(53,null);
Query OK, 3 rows affected (0.08 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> select id,name from user where id>50;
+----+------+
| id | name |
+----+------+
| 51 　|      　　|
| 52 | null |
| 53 | NULL |
+----+------+
3 rows in set (0.00 sec)


mysql> select id,name from user where name is null;
+----+------+
| id | name |
+----+------+
| 53 | NULL |
+----+------+
1 row in set (0.00 sec)


mysql> update user set password=null where name="bin";
Query OK, 1 row affected (0.28 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from user where name="bin";
+----+------+----------+------+------+---------+---------+---------------+
| id | name | password | uid  | gid  | comment | homedir | shell         |
+----+------+----------+------+------+---------+---------+---------------+
|  2 | bin  | NULL     |    1 | 1000 | bin     | /bin    | /sbin/nologin |
+----+------+----------+------+------+---------+---------+---------------+
1 row in set (0.00 sec)

（）用来提高优先级

mysql> select name ,uid  from user  where name="root" or name="bin" and uid=1;
+------+------+
| name | uid  |
+------+------+
| bin  |    1 |
| root |    0 |
+------+------+
2 rows in set (0.00 sec)

mysql> select name ,uid  from user  where (name="root" or name="bin") and uid=1;
+------+------+
| name | uid  |
+------+------+
| bin  |    1 |
+------+------+
1 row in set (0.00 sec)


mysql> select  name,uid from  user  where uid in(1,7,8,55,1000);
+------+------+
| name | uid  |
+------+------+
| bin  |    1 |
| halt |    7 |
| mail |    8 |
| lisi | 1000 |
+------+------+
4 rows in set (0.00 sec)

mysql> select  name,shell  from user where shell not in ("/bin/bash","/sbin/nologin");
+----------+----------------+
| name     | shell          |
+----------+----------------+
| sync     | /bin/sync      |
| shutdown | /sbin/shutdown |
| halt     | /sbin/halt     |
| mysql    | /bin/false     |
+----------+----------------+
4 rows in set (0.00 sec)


mysql> select name from user where name in ("root","sync","lucy");
+------+
| name |
+------+
| lucy |
| root |
| sync |
+------+
3 rows in set (0.00 sec)


mysql> select name,id from user where id between 1 and 10 ;
+----------+----+
| name     | id |
+----------+----+
| root     |  1 |
| bin      |  2 |
| daemon   |  3 |
| adm      |  4 |
| lp       |  5 |
| sync     |  6 |
| shutdown |  7 |
| halt     |  8 |
| mail     |  9 |
| operator | 10 |
+----------+----+
10 rows in set (0.00 sec)

mysql> select   *  from user where  uid between  10 and 20;
+----+----------+----------+------+------+----------+------------+---------------+
| id | name     | password | uid  | gid  | comment  | homedir    | shell         |
+----+----------+----------+------+------+----------+------------+---------------+
| 10 | operator | A        |   11 | 1000 | operator | /root      | /sbin/nologin |
| 11 | games    | A        |   12 | 1000 | games    | /usr/games | /sbin/nologin |
| 12 | ftp      | A        |   14 | 1000 | FTP User | /var/ftp   | /sbin/nologin |
+----+----------+----------+------+------+----------+------------+---------------+
3 rows in set (0.00 sec)


mysql> select * from user  where uid>=10  and uid <=20;
+----+----------+----------+------+------+----------+------------+---------------+
| id | name     | password | uid  | gid  | comment  | homedir    | shell         |
+----+----------+----------+------+------+----------+------------+---------------+
| 10 | operator | A        |   11 | 1000 | operator | /root      | /sbin/nologin |
| 11 | games    | A        |   12 | 1000 | games    | /usr/games | /sbin/nologin |
| 12 | ftp      | A        |   14 | 1000 | FTP User | /var/ftp   | /sbin/nologin |
+----+----------+----------+------+------+----------+------------+---------------+
3 rows in set (0.00 sec)


distinct 字段名　　　／／　去重显示

mysql> select  distinct shell from  user;
+----------------+
| shell          |
+----------------+
| /bin/bash      |
| /sbin/nologin  |
| /bin/sync      |
| /sbin/shutdown |
| /sbin/halt     |
| /bin/false     |
| NULL           |
+----------------+
7 rows in set (0.01 sec)


mysql> select shell from user where uid <= 500;
+----------------+
| shell          |
+----------------+
| /bin/bash      |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /bin/sync      |
| /sbin/shutdown |
| /sbin/halt     |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /sbin/nologin  |
| /bin/false     |
| /sbin/nologin  |
+----------------+
32 rows in set (0.00 sec)


mysql> select  distinct shell from user where uid <= 500;
+----------------+
| shell          |
+----------------+
| /bin/bash      |
| /sbin/nologin  |
| /bin/sync      |
| /sbin/shutdown |
| /sbin/halt     |
| /bin/false     |
+----------------+
6 rows in set (0.00 sec)

#############################################################


查看mysql历史记录:

查看设置mysql genneral log


smysql> show VARIABLES like '%general_log%';

mysql> set GLOBAL general_log = off;// on-打开; off-关闭

general_log ON
general_log_file    /var/log/mysql/query.log


############################################################################

2018年 07月 14日 星期六 14:32:29 CST

mysql> create table  b4 select *  from teadb.usertab;
Query OK, 42 rows affected (0.55 sec)
Records: 42  Duplicates: 0  Warnings: 0

mysql> select  *  from b4;
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
| id | name                | password | uid   | gid   | comment                                                         | homedir                   | shell          |
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+ 
|  1 | root                | x        | 0     | 0     | root                                                            | /root                     | /bin/bash      |
|  2 | bin                 | x        | 1     | 1     | bin                                                             | /bin                      | /sbin/nologin  |
|  3 | daemon              | x        | 2     | 2     | daemon                                                          | /sbin                     | /sbin/nologin  |
|  4 | adm                 | x        | 3     | 4     | adm                                                             | /var/adm                  | /sbin/nologin  |
|  5 | lp                  | x        | 4     | 7     | lp                                                              | /var/spool/lpd            | /sbin/nologin  |
|  6 | sync                | x        | 5     | 0     | sync                                                            | /sbin                     | /bin/sync      |
|  7 | shutdown            | x        | 6     | 0     | shutdown                                                        | /sbin                     | /sbin/shutdown |
|  8 | halt                | x        | 7     | 0     | halt                                                            | /sbin                     | /sbin/halt     |
|  9 | mail                | x        | 8     | 12    | mail                                                            | /var/spool/mail           | /sbin/nologin  |
| 10 | operator            | x        | 11    | 0     | operator                                                        | /root                     | /sbin/nologin  |
| 11 | games               | x        | 12    | 100   | games                                                           | /root                     | /sbin/nologin  |
| 12 | ftp                 | x        | 14    | 50    | FTP User                                                        | /var/ftp                  | /sbin/nologin  |
| 13 | nobody              | x        | 99    | 99    | Nobody                                                          | /                         | /sbin/nologin  |
| 14 | systemd-network     | x        | 192   | 192   | systemd Network Management                                      | /root                     | /sbin/nologin  |
| 15 | dbus                | x        | 81    | 81    | System message bus                                              | /                         | /sbin/nologin  |
| 16 | polkitd             | x        | 999   | 998   | User for polkitd                                                | /                         | /sbin/nologin  |
| 17 | libstoragemgmt      | x        | 998   | 996   | daemon account for libstoragemgmt                               | /var/run/lsm              | /sbin/nologin  |
| 18 | rpc                 | x        | 32    | 32    | Rpcbind Daemon                                                  | /var/lib/rpcbind          | /sbin/nologin  |
| 19 | colord              | x        | 997   | 995   | User for colord                                                 | /var/lib/colord           | /sbin/nologin  |
| 20 | saslauth            | x        | 996   | 76    | Saslauthd user                                                  | /run/saslauthd            | /sbin/nologin  |
| 21 | abrt                | x        | 173   | 173   |                                                                 | /root                     | /sbin/nologin  |
| 22 | rtkit               | x        | 172   | 172   | RealtimeKit                                                     | /root                     | /sbin/nologin  |
| 23 | radvd               | x        | 75    | 75    | radvd user                                                      | /                         | /sbin/nologin  |
| 24 | chrony              | x        | 995   | 993   |                                                                 | /var/lib/chrony           | /sbin/nologin  |
| 25 | tss                 | x        | 59    | 59    | Account used by the trousers package to sandbox the tcsd daemon | /dev/null                 | /sbin/nologin  |
| 26 | usbmuxd             | x        | 113   | 113   | usbmuxd user                                                    | /root                     | /sbin/nologin  |
| 27 | geoclue             | x        | 994   | 991   | User for geoclue                                                | /var/lib/geoclue          | /sbin/nologin  |
| 28 | qemu                | x        | 107   | 107   | qemu user                                                       | /root                     | /sbin/nologin  |
| 29 | rpcuser             | x        | 29    | 29    | RPC Service User                                                | /var/lib/nfs              | /sbin/nologin  |
| 30 | nfsnobody           | x        | 65534 | 65534 | Anonymous NFS User                                              | /var/lib/nfs              | /sbin/nologin  |
| 31 | setroubleshoot      | x        | 993   | 990   |                                                                 | /var/lib/setroubleshoot   | /sbin/nologin  |
| 32 | pulse               | x        | 171   | 171   | PulseAudio System Daemon                                        | /root                     | /sbin/nologin  |
| 33 | gdm                 | x        | 42    | 42    |                                                                 | /var/lib/gdm              | /sbin/nologin  |
| 34 | gnome-initial-setup | x        | 992   | 987   |                                                                 | /run/gnome-initial-setup/ | /sbin/nologin  |
| 35 | sshd                | x        | 74    | 74    | Privilege-separated SSH                                         | /var/empty/sshd           | /sbin/nologin  |
| 36 | avahi               | x        | 70    | 70    | Avahi mDNS/DNS-SD Stack                                         | /var/run/avahi-daemon     | /sbin/nologin  |
| 37 | postfix             | x        | 89    | 89    |                                                                 | /var/spool/postfix        | /sbin/nologin  |
| 38 | ntp                 | x        | 38    | 38    |                                                                 | /etc/ntp                  | /sbin/nologin  |
| 39 | tcpdump             | x        | 72    | 72    |                                                                 | /                         | /sbin/nologin  |
| 40 | lisi                | x        | 1000  | 1000  | lisi                                                            | /home/lisi                | /bin/bash      |
| 41 | mysql               | x        | 27    | 27    | MySQL Server                                                    | /var/lib/mysql            | /bin/false     |
| 42 | apache              | x        | 48    | 48    | Apache                                                          | /usr/share/httpd          | /sbin/nologin  |
+----+---------------------+----------+-------+-------+-----------------------------------------------------------------+---------------------------+----------------+
42 rows in set (0.00 sec)

mysql> 
mysql> create table b5 select id,name,uid from b4  order by uid;
Query OK, 42 rows affected (0.29 sec)
Records: 42  Duplicates: 0  Warnings: 0

mysql> select  *  from b5;
+----+---------------------+-------+
| id | name                | uid   |
+----+---------------------+-------+
|  1 | root                | 0     |
|  2 | bin                 | 1     |
| 40 | lisi                | 1000  |
| 28 | qemu                | 107   |
| 10 | operator            | 11    |
| 26 | usbmuxd             | 113   |
| 11 | games               | 12    |
| 12 | ftp                 | 14    |
| 32 | pulse               | 171   |
| 22 | rtkit               | 172   |
| 21 | abrt                | 173   |
| 14 | systemd-network     | 192   |
|  3 | daemon              | 2     |
| 41 | mysql               | 27    |
| 29 | rpcuser             | 29    |
|  4 | adm                 | 3     |
| 18 | rpc                 | 32    |
| 38 | ntp                 | 38    |
|  5 | lp                  | 4     |
| 33 | gdm                 | 42    |
| 42 | apache              | 48    |
|  6 | sync                | 5     |
| 25 | tss                 | 59    |
|  7 | shutdown            | 6     |
| 30 | nfsnobody           | 65534 |
|  8 | halt                | 7     |
| 36 | avahi               | 70    |
| 39 | tcpdump             | 72    |
| 35 | sshd                | 74    |
| 23 | radvd               | 75    |
|  9 | mail                | 8     |
| 15 | dbus                | 81    |
| 37 | postfix             | 89    |
| 13 | nobody              | 99    |
| 34 | gnome-initial-setup | 992   |
| 31 | setroubleshoot      | 993   |
| 27 | geoclue             | 994   |
| 24 | chrony              | 995   |
| 20 | saslauth            | 996   |
| 19 | colord              | 997   |
| 17 | libstoragemgmt      | 998   |
| 16 | polkitd             | 999   |
+----+---------------------+-------+
42 rows in set (0.00 sec)

mysql> create  table user1  select *  from  teadb.usertab where 2=5;    //  where 2=5 这个条件不存在,所以创建这个字段表
Query OK, 0 rows affected (0.27 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> select  *  from user1;
Empty set (0.00 sec)

mysql> desc user1;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| id       | int(11)     | NO   |     | NULL    |       |
| name     | char(66)    | YES  |     | NULL    |       |
| password | char(22)    | YES  |     | NULL    |       |
| uid      | varchar(55) | YES  |     | NULL    |       |
| gid      | varchar(66) | YES  |     | NULL    |       |
| comment  | varchar(99) | YES  |     | NULL    |       |
| homedir  | varchar(88) | YES  |     | NULL    |       |
| shell    | varchar(66) | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
8 rows in set (0.00 sec)


mysql> select *  from t1;
+--------+------+---------------+
| name   | uid  | shell         |
+--------+------+---------------+
| root   | 0    | /bin/bash     |
| bin    | 1    | /sbin/nologin |
| daemon | 2    | /sbin/nologin |
+--------+------+---------------+
3 rows in set (0.00 sec)

mysql> create table t2 select name,password,uid ,homedir from b4 limit 5;
Query OK, 5 rows affected (0.28 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> select  *  from t2;
+--------+----------+------+----------------+
| name   | password | uid  | homedir        |
+--------+----------+------+----------------+
| root   | x        | 0    | /root          |
| bin    | x        | 1    | /bin           |
| daemon | x        | 2    | /sbin          |
| adm    | x        | 3    | /var/adm       |
| lp     | x        | 4    | /var/spool/lpd |
+--------+----------+------+----------------+
5 rows in set (0.00 sec)


mysql> select *  from t1,t2;  //笛卡尔积
+--------+------+---------------+--------+----------+------+----------------+
| name   | uid  | shell         | name   | password | uid  | homedir        |
+--------+------+---------------+--------+----------+------+----------------+
| root   | 0    | /bin/bash     | root   | x        | 0    | /root          |
| bin    | 1    | /sbin/nologin | root   | x        | 0    | /root          |
| daemon | 2    | /sbin/nologin | root   | x        | 0    | /root          |
| root   | 0    | /bin/bash     | bin    | x        | 1    | /bin           |
| bin    | 1    | /sbin/nologin | bin    | x        | 1    | /bin           |
| daemon | 2    | /sbin/nologin | bin    | x        | 1    | /bin           |
| root   | 0    | /bin/bash     | daemon | x        | 2    | /sbin          |
| bin    | 1    | /sbin/nologin | daemon | x        | 2    | /sbin          |
| daemon | 2    | /sbin/nologin | daemon | x        | 2    | /sbin          |
| root   | 0    | /bin/bash     | adm    | x        | 3    | /var/adm       |
| bin    | 1    | /sbin/nologin | adm    | x        | 3    | /var/adm       |
| daemon | 2    | /sbin/nologin | adm    | x        | 3    | /var/adm       |
| root   | 0    | /bin/bash     | lp     | x        | 4    | /var/spool/lpd |
| bin    | 1    | /sbin/nologin | lp     | x        | 4    | /var/spool/lpd |
| daemon | 2    | /sbin/nologin | lp     | x        | 4    | /var/spool/lpd |
+--------+------+---------------+--------+----------+------+----------------+
15 rows in set (0.00 sec)



嵌套查询:

相同表
 /var/lib/mysql/host50.log
mysql>  select name ,uid from  b4 where uid <= (select avg(uid) from b4); //b4可以为不同数据库的不同表
+---------------------+------+
| name                | uid  |
+---------------------+------+
| root                | 0    |
| bin                 | 1    |
| daemon              | 2    |
| adm                 | 3    |
| lp                  | 4    |
| sync                | 5    |
| shutdown            | 6    |
| halt                | 7    |
| mail                | 8    |
| operator            | 11   |
| games               | 12   |
| ftp                 | 14   |
| nobody              | 99   |
| systemd-network     | 192  |
| dbus                | 81   |
| polkitd             | 999  |
| libstoragemgmt      | 998  |
| rpc                 | 32   |
| colord              | 997  |
| saslauth            | 996  |
| abrt                | 173  |
| rtkit               | 172  |
| radvd               | 75   |
| chrony              | 995  |
| tss                 | 59   |
| usbmuxd             | 113  |
| geoclue             | 994  |
| qemu                | 107  |
| rpcuser             | 29   |
| setroubleshoot      | 993  |
| pulse               | 171  |
| gdm                 | 42   |
| gnome-initial-setup | 992  |
| sshd                | 74   |
| avahi               | 70   |
| postfix             | 89   |
| ntp                 | 38   |
| tcpdump             | 72   |
| lisi                | 1000 |
| mysql               | 27   |
| apache              | 48   |
+---------------------+------+
41 rows in set (0.00 sec)


不同表

mysql> select *  from t1;
+--------+------+---------------+
| name   | uid  | shell         |
+--------+------+---------------+
| root   | 0    | /bin/bash     |
| bin    | 1    | /sbin/nologin |
| daemon | 2    | /sbin/nologin |
+--------+------+---------------+
3 rows in set (0.00 sec)

mysql> create table t2 select name,password,uid ,homedir from b4 limit 5;
Query OK, 5 rows affected (0.28 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> select  *  from t2;
+--------+----------+------+----------------+
| name   | password | uid  | homedir        |
+--------+----------+------+----------------+
| root   | x        | 0    | /root          |
| bin    | x        | 1    | /bin           |
| daemon | x        | 2    | /sbin          |
| adm    | x        | 3    | /var/adm       |
| lp     | x        | 4    | /var/spool/lpd |
+--------+----------+------+----------------+
5 rows in set (0.00 sec)



mysql> select name from t2 where name in (select name from t1);
+--------+
| name   |
+--------+
| root   |
| bin    |
| daemon |
+--------+
3 rows in set (0.00 sec)


########################################################

连接查询

左连接:以左边的为主显示查询结果    
select  字段名列表  from  表名A  left join  表名B on 条件;


右连接:以右边的为主显示查询结果    right join




mysql> select *  from b61;
+--------+------+---------------+
| name   | uid  | shell         |
+--------+------+---------------+
| root   | 0    | /bin/bash     |
| bin    | 1    | /sbin/nologin |
| daemon | 2    | /sbin/nologin |
| adm    | 3    | /sbin/nologin |
| lp     | 4    | /sbin/nologin |
+--------+------+---------------+
5 rows in set (0.00 sec)


mysql> create  table  b62  select  name ,uid, shell from b4 limit 7;
Query OK, 7 rows affected (0.34 sec)
Records: 7  Duplicates: 0  Warnings: 0

mysql> select *  from b62;
+----------+------+----------------+
| name     | uid  | shell          |
+----------+------+----------------+
| root     | 0    | /bin/bash      |
| bin      | 1    | /sbin/nologin  |
| daemon   | 2    | /sbin/nologin  |
| adm      | 3    | /sbin/nologin  |
| lp       | 4    | /sbin/nologin  |
| sync     | 5    | /bin/sync      |
| shutdown | 6    | /sbin/shutdown |
+----------+------+----------------+
7 rows in set (0.00 sec)

mysql> select * from  b61 left join b62 on b61.uid = b62.uid;
+--------+------+---------------+--------+------+---------------+
| name   | uid  | shell         | name   | uid  | shell         |
+--------+------+---------------+--------+------+---------------+
| root   | 0    | /bin/bash     | root   | 0    | /bin/bash     |
| bin    | 1    | /sbin/nologin | bin    | 1    | /sbin/nologin |
| daemon | 2    | /sbin/nologin | daemon | 2    | /sbin/nologin |
| adm    | 3    | /sbin/nologin | adm    | 3    | /sbin/nologin |
| lp     | 4    | /sbin/nologin | lp     | 4    | /sbin/nologin |
+--------+------+---------------+--------+------+---------------+
5 rows in set (0.00 sec)

mysql> select * from  b61 right join b62 on b61.uid = b62.uid;
+--------+------+---------------+----------+------+----------------+
| name   | uid  | shell         | name     | uid  | shell          |
+--------+------+---------------+----------+------+----------------+
| root   | 0    | /bin/bash     | root     | 0    | /bin/bash      |
| bin    | 1    | /sbin/nologin | bin      | 1    | /sbin/nologin  |
| daemon | 2    | /sbin/nologin | daemon   | 2    | /sbin/nologin  |
| adm    | 3    | /sbin/nologin | adm      | 3    | /sbin/nologin  |
| lp     | 4    | /sbin/nologin | lp       | 4    | /sbin/nologin  |
| NULL   | NULL | NULL          | sync     | 5    | /bin/sync      |
| NULL   | NULL | NULL          | shutdown | 6    | /sbin/shutdown |
+--------+------+---------------+----------+------+----------------+
7 rows in set (0.00 sec)

###################################################################


查询主机名
mysql> select  @@hostname;
+------------+
| @@hostname |
+------------+ host50     |
+------------+
1 row in set (0.00 sec)

查看当前的数据服务，支持哪种搜索引擎
mysql> show engines;
+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+
| Engine             | Support | Comment                                                        | Transactions | XA   | Savepoints |
+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+
| InnoDB             | DEFAULT | Supports transactions, row-level locking, and foreign keys     | YES          | YES  | YES        |
| MRG_MYISAM         | YES     | Collection of identical MyISAM tables                          | NO           | NO   | NO         |
| MEMORY             | YES     | Hash based, stored in memory, useful for temporary tables      | NO           | NO   | NO         |
| BLACKHOLE          | YES     | /dev/null storage engine (anything you write to it disappears) | NO           | NO   | NO         |
| MyISAM             | YES     | MyISAM storage engine                                          | NO           | NO   | NO         |
| CSV                | YES     | CSV storage engine                                             | NO           | NO   | NO         |
| ARCHIVE            | YES     | Archive storage engine                                         | NO           | NO   | NO         |
| PERFORMANCE_SCHEMA | YES     | Performance Schema                                             | NO           | NO   | NO         |
| FEDERATED          | NO      | Federated MySQL storage engine                                 | NULL         | NULL | NULL       |
+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+
9 rows in set (0.00 sec)




InnoDB
事物Transactions

修改数据库服务的默认使用搜索引擎？
#sytemctl stop  mysqld
#vim   /etvc/my.cnf
[mysqld]
default-storage-engine=myisam
:x
#systemctl start mysqld

mysql>show engines;

建表
create table 表名 (name int) engine=存储引擎名


修改表使用的存储引擎
alter table 表名  engine=存储引擎名


myisam 存储引擎的特点
支持表级锁（客户端连接数据库服务器后，对表的数据做访问时，若表的存储是myisam的话，会给整张表加锁）
不支持事务和事务回滚
每个表对应三个表文件
表.frm   表结构  desc 表  
表.MYD   表数据
表.MYI   表的index索引信息


InnoDB的特点
支持行级锁（客户端连接数据库服务器后，对表的数据做访问时，若表的存储是InnoDB的话，只会给表中被访问的行加锁）
支持事务回滚，外键   
每个表对应2个表文件
表.frm  表结构 
表.ibd  表数据和index索引


锁粒度 （锁表的范围）
表锁 
锁类型：
读锁 （共享锁）         当对一张表查询时（select）操作时 会加读锁
写锁  (排他锁或互斥锁)  当对一张表执行写（insert update delete）操作时 会加写锁


事务(transaction)：一次sql操作从建立连接到操作完成断开连接的访问过程称作事务

支持事务的表可以做事务回滚:一次sql操作有任意一步美亚执行成功会恢复所有操作。（对innoDB存储引擎的表访问时必须任意一步操作都成功，才能完成操作）

使用事务的的操作  银行的汇款或转账业务

默认
mysql> show  variables like "autocommit";
+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| autocommit    | ON    |
+---------------+-------+
1 row in set (0.00 sec)


mysql> set autocommit=off;


mysql> show  variables like "autocommit";
+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| autocommit    | OFF   |
+---------------+-------+
1 row in set (0.00 sec)


mysql> show  variables like "autocommit";
+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| autocommit    | OFF   |
+---------------+-------+
1 row in set (0.00 sec)


###########################################################

完全备份：mysqldump
完全恢复：mysql


]#man  mysqldump
]#mysqldump    -uroot   -p123456 库名 > 目录名/文件名.sql

库名的表示方式：
--all-databases  或 -A 所有库所有表
]#mysqldump   -uroot -p123456  -A > /bakdir/alldb.sql
mysqldump: [Warning] Using a password on the command line interface can be insecure.


库名  备份库下的所有表
]#mysqldump   -uroot -p123456  db5 > /bakdir/db5.sql
mysqldump: [Warning] Using a password on the command line interface can be insecure.

库名  表名   备份一张表的所有记录
]#mysqldump   -uroot -p123456  db5  t1 > /bakdir/db5_user.sql
mysqldump: [Warning] Using a password on the command line interface can be insecure.


-B  库名1  库名2  备份某几个库的所有数据
]#mysqldump   -uroot -p123456  -B  db5  db55 > /bakdir/twodb.sql
mysqldump: [Warning] Using a password on the command line interface can be insecure.


mysqldump备份和恢复会锁表

vim  /bakdir/db5.sql
...
LOCK TABLES `t1` WRITE;
/*!40000 ALTER TABLE `t1` DISABLE KEYS */;
/*!40000 ALTER TABLE `t1` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
...


完全恢复：mysql

--方法一：]# mysql -uroot -p123456  库名  < 目录名/文件名.sql

--方法二：mysql > source 目录名/文件名.sql



每周一 23点备份数据库服务器上db5库下的所有表到系统的/bakdir

vim  /root/alldb5.sh
#！/bin/bash
x=`date +%F`
 [ -e /bakdir ]  ||  mkdir /bakdir 
mysqldump  -uroot -p123456 db5  > /bakdir/db5_${x}.sql
:x

]#chmod  +x  /root/alldb5.sh


]#/root/alldb5.sh


]#crontab   -e 
00  23  *  *   1    /root/alldb5.sh  &> /dev/null
:x


增量备份与恢复
1.启用mysql服务自带的binlog日志文件
2.安装第3方软件提供的命令innobackupex ***


binlog日志的使用：
日志介绍：是服务日志文件中的一种（默认没有开启）记录除查询之外的sql命令

启用日志：
vim  /etc/my.cnf
[mysqld]
server_id=50   //指定id值
log-bin
binlog-format="mixed"

]# systemctl restart  mysqld
]# cd /var/lib/mysql
]# ls
host50-bin.000001   日志文件> 500M 时自动生成第二个日志文件
host50-bin.index 

查看日志内容：
]# mysqlbinlog  host50-bin.000001



自定义binlog日志名称及存储目录
]#mkdir /logdir
]#chown  mysql  /logdir

vim /etc/my.cnf
[mysql]
log-bin=/logdir/db50
:x

]#systemctl  restart  mysqld
]#mysqlbinlog   /logdir/db50.000001



日志记录格式：


偏移量


]# mysqlbinlog   选项   /logdir/db50.000001
--start-position=数字
--stop-position=数字


时间点
--start-datetime=“yyyy-mm-dd hh:mm:ss”
--stop-datetime=“yyyy-mm-dd hh:mm:ss”

执行日志文件记录的sql命令恢复数据

]# mysqlbinlog  选项 日志文件名 | mysql  -uroot -p123456

]#mysqlbinlog  --start-position=10186  --stop-position=10364  /logdir/db50.000001 | mysql  -uroot -p123456

###################################################################


手动生成新的日志文件

]#mysqldump  -uroot -p123456 --flush-logs  db3 > /bakdir/db3.sql


或者

mysql>flush  logs;

或者
systemctl restart mysqld

或者

]#mysql -uroot -p123456 -e "flush logs"


mysql> show  master status;   //--查看正在使用的日志文件
+-------------+----------+--------------+------------------+-------------------+
| File        | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-------------+----------+--------------+------------------+-------------------+
| db50.000001 |    13564 |              |                  |                   |
+-------------+----------+--------------+------------------+-------------------+
1 row in set (0.00 sec)



  
删除已有的日志文件

方法一：
mysql> purge  master logs to "db50.000005";
mysql> reset master;

]#rm  -rf /logdir/ *

方法二：安装第3方软件percona提供的命令innobackupex


yum -y install perl-DBD-MySQL.x86_64  perl-Digest-MD5.x86_64

rpm  -ivh  libev-4.15-1.el6.rf.x86_64.rpm

rpm -ivh  percona-xtrabackup-24-2.4.7-1.el7.x86_64.rpm


完全备份和恢复

]#innobackupex  --user root --password 123456  --databases="mysql  performance_schema sys  db"  /allbak  --no-timestamp 

mysql  performance_schema  sys  // --这三个库是系统自带的库

完全恢复
（要求数据库目录必须是空的）




准备恢复数据（回滚备份目录下日志信息）
]# innobackupex  --user root --password 123456  --databases="mysql  performance_schema sys  db"  --apply-log   /allbak  

]#systemctl  stop mysqld

]#rm -rf /var/lib/mysql/ *

把备份目录下数据库拷贝会数据库目录下
]# innobackupex  --user root --password 123456  --databases="mysql  performance_schema sys  db"   --copy-back   /allbak  


修改数据库目录下所有者和组用户为mysql
]#chown -R   mysql:mysql   /var/lib/mysql

重启数据库服务
]#systemctl  restart mysqld


登录查看数据

####################################################################

--修改数据库名：
mysql> show  databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| db                 |
| db1                |
| gamedb             |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
7 rows in set (0.01 sec)

进入/var/lib/mysql
[root@host50 ~]# cd /var/lib/mysql
[root@host50 mysql]# ls
auto.cnf  ib_buffer_pool  ibtmp1           performance_schema
db        ibdata1         mysql            sys
db1       ib_logfile0     mysql.sock       xtrabackup_binlog_pos_innodb
gamedb    ib_logfile1     mysql.sock.lock  xtrabackup_info
[root@host50 mysql]# mv  db1  db11
[root@host50 mysql]# ls
auto.cnf  ib_buffer_pool  ibtmp1           performance_schema
db        ibdata1         mysql            sys
db11      ib_logfile0     mysql.sock       xtrabackup_binlog_pos_innodb
gamedb    ib_logfile1     mysql.sock.lock  xtrabackup_info

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| db                 |
| db11               |
| gamedb             |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
7 rows in set (0.01 sec)

###################################################################

--修改数据库表名：  --rename 
 alter table v1 rename v2;              //把v1表改为v2,内容不变

mysql> select  *  from  STUDENT;
+-----+--------+------+---------------------+-------+
| SNO | SNAME  | SSEX | SBIRTHDAY           | CLASS |
+-----+--------+------+---------------------+-------+
| 108 | 曾华   | 男   | 1977-09-01 00:00:00 | 95033 |
| 105 | 匡明   | 男   | 1975-10-02 00:00:00 | 95031 |
| 107 | 王丽   | 女   | 1976-01-23 00:00:00 | 95033 |
| 101 | 李军   | 男   | 1976-02-20 00:00:00 | 95033 |
| 109 | 王芳   | 女   | 1975-02-10 00:00:00 | 95031 |
| 103 | 陆君   | 男   | 1974-06-03 00:00:00 | 95031 |
+-----+--------+------+---------------------+-------+
6 rows in set (0.00 sec)

--mysql> ALTER table STUDENT rename student;
Query OK, 0 rows affected (0.05 sec)

mysql> show tables;
+---------------+
| Tables_in_db1 |
+---------------+
| student       |
+---------------+
1 row in set (0.00 sec)

--修改字段名：  --change 

alter table v1 change age xx char(11);  //把v1表中age字段改为xx字段
+---------+---------------------------+------+-----+---------+-------+
| Field   | Type                      | Null | Key | Default | Extra |
+---------+---------------------------+------+-----+---------+-------+
| stu_num | char(9)                   | YES  |     | NULL    |       |
| name    | varchar(15)               | YES  |     | NULL    |       |
| class   | char(7)                   | YES  |     | NULL    |       |
| likes   | set('eat','sleep','game') | YES  |     | NULL    |       |
| xx      | char(11)                  | YES  |     | NULL    |       |
+---------+---------------------------+------+-----+---------+-------+

--修改字段类型:  --modify 
alter table v1 modify name varchar(15);//修改v1表中name字段类型为varchar(15)
+---------+---------------------------+------+-----+---------+-------+
| Field   | Type                      | Null | Key | Default | Extra |
+---------+---------------------------+------+-----+---------+-------+
| stu_num | char(9)                   | YES  |     | NULL    |       |
| name    | varchar(15)               | YES  |     | NULL    |       |
| class   | char(7)                   | YES  |     | NULL    |       |
| age     | tinyint(2)                | YES  |     | NULL    |       |
| likes   | set('eat','sleep','game') | YES  |     | NULL    |       |
+---------+---------------------------+------+-----+---------+-------+

alter table v1 modify age int(2) not null default 18;
--修改字段类型时,若新的类型与字段已经存储的数据冲突,不允许修改,不修改的部分要原样抄下来,否则就是还原
+---------+---------------------------+------+-----+---------+-------+
| Field   | Type                      | Null | Key | Default | Extra |
+---------+---------------------------+------+-----+---------+-------+
| stu_num | char(9)                   | YES  |     | NULL    |       |
| name    | varchar(15)               | YES  |     | NULL    |       |
| class   | char(7)                   | YES  |     | NULL    |       |
| age     | int(2)                    | NO   |     | 18      |       |
| likes   | set('eat','sleep','game') | YES  |     | NULL    |       |
+---------+---------------------------+------+-----+---------+-------+

--修改字段位置:  --modify
alter table v1 modify age int(2) not null default 18 after likes;
                                       //把age字段移到likes之后,其他不变
+---------+---------------------------+------+-----+---------+-------+
| Field   | Type                      | Null | Key | Default | Extra |
+---------+---------------------------+------+-----+---------+-------+
| stu_num | char(9)                   | YES  |     | NULL    |       |
| name    | varchar(15)               | YES  |     | NULL    |       |
| class   | char(7)                   | YES  |     | NULL    |       |
| likes   | set('eat','sleep','game') | YES  |     | NULL    |       |
| age     | int(2)                    | NO   |     | 18      |       |
+---------+---------------------------+------+-----+---------+-------+

--修改表中已存在的记录：

mysql> select  * from  student;
+-----+--------+------+---------------------+-------+
| SNO | SNAME  | SSEX | SBIRTHDAY           | ons   |
+-----+--------+------+---------------------+-------+
| 108 | 曾华   | 男   | 1977-09-01 00:00:00 | 95033 |
| 105 | 匡明   | 男   | 1975-10-02 00:00:00 | 95031 |
| 107 | 王丽   | 女   | 1976-01-23 00:00:00 | 95033 |
| 101 | 李军   | 男   | 1976-02-20 00:00:00 | 95033 |
| 109 | 王芳   | 女   | 1975-02-10 00:00:00 | 95031 |
| 103 | 陆君   | 男   | 1974-06-03 00:00:00 | 95031 |
+-----+--------+------+---------------------+-------+
6 rows in set (0.00 sec)

mysql> update  student set SNAME='增肥' where SNO=108;
Query OK, 1 row affected (0.03 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select  * from  student;
+-----+--------+------+---------------------+-------+
| SNO | SNAME  | SSEX | SBIRTHDAY           | ons   |
+-----+--------+------+---------------------+-------+
| 108 | 增肥   | 男   | 1977-09-01 00:00:00 | 95033 |
| 105 | 匡明   | 男   | 1975-10-02 00:00:00 | 95031 |
| 107 | 王丽   | 女   | 1976-01-23 00:00:00 | 95033 |
| 101 | 李军   | 男   | 1976-02-20 00:00:00 | 95033 |
| 109 | 王芳   | 女   | 1975-02-10 00:00:00 | 95031 |
| 103 | 陆君   | 男   | 1974-06-03 00:00:00 | 95031 |
+-----+--------+------+---------------------+-------+
6 rows in set (0.00 sec)

###################################################################

2018年 07月 18日 星期三 09:16:58 CST

--innobackupex增量备份

第一次备份 所有数据
]#innobackupex   --user root  --password  123456  /fullbak  --no-timestamp 

完全备份后插入数据

insert into  gamedb.a  values(56565),(23);

insert  into  gamedb.b  values(1213),(655621);



对数据增量备份：
]# innobackupex  --user root --password 123456 --incremental  /new1dir  --incremental-basedir=/fullbak  --no-timestamp 

增量备份后想表中存储新数据
insert  into  gamedb.a  values(982238),(56640);
insert  into  gamedb.b  values(828982238),(520000);

对数据增量备份：
]# innobackupex  --user root --password 123456 --incremental  /new2dir  --incremental-basedir=/new1dir  --no-timestamp 



vim  /root/allbak.sh
#!/bin/bash

day=`date +%F`
innobackupex  --user root --password 123456 --incremental  /fullbak_${day} --no-timestamp
:x


vim /root/newallbak.sh
#!/bin/bash
jt=`date +%d`
zt=`expr  $jt - 1`
m=`date +%m`
innobackupex  --user root --password 123456 --incremental  /new${m}_${jt}dir  --incremental-basedir=/new${m}_${zt}dir  --no-timestamp
:x
 
chmod +x /root/allbak.sh
chmod +x /root/newallbak.sh
crontab -e 
00 23  * *  1          /root/allbak.sh
00 23  * *  2-7        /root/newallbak.sh

--innobackupex 增量恢复

准备恢复数据

]#innobackupex  --user root --password 123456 --apply-log  --redo-only  /fullbak

]#innobackupex  --user root --password 123456 --apply-log  --redo-only  /fullbak  --incremental-dir=/new1dir

]#innobackupex  --user root --password 123456 --apply-log  --redo-only  /fullbak  --incremental-dir=/new2dir

]#rm -rf  /new1dir/     

]#rm -rf  /new1dir/     


sysytemctl  stop mysqld
rm -rf  /var/lib/mysql/ *


把备份目录下的数据拷贝到数据库目录并修改所有者和组为mysql
]#innobackupex  --user root --password 123456 --copy-back  /fullbak
]#chown  -R  mysql:mysql  /var/lib/mysql


启动数据库服务
]#systemctl  restart mysqld	


恢复数据后插入数据后继续增量备份

mysql>insert  into  a  values(555555555),(22222222),(1111111111);
mysql> insert  into  a  values(57985),(254489872),(11566111);

]#innobackupex  --user root --password  123456  --incremental /dir1  --incremental-basedir=/fullbak  --no-timestamp 

#################################################################################


多表查询
复制表:备份表   快速建表

备份表:
create table xxx select * from yyy;
create table user select * from usertab;
                           //以usertab的结构和数据建一张表user
+---------+---------------------+------+-----+---------+-------+
| Field   | Type                | Null | Key | Default | Extra |
+---------+---------------------+------+-----+---------+-------+
| id      | int(3)              | NO   |     | NULL    |       |
| name    | char(150)           | YES  |     | NULL    |       |
| age     | tinyint(2) unsigned | YES  |     | 18      |       |
| passwd  | char(10)            | YES  |     | NULL    |       |
| uid     | int(8)              | YES  |     | NULL    |       |
| gid     | int(8)              | YES  |     | NULL    |       |
| homedir | char(150)           | YES  |     | NULL    |       |
| shell   | char(150)           | YES  |     | NULL    |       |
+---------+---------------------+------+-----+---------+-------+
                                     //user内容和usertab一模一样

create table user1 select name,uid,shell from user order by uid limit 5;
                                 //查找user表中name,uid,shell的信息,
                                     按照uid的值从小到大排列显示前5行,
                                        最后用此查询结果创建一张user1表
+--------+------+---------------+
| name   | uid  | shell         |
+--------+------+---------------+
| NULL   | NULL | NULL          |
| root   |    0 | /sbin/nologin |
| bin    |    1 | /sbin/nologin |
| daemon |    2 | /sbin/nologin |
| adm    |    3 | /sbin/nologin |
+--------+------+---------------+

快速建表:
create table user2 select * from user where name="1";
                               //以一个没结果的查询来复制表即为快速建表
                               //user表中没有name为1的行
+---------+---------------------+------+-----+------innobackupex  --user  root  --password 123456  /good  --no-timestamp---+-------+
| Field   | Type                | Null | Key | Default | Extra |
+---------+---------------------+------+-----+---------+-------+
| id      | int(3)              | NO   |     | NULL    |       |
| name    | char(150)           | YES  |     | NULL    |       |
| age     | tinyint(2) unsigned | YES  |     | 18      |       |
| passwd  | char(10)            | YES  |     | NULL    |       |
| uid     | int(8)              | YES  |     | NULL    |       |
| gid     | int(8)              | YES  |     | NULL    |       |
| homedir | char(150)           | YES  |     | NULL    |       |
| shell   | char(150)           | YES  |     | NULL    |       |
+---------+---------------------+------+-----+---------+-------+

多表查询:
select 字段名列表 from 表名列表 where 条件;

create table v1 select name,uid,gid,shell from 晨练.user limit 3;
                 //用晨练库里user表中name,uid,gid,shell行的前三个值创建新表v1
+--------+------+---------------+
| name   | uid  | shell         |
+--------+------+---------------+
| root   |    0 | /sbin/nologin |
| bin    |    1 | /sbin/nologin |
| daemon |    2 | /sbin/nologin |
+--------+------+---------------+

create table v2 select name,passwd,gid,homedir from 晨练.user limit 5;
              //用晨练库里user表中的name,passwd,gid,homedir行的前5个值创建新表v2
+--------+--------+------+----------------+
| name   | passwd | gid  | homedir        |
+--------+--------+------+----------------+
| root   | x      |    0 | /root          |
| bin    | x      |    1 | /bin           |
| daemon | x      |    2 | /sbin          |
| adm    | x      |    4 | /var/adm       |
| lp     | x      |    7 | /var/spool/lpd |
+--------+--------+------+----------------+

笛卡尔集innobackupex  --user  root  --password 123456  /good  --no-timestamp
select * from v1,v2;                    //结果为笛卡尔集,共有15行
+--------+------+---------------+--------+--------+------+----------------+
| name   | uid  | shell         | name   | passwd | gid  | homedir        |
+--------+------+---------------+--------+--------+------+----------------+
| root   |    0 | /sbin/nologin | root   | x      |    0 | /root          |
| bin    |    1 | /sbin/nologin | root   | x      |    0 | /root          |
| daemon |    2 | /sbin/nologin | root   | x      |    0 | /root          |
| root   |    0 | /sbin/nolo
多表查询
复制表:备份表   快速建表

备份表:
create table xxx select * from yyy;
create table user select * from usertab;
                           //以usertab的结构和数据建一张表user
+---------+---------------------+------+-----+---------+-------+
| Field   | Type                | Null | Key | Default | Extra |
+---------+---------------------+------+-----+---------+-------+
| id      | int(3)              | NO   |     | NULL    |       |
| name    | char(150)           | YES  |     | NULL    |       |
| age     | tinyint(2) unsigned | YES  |     | 18      |       |
| passwd  | char(10)            | YES  |     | NULL    |       |
| uid     | int(8)              | YES  |     | NULL    |       |
| gid     | int(8)              | YES  |     | NULL    |       |
| homedir | char(150)           | YES  |     | NULL    |       |
| shell   | char(150)           | YES  |     | NULL    |       |
+---------+---------------------+------+-----+---------+-------+
                                     //user内容和usertab一模一样

create table user1 select name,uid,shell from user order by uid limit 5;
                                 //查找user表中name,uid,shell的信息,
                                     按照uid的值从小到大排列显示前5行,
                                        最后用此查询结果创建一张user1表
+--------+------+---------------+
| name   | uid  | shell         |
+--------+------+---------------+
| NULL   | NULL | NULL          |
| root   |    0 | /sbin/nologin |
| bin    |    1 | /sbin/nologin |
| daemon |    2 | /sbin/nologin |
| adm    |    3 | /sbin/nologin |
+--------+------+---------------+

快速建表:
create table user2 select * from user where name="1";
                               //以一个没结果的查询来复制表即为快速建表
                               //user表中没有name为1的行
+---------+---------------------+------+-----+---------+-------+
| Field   | Type                | Null | Key | Default | Extra |
+---------+---------------------+------+-----+---------+-------+
| id      | int(3)              | NO   |     | NULL    |       |
| name    | char(150)           | YES  |     | NULL    |       |
| age     | tinyint(2) unsigned | YES  |     | 18      |       |
| passwd  | char(10)            | YES  |     | NULL    |       |
| uid     | int(8)              | YES  |     | NULL    |       |
| gid     | int(8)              | YES  |     | NULL    |       |
| homedir | char(150)           | YES  |     | NULL    |       |
| shell   | char(150)           | YES  |     | NULL    |       |
+---------+---------------------+------+-----+---------+-------+

多表查询:
select 字段名列表 from 表名列表 where 条件;

create table v1 select name,uid,gid,shell from 晨练.user limit 3;
                 //用晨练库里user表中name,uid,gid,shell行的前三个值创建新表v1
+--------+------+---------------+
| name   | uid  | shell         |
+--------+------+---------------+
| root   |    0 | /sbin/nologin |
| bin    |    1 | /sbin/nologin |
| daemon |    2 | /sbin/nologin |
+--------+------+---------------+

create table v2 select name,passwd,gid,homedir from 晨练.user limit 5;
              //用晨练库里user表中的name,passwd,gid,homedir行的前5个值创建新表v2
+--------+--------+------+----------------+
| name   | passwd | gid  | homedir        |
+--------+--------+------+----------------+
| root   | x      |    0 | /root          |
| bin    | x      |    1 | /bin           |
| daemon | x      |    2 | /sbin          |
| adm    | x      |    4 | /var/adm       |
| lp     | x      |    7 | /var/spool/lpd |
+--------+--------+------+----------------+

笛卡尔集
select * from v1,v2;                    //结果为笛卡尔集,共有15行
+--------+------+---------------+--------+--------+------+----------------+
| name   | uid  | shell         | name   | passwd | gid  | homedir        |
+--------+------+---------------+--------+--------+------+----------------+
| root   |    0 | /sbin/nologin | root   | x      |    0 | /root          |
| bin    |    1 | /sbin/nologin | root   | x      |    0 | /root          |
| daemon |    2 | /sbin/nologin | root   | x      |    0 | /root          |
| root   |    0 | /sbin/nologin | bin    | x      |    1 | /bin           |
| bin    |    1 | /sbin/nologin | bin    | x      |    1 | /bin           |
| daemon |    2 | /sbin/nologin | bin    | x      |    1 | /bin           |
| root   |    0 | /sbin/nologin | daemon | x      |    2 | /sbin          |
| bin    |    1 | /sbin/nologin | daemon | x      |    2 | /sbin          |
| daemon |    2 | /sbin/nologin | daemon | x      |    2 | /sbin          |
| root   |    0 | /sbin/nologin | adm    | x      |    4 | /var/adm       |
| bin    |    1 | /sbin/nologin | adm    | x      |    4 | /var/adm       |
| daemon |    2 | /sbin/nologin | adm    | x      |    4 | /var/adm       |
| root   |    0 | /sbin/nologin | lp     | x      |    7 | /var/spool/lpd |
| bin    |    1 | /sbin/nologin | lp     | x      |    7 | /var/spool/lpd |
| daemon |    2 | /sbin/nologin | lp     | x      |    7 | /var/spool/lpd |
+--------+------+---------------+--------+--------+------+----------------+
         
select v1.*,v2.passwd,v2.gid,v2.homedir from v1,v2;
+--------+------+---------------+--------+------+----------------+
| name   | uid  | shell         | passwd | gid  | homedir        |
+--------+------+---------------+--------+------+----------------+
| root   |    0 | /sbin/nologin | x      |    0 | /root          |
| bin    |    1 | /sbin/nologin | x      |    0 | /root          |
| daemon |    2 | /sbin/nologin | x      |    0 | /root          |
| root   |    0 | /sbin/nologin | x      |    1 | /bin           |
| bin    |    1 | /sbin/nologin | x      |    1 | /bin           |
| daemon |    2 | /sbin/nologin | x      |    1 | /bin           |
| root   |    0 | /sbin/nologin | x      |    2 | /sbin          |
| bin    |    1 | /sbin/nologin | x      |    2 | /sbin          |
| daemon |    2 | /sbin/nologin | x      |    2 | /sbin          |
| root   |    0 | /sbin/nologin | x      |    4 | /var/adm       |
| bin    |    1 | /sbin/nologin | x      |    4 | /var/adm       |
| daemon |    2 | /sbin/nologin | x      |    4 | /var/adm       |
| root   |    0 | /sbin/nologin | x      |    7 | /var/spool/lpd |
| bin    |    1 | /sbin/nologin | x      |    7 | /var/spool/lpd |
| daemon |    2 | /sbin/nologin | x      |    7 | /var/spool/lpd |
+--------+------+---------------+--------+------+----------------+
         //v1表中的每一列都和v2表中的每一列匹配并显示一次,所以v2表每一列都会显示3次

select v1.*,v2.passwd,v2.gid,v2.homedir from v1,v2 where v1.name=v2.name;
+--------+------+---------------+--------+------+---------+
| name   | uid  | shell         | passwd | gid  | homedir |
+--------+------+---------------+--------+------+---------+
| root   |    0 | /sbin/nologin | x      |    0 | /root   |
| bin    |    1 | /sbin/nologin | x      |    1 | /bin    |
| daemon |    2 | /sbin/nologin | x      |    2 | /sbin   |
+--------+------+---------------+--------+------+---------+

select v1.*,v2.name,v2.passwd,v2.gid,v2.homedir 
from v1,v2 where v1.name=v2.name;
+--------+------+---------------+--------+--------+------+---------+
| name   | uid  | shell         | name   | passwd | gid  | homedir |
+--------+------+---------------+--------+--------+------+---------+
| root   |    0 | /sbin/nologin | root   | x      |    0 | /root   |
| bin    |    1 | /sbin/nologin | bin    | x      |    1 | /bin    |
| daemon |    2 | /sbin/nologin | daemon | x      |    2 | /sbin   |
+--------+------+---------------+--------+--------+------+---------+
                                //只显示v1,v2表中name字段相同的行的数据

嵌套查询:
select 字段名列表 from 表名 where 条件(select 字段名列表 from 表名 where 条件);
                                //把括号内的查询结果作为括号外查询条件
select name,uid from 晨练.user where uid>(select avg(uid) from 晨练.user);
                               //查询晨练库user表中uid大于uid平均值的值
+-----------+-------+
| name      | uid   |
+-----------+-------+
| nfsnobody | 65535 |
+-----------+-------+

select name from 晨练.user where name in (select name from db4.v1);
                                 //查看晨练库user表与db4库v1表中同时存在的用户
+--------+
| name   |
+--------+
| root   |
| bin    |
| daemon |
+--------+

链接查询:
create table v3 select name,uid,shell from 晨练.user limit 5;
+--------+------+---------------+
| name   | uid  | shell         |
+--------+------+---------------+
| root   |    0 | /sbin/nologin |
| bin    |    1 | /sbin/nologin |
| daemon |    2 | /sbin/nologin |
| adm    |    3 | /sbin/nologin |
| lp     |    4 | /sbin/nologin |
+--------+------+---------------+

create table v4 select name,uid,shell from 晨练.user limit 7;
+----------+------+----------------+
| name     | uid  | shell          |
+----------+------+----------------+
| root     |    0 | /sbin/nologin  |
| bin      |    1 | /sbin/nologin  |
| daemon   |    2 | /sbin/nologin  |
| adm      |    3 | /sbin/nologin  |
| lp       |    4 | /sbin/nologin  |
| sync     |    5 | /sbin/nologin  |
| shutdown |    6 | /sbin/shutdown |
+----------+------+----------------+

左链接:以左边的表为主显示查询结果 left join
select 字段名列表 from 表名1 left jion 表名2 on 条件;
select * from v3 left join v4 on v3.uid=v4.uid;
                        //以v3表为主显示v3表中uid与v4表中uid相等的行的所有值
+--------+------+---------------+--------+------+---------------+
| name   | uid  | shell         | name   | uid  | shell         |
+--------+------+---------------+--------+------+---------------+
| root   |    0 | /sbin/nologin | root   |    0 | /sbin/nologin |
| bin    |    1 | /sbin/nologin | bin    |    1 | /sbin/nologin |
| daemon |    2 | /sbin/nologin | daemon |    2 | /sbin/nologin |
| adm    |    3 | /sbin/nologin | adm    |    3 | /sbin/nologin |
| lp     |    4 | /sbin/nologin | lp     |    4 | /sbin/nologin |
+--------+------+---------------+--------+------+---------------+

右链接:以右边的表为主显示查询结果 right join
select 字段名列表 from 表名1 right jion 表名2 on 条件;
select * from v3 right join v4 on v3.uid=v4.uid;
                        //以v4表为主显示v3表中uid与v4表中uid相等的行的所有值
+--------+------+---------------+----------+------+----------------+
| name   | uid  | shell         | name     | uid  | shell          |
+--------+------+---------------+----------+------+----------------+
| root   |    0 | /sbin/nologin | root     |    0 | /sbin/nologin  |
| bin    |    1 | /sbin/nologin | bin      |    1 | /sbin/nologin  |
| daemon |    2 | /sbin/nologin | daemon   |    2 | /sbin/nologin  |
| adm    |    3 | /sbin/nologin | adm      |    3 | /sbin/nologin  |
| lp     |    4 | /sbin/nologin | lp       |    4 | /sbin/nologin  |
多表查询
复制表:备份表   快速建表

备份表:
create table xxx select * from yyy;
create table user select * from usertab;
                           //以usertab的结构和数据建一张表user
+---------+---------------------+------+-----+---------+-------+
| Field   | Type                | Null | Key | Default | Extra |
+---------+---------------------+------+-----+---------+-------+
| id      | int(3)              | NO   |     | NULL    |       |
| name    | char(150)           | YES  |     | NULL    |       |
| age     | tinyint(2) unsigned | YES  |     | 18      |       |
| passwd  | char(10)            | YES  |     | NULL    |       |
| uid     | int(8)              | YES  |     | NULL    |       |
| gid     | int(8)              | YES  |     | NULL    |       |
| homedir | char(150)           | YES  |     | NULL    |       |
| shell   | char(150)           | YES  |     | NULL    |       |
+---------+---------------------+------+-----+---------+-------+
                                     //user内容和usertab一模一样

create table user1 select name,uid,shell from user order by uid limit 5;
                                 //查找user表中name,uid,shell的信息,
                                     按照uid的值从小到大排列显示前5行,
                                        最后用此查询结果创建一张user1表
+--------+------+---------------+
| name   | uid  | shell         |
+--------+------+---------------+
| NULL   | NULL | NULL          |
| root   |    0 | /sbin/nologin |
| bin    |    1 | /sbin/nologin |
| daemon |    2 | /sbin/nologin |
| adm    |    3 | /sbin/nologin |
+--------+------+---------------+

快速建表:
create table user2 select * from user where name="1";
                               //以一个没结果的查询来复制表即为快速建表
                               //user表中没有name为1的行
+---------+---------------------+------+-----+---------+-------+
| Field   | Type                | Null | Key | Default | Extra |
+---------+---------------------+------+-----+---------+-------+
| id      | int(3)              | NO   |     | NULL    |       |
| name    | char(150)           | YES  |     | NULL    |       |
| age     | tinyint(2) unsigned | YES  |     | 18      |       |
| passwd  | char(10)            | YES  |     | NULL    |       |
| uid     | int(8)              | YES  |     | NULL    |       |
| gid     | int(8)              | YES  |     | NULL    |       |
| homedir | char(150)           | YES  |     | NULL    |       |
| shell   | char(150)           | YES  |     | NULL    |       |
+---------+---------------------+------+-----+---------+-------+

多表查询:
select 字段名列表 from 表名列表 where 条件;

create table v1 select name,uid,gid,shell from 晨练.user limit 3;
                 //用晨练库里user表中name,uid,gid,shell行的前三个值创建新表v1
+--------+------+---------------+
| name   | uid  | shell         |
+--------+------+---------------+
| root   |    0 | /sbin/nologin |
| bin    |    1 | /sbin/nologin |
| daemon |    2 | /sbin/nologin |
+--------+------+---------------+

create table v2 select name,passwd,gid,homedir from 晨练.user limit 5;
              //用晨练库里user表中的name,passwd,gid,homedir行的前5个值创建新表v2
+--------+--------+------+----------------+
| name   | passwd | gid  | homedir        |
+--------+--------+------+----------------+
| root   | x      |    0 | /root          |
| bin    | x      |    1 | /bin           |
| daemon | x      |    2 | /sbin          |
| adm    | x      |    4 | /var/adm       |
| lp     | x      |    7 | /var/spool/lpd |
+--------+--------+------+----------------+

笛卡尔集
select * from v1,v2;                    //结果为笛卡尔集,共有15行
+--------+------+---------------+--------+--------+------+----------------+
| name   | uid  | shell         | name   | passwd | gid  | homedir        |
+--------+------+---------------+--------+--------+------+----------------+
| root   |    0 | /sbin/nologin | root   | x      |    0 | /root          |
| bin    |    1 | /sbin/nologin | root   | x      |    0 | /root          |
| daemon |    2 | /sbin/nologin | root   | x      |    0 | /root          |
| root   |    0 | /sbin/nologin | bin    | x      |    1 | /bin           |
| bin    |    1 | /sbin/nologin | bin    | x      |    1 | /bin           |
| daemon |    2 | /sbin/nologin | bin    | x      |    1 | /bin           |
| root   |    0 | /sbin/nologin | daemon | x      |    2 | /sbin          |
| bin    |    1 | /sbin/nologin | daemon | x      |    2 | /sbin          |
| daemon |    2 | /sbin/nologin | daemon | x      |    2 | /sbin          |
| root   |    0 | /sbin/nologin | adm    | x      |    4 | /var/adm       |
| bin    |    1 | /sbin/nologin | adm    | x      |    4 | /var/adm       |
| daemon |    2 | /sbin/nologin | adm    | x      |    4 | /var/adm       |
| root   |    0 | /sbin/nologin | lp     | x      |    7 | /var/spool/lpd |
| bin    |    1 | /sbin/nologin | lp     | x      |    7 | /var/spool/lpd |
| daemon |    2 | /sbin/nologin | lp     | x      |    7 | /var/spool/lpd |
+--------+------+---------------+--------+--------+------+----------------+
         
select v1.*,v2.passwd,v2.gid,v2.homedir from v1,v2;
+--------+------+---------------+--------+------+----------------+
| name   | uid  | shell         | passwd | gid  | homedir        |
+--------+------+---------------+--------+------+----------------+
| root   |    0 | /sbin/nologin | x      |    0 | /root          |
| bin    |    1 | /sbin/nologin | x      |    0 | /root          |
| daemon |    2 | /sbin/nologin | x      |    0 | /root          |
| root   |    0 | /sbin/nologin | x      |    1 | /bin           |
| bin    |    1 | /sbin/nologin | x      |    1 | /bin           |
| daemon |    2 | /sbin/nologin | x      |    1 | /bin           |
| root   |    0 | /sbin/nologin | x      |    2 | /sbin          |
| bin    |    1 | /sbin/nologin | x      |    2 | /sbin          |
| daemon |    2 | /sbin/nologin | x      |    2 | /sbin          |
| root   |    0 | /sbin/nologin | x      |    4 | /var/adm       |
| bin    |    1 | /sbin/nologin | x      |    4 | /var/adm       |
| daemon |    2 | /sbin/nologin | x      |    4 | /var/adm       |
| root   |    0 | /sbin/nologin | x      |    7 | /var/spool/lpd |
| bin    |    1 | /sbin/nologin | x      |    7 | /var/spool/lpd |
| daemon |    2 | /sbin/nologin | x      |    7 | /var/spool/lpd |
+--------+------+---------------+--------+------+----------------+
         //v1表中的每一列都和v2表中的每一列匹配并显示一次,所以v2表每一列都会显示3次

select v1.*,v2.passwd,v2.gid,v2.homedir from v1,v2 where v1.name=v2.name;
+--------+------+---------------+--------+------+---------+
| name   | uid  | shell         | passwd | gid  | homedir |
+--------+------+---------------+--------+------+---------+
| root   |    0 | /sbin/nologin | x      |    0 | /root   |
| bin    |    1 | /sbin/nologin | x      |    1 | /bin    |
| daemon |    2 | /sbin/nologin | x      |    2 | /sbin   |
+--------+------+---------------+--------+------+---------+

select v1.*,v2.name,v2.passwd,v2.gid,v2.homedir 
from v1,v2 where v1.name=v2.name;
+--------+------+---------------+--------+--------+------+---------+
| name   | uid  | shell         | name   | passwd | gid  | homedir |
+--------+------+---------------+--------+--------+------+---------+
| root   |    0 | /sbin/nologin | root   | x      |    0 | /root   |
| bin    |    1 | /sbin/nologin | bin    | x      |    1 | /bin    |
| daemon |    2 | /sbin/nologin | daemon | x      |    2 | /sbin   |
+--------+------+---------------+--------+--------+------+---------+
                                //只显示v1,v2表中name字段相同的行的数据

嵌套查询:
select 字段名列表 from 表名 where 条件(select 字段名列表 from 表名 where 条件);
                                //把括号内的查询结果作为括号外查询条件
select name,uid from 晨练.user where uid>(select avg(uid) from 晨练.user);
                               //查询晨练库user表中uid大于uid平均值的值
+-----------+-------+
| name      | uid   |
+-----------+-------+
| nfsnobody | 65535 |
+-----------+-------+

select name from 晨练.user where name in (select name from db4.v1);
                                 //查看晨练库user表与db4库v1表中同时存在的用户
+--------+
| name   |
+--------+
| root   |
| bin    |
| daemon |
+--------+

链接查询:
create table v3 select name,uid,shell from 晨练.user limit 5;
+--------+------+---------------+
| name   | uid  | shell         |
+--------+------+---------------+
| root   |    0 | /sbin/nologin |
| bin    |    1 | /sbin/nologin |
| daemon |    2 | /sbin/nologin |
| adm    |    3 | /sbin/nologin |
| lp     |    4 | /sbin/nologin |
+--------+------+---------------+

create table v4 select name,uid,shell from 晨练.user limit 7;
+----------+------+----------------+
| name     | uid  | shell          |
+----------+------+----------------+
| root     |    0 | /sbin/nologin  |
| bin      |    1 | /sbin/nologin  |
| daemon   |    2 | /sbin/nologin  |
| adm      |    3 | /sbin/nologin  |
| lp       |    4 | /sbin/nologin  |
| sync     |    5 | /sbin/nologin  |
| shutdown |    6 | /sbin/shutdown |
+----------+------+----------------+

左链接:以左边的表为主显示查询结果 left join
select 字段名列表 from 表名1 left jion 表名2 on 条件;
select * from v3 left join v4 on v3.uid=v4.uid;
                        //以v3表为主显示v3表中uid与v4表中uid相等的行的所有值
+--------+------+---------------+--------+------+---------------+
| name   | uid  | shell         | name   | uid  | shell         |
+--------+------+---------------+--------+------+---------------+
| root   |    0 | /sbin/nologin | root   |    0 | /sbin/nologin |
| bin    |    1 | /sbin/nologin | bin    |    1 | /sbin/nologin |
| daemon |    2 | /sbin/nologin | daemon |    2 | /sbin/nologin |
| adm    |    3 | /sbin/nologin | adm    |    3 | /sbin/nologin |
| lp     |    4 | /sbin/nologin | lp     |    4 | /sbin/nologin |
+--------+------+---------------+--------+------+---------------+

右链接:以右边的表为主显示查询结果 right join
select 字段名列表 from 表名1 right jion 表名2 on 条件;
select * from v3 right join v4 on v3.uid=v4.uid;
                        //以v4表为主显示v3表中uid与v4表中uid相等的行的所有值
+--------+------+---------------+----------+------+----------------+
| name   | uid  | shell         | name     | uid  | shell          |
+--------+------+---------------+----------+------+----------------+
| root   |    0 | /sbin/nologin | root     |    0 | /sbin/nologin  |
| bin    |    1 | /sbin/nologin | bin      |    1 | /sbin/nologin  |
| daemon |    2 | /sbin/nologin | daemon   |    2 | /sbin/nologin  |
| adm    |    3 | /sbin/nologin | adm      |    3 | /sbin/nologin  |
| lp     |    4 | /sbin/nologin | lp       |    4 | /sbin/nologin  |
| NULL   | NULL | NULL          | sync     |    5 | /sbin/nologin  |
| NULL   | NULL | NULL          | shutdown |    6 | /sbin/shutdown |
+--------+------+---------------+----------+------+----------------+

安装phpMyAdmin:
部署环境LAMP或者LNMP
yum -y install httpd php php-mysql 
systemctl restart httpd

tar -xf phpMyAdmin-2.11.11-all-languages.tar.gz 
                                  //解包
cd phpMyAdmin-2.11.11-all-languages/
                                  //进目录
mv phpMyAdmin-2.11.11-all-languages /var/www/html/phpadmin
                                  //移动到网页目录下并改名

创建配置文件,指定管理数据库的服务器
cd /var/www/html/phpadmin
                                  //进入目录
cp config.sample.inc.php config.inc.php
                                  //拷贝模板文件创建配置文件
vim config.inc.php
                                  //修改配置文件
firefox http://192.168.4.50/phpadmin     
                                  //链接网页版数据库

创建授权:
grant 权限列表 on 库名.表名
grant all on *.* to ljw@'192.168.4.%' identified by "123456";
                   //192.168.4.0网段可以用ljw,密码123456来登录mysql

grant all on *.* to ljw@'%' identified by "123456";
                   //所有主机都可以用ljw,密码123456来登录mysql

grant select,insert on 晨练.user to ljw@'192.168.4.254' identified by "123456";
                  //192.168.4.254主机可以用ljw,密码123456来登录mysql,
                     对晨练库的user表有查询和插入权限

Query OK, 0 rows affected, 1 warning (0.00 sec)
                                      //命令执行成功的提示
| NULL   | NULL | NULL          | sync     |    5 | /sbin/nologin  |
| NULL   | NULL | NULL          | shutdown |    6 | /sbin/shutdown |
+--------+------+---------------+----------+------+----------------+

安装phpMyAdmin:
部署环境LAMP或者LNMP
yum -y install httpd php php-mysql 
systemctl restart httpd

tar -xf phpMyAdmin-2.11.11-all-languages.tar.gz 
                                  //解包
cd phpMyAdmin-2.11.11-all-languages/
                                  //进目录
mv phpMyAdmin-2.11.11-all-languages /var/www/html/phpadmin
                                  //移动到网页目录下并改名

创建配置文件,指定管理数据库的服务器
cd /var/www/html/phpadmin
                                  //进入目录
cp config.sample.inc.php config.inc.php
                                  //拷贝模板文件创建配置文件
vim config.inc.php
                                  //修改配置文件
firefox http://192.168.4.50/phpadmin     
                                  //链接网页版数据库

创建授权:
grant 权限列表 on 库名.表名
grant all on *.* to ljw@'192.168.4.%' identified by "123456";
                   //192.168.4.0网段可以用ljw,密码123456来登录mysql

grant all on *.* to ljw@'%' identified by "123456";
                   //所有主机都可以用ljw,密码123456来登录mysql

grant select,insert on 晨练.user to ljw@'192.168.4.254' identified by "123456";
                  //192.168.4.254主机可以用ljw,密码123456来登录mysql,
                     对晨练库的user表有查询和插入权限

Query OK, 0 rows affected, 1 warning (0.00 sec)
                                      //命令执行成功的提示

########################################################################################

多表查询:
select 字段名列表 from 表名列表 where 条件;

create table v1 select name,uid,gid,shell from 晨练.user limit 3;
                 //用晨练库里user表中name,uid,gid,shell行的前三个值创建新表v1
+--------+------+---------------+
| name   | uid  | shell         |
+--------+------+---------------+
| root   |    0 | /sbin/nologin |
| bin    |    1 | /sbin/nologin |
| daemon |    2 | /sbin/nologin |
+--------+------+---------------+

create table v2 select name,passwd,gid,homedir from 晨练.user limit 5;
              //用晨练库里user表中的name,passwd,gid,homedir行的前5个值创建新表v2
+--------+--------+------+----------------+
| name   | passwd | gid  | homedir        |
+--------+--------+------+----------------+
| root   | x      |    0 | /root          |
| bin    | x      |    1 | /bin           |
| daemon | x      |    2 | /sbin          |
| adm    | x      |    4 | /var/adm       |
| lp     | x      |    7 | /var/spool/lpd |
+--------+--------+------+----------------+

笛卡尔集
select * from v1,v2;                    //结果为笛卡尔集,共有15行
+--------+------+---------------+--------+--------+------+----------------+
| name   | uid  | shell         | name   | passwd | gid  | homedir        |
+--------+------+---------------+--------+--------+------+----------------+
| root   |    0 | /sbin/nologin | root   | x      |    0 | /root          |
| bin    |    1 | /sbin/nologin | root   | x      |    0 | /root          |
| daemon |    2 | /sbin/nologin | root   | x      |    0 | /root          |
| root   |    0 | /sbin/nologin | bin    | x      |    1 | /bin           |
| bin    |    1 | /sbin/nologin | bin    | x      |    1 | /bin           |
| daemon |    2 | /sbin/nologin | bin    | x      |    1 | /bin           |
| root   |    0 | /sbin/nologin | daemon | x      |    2 | /sbin          |
| bin    |    1 | /sbin/nologin | daemon | x      |    2 | /sbin          |
| daemon |    2 | /sbin/nologin | daemon | x      |    2 | /sbin          |
| root   |    0 | /sbin/nologin | adm    | x      |    4 | /var/adm       |
| bin    |    1 | /sbin/nologin | adm    | x      |    4 | /var/adm       |
| daemon |    2 | /sbin/nologin | adm    | x      |    4 | /var/adm       |
| root   |    0 | /sbin/nologin | lp     | x      |    7 | /var/spool/lpd |
| bin    |    1 | /sbin/nologin | lp     | x      |    7 | /var/spool/lpd |
| daemon |    2 | /sbin/nologin | lp     | x      |    7 | /var/spool/lpd |
+--------+------+---------------+--------+--------+------+----------------+
         
select v1.*,v2.passwd,v2.gid,v2.homedir from v1,v2;
+--------+------+---------------+--------+------+----------------+
| name   | uid  | shell         | passwd | gid  | homedir        |
+--------+------+---------------+--------+------+----------------+
| root   |    0 | /sbin/nologin | x      |    0 | /root          |
| bin    |    1 | /sbin/nologin | x      |    0 | /root          |
| daemon |    2 | /sbin/nologin | x      |    0 | /root          |
| root   |    0 | /sbin/nologin | x      |    1 | /bin           |
| bin    |    1 | /sbin/nologin | x      |    1 | /bin           |
| daemon |    2 | /sbin/nologin | x      |    1 | /bin           |
| root   |    0 | /sbin/nologin | x      |    2 | /sbin          |
| bin    |    1 | /sbin/nologin | x      |    2 | /sbin          |
| daemon |    2 | /sbin/nologin | x      |    2 | /sbin          |
| root   |    0 | /sbin/nologin | x      |    4 | /var/adm       |
| bin    |    1 | /sbin/nologin | x      |    4 | /var/adm       |
| daemon |    2 | /sbin/nologin | x      |    4 | /var/adm       |
| root   |    0 | /sbin/nologin | x      |    7 | /var/spool/lpd |
| bin    |    1 | /sbin/nologin | x      |    7 | /var/spool/lpd |
| daemon |    2 | /sbin/nologin | x      |    7 | /var/spool/lpd |
+--------+------+---------------+--------+------+----------------+
         //v1表中的每一列都和v2表中的每一列匹配并显示一次,所以v2表每一列都会显示3次

select v1.*,v2.passwd,v2.gid,v2.homedir from v1,v2 where v1.name=v2.name;
+--------+------+---------------+--------+------+---------+
| name   | uid  | shell         | passwd | gid  | homedir |
+--------+------+---------------+--------+------+---------+
| root   |    0 | /sbin/nologin | x      |    0 | /root   |
| bin    |    1 | /sbin/nologin | x      |    1 | /bin    |
| daemon |    2 | /sbin/nologin | x      |    2 | /sbin   |
+--------+------+---------------+--------+------+---------+

select v1.*,v2.name,v2.passwd,v2.gid,v2.homedir 
from v1,v2 where v1.name=v2.name;
+--------+------+---------------+--------+--------+------+---------+
| name   | uid  | shell         | name   | passwd | gid  | homedir |
+--------+------+---------------+--------+--------+------+---------+
| root   |    0 | /sbin/nologin | root   | x      |    0 | /root   |
| bin    |    1 | /sbin/nologin | bin    | x      |    1 | /bin    |
| daemon |    2 | /sbin/nologin | daemon | x      |    2 | /sbin   |
+--------+------+---------------+--------+--------+------+---------+
                                //只显示v1,v2表中name字段相同的行的数据

嵌套查询:
select 字段名列表 from 表名 where 条件(select 字段名列表 from 表名 where 条件);
                                //把括号内的查询结果作为括号外查询条件
select name,uid from 晨练.user where uid>(select avg(uid) from 晨练.user);
                               //查询晨练库user表中uid大于uid平均值的值
+-----------+-------+
| name      | uid   |
+-----------+-------+
| nfsnobody | 65535 |
+-----------+-------+

select name from 晨练.user where name in (select name from db4.v1);
                                 //查看晨练库user表与db4库v1表中同时存在的用户
+--------+
| name   |
+--------+
| root   |
| bin    |
| daemon |
+--------+

链接查询:
create table v3 select name,uid,shell from 晨练.user limit 5;
+--------+------+---------------+
| name   | uid  | shell         |
+--------+------+---------------+
| root   |    0 | /sbin/nologin |
| bin    |    1 | /sbin/nologin |
| daemon |    2 | /sbin/nologin |
| adm    |    3 | /sbin/nologin |
| lp     |    4 | /sbin/nologin |
+--------+------+---------------+

create table v4 select name,uid,shell from 晨练.user limit 7;
+----------+------+----------------+
| name     | uid  | shell          |
+----------+------+----------------+
| root     |    0 | /sbin/nologin  |
| bin      |    1 | /sbin/nologin  |
| daemon   |    2 | /sbin/nologin  |
| adm      |    3 | /sbin/nologin  |
| lp       |    4 | /sbin/nologin  |
| sync     |    5 | /sbin/nologin  |
| shutdown |    6 | /sbin/shutdown |
+----------+------+----------------+

左链接:以左边的表为主显示查询结果 left join
select 字段名列表 from 表名1 left jion 表名2 on 条件;
select * from v3 left join v4 on v3.uid=v4.uid;
                        //以v3表为主显示v3表中uid与v4表中uid相等的行的所有值
+--------+------+---------------+--------+------+---------------+
| name   | uid  | shell         | name   | uid  | shell         |
+--------+------+---------------+--------+------+---------------+
| root   |    0 | /sbin/nologin | root   |    0 | /sbin/nologin |
| bin    |    1 | /sbin/nologin | bin    |    1 | /sbin/nologin |
| daemon |    2 | /sbin/nologin | daemon |    2 | /sbin/nologin |
| adm    |    3 | /sbin/nologin | adm    |    3 | /sbin/nologin |
| lp     |    4 | /sbin/nologin | lp     |    4 | /sbin/nologin |
+--------+------+---------------+--------+------+---------------+

右链接:以右边的表为主显示查询结果 right join
select 字段名列表 from 表名1 right jion 表名2 on 条件;
select * from v3 right join v4 on v3.uid=v4.uid;
                        //以v4表为主显示v3表中uid与v4表中uid相等的行的所有值
+--------+------+---------------+----------+------+----------------+
| name   | uid  | shell         | name     | uid  | shell          |
+--------+------+---------------+----------+------+----------------+
| root   |    0 | /sbin/nologin | root     |    0 | /sbin/nologin  |
| bin    |    1 | /sbin/nologin | bin      |    1 | /sbin/nologin  |
| daemon |    2 | /sbin/nologin | daemon   |    2 | /sbin/nologin  |
| adm    |    3 | /sbin/nologin | adm      |    3 | /sbin/nologin  |
| lp     |    4 | /sbin/nologin | lp       |    4 | /sbin/nologin  |
| NULL   | NULL | NULL          | sync     |    5 | /sbin/nologin  |
| NULL   | NULL | NULL          | shutdown |    6 | /sbin/shutdown |
+--------+------+---------------+----------+------+----------------+

安装phpMyAdmin:
部署环境LAMP或者LNMP
yum -y install httpd php php-mysql 
systemctl restart httpd

tar -xf phpMyAdmin-2.11.11-all-languages.tar.gz 
                                  //解包
cd phpMyAdmin-2.11.11-all-languages/
                                  //进目录
mv phpMyAdmin-2.11.11-all-languages /var/www/html/phpadmin
                                  //移动到网页目录下并改名

创建配置文件,指定管理数据库的服务器
cd /var/www/html/phpadmin
                                  //进入目录
cp config.sample.inc.php config.inc.php
                                  //拷贝模板文件创建配置文件
vim config.inc.php
                                  //修改配置文件
firefox http://192.168.4.50/phpadmin     
                                  //链接网页版数据库

创建授权:
grant 权限列表 on 库名.表名
grant all on *.* to ljw@'192.168.4.%' identified by "123456";
                   //192.168.4.0网段可以用ljw,密码123456来登录mysql

grant all on *.* to ljw@'%' identified by "123456";
                   //所有主机都可以用ljw,密码123456来登录mysql

grant select,insert on 晨练.user to ljw@'192.168.4.254' identified by "123456";
                  //192.168.4.254主机可以用ljw,密码123456来登录mysql,
                     对晨练库的user表有查询和插入权限

Query OK, 0 rows affected, 1 warning (0.00 sec)
                                      //命令执行成功的提示
####################################################################################################################

innobackupex 基本选项

  常用选项                        含义
--redo-only                    日志合并
--apply-log                    准备还原 ( 回滚日志 )
--copy-back                    恢复数据
--incremental 目录名            增量备份
--incremental--basedir=目录名   增量备份时,指定上一次备份数据存储的目录名
--incremental-dir=目录名        准备恢复数据时,指定增量备份数据存储的目录名
--export                       导出表信息
import                         导入表空间

####################################################################################################################

--在完全备份文件中恢复单个表：

innobackupex   --user  root   --password  123456  --databases="gamedb"  /allbak  --no-timestamp
 
mysql> drop table a;

create table gamedb.a(id int);                               // 创建表
select *  from gamedb.a;

alter  table gamedb.a discard tablespace;                    // 删除表空间

innobackupex --user root --password 123456 --databases="gamedb" --apply-log --export /allbak   //导出表信息


cp  /allbak/gamedb/a.{ibd,cfg,exp}  /var/lib/mysql/gamedb    // 拷贝表信息文件

chown -R  mysql:mysql /var/lib/mysql/                        // 修改所有者
 

mysql> alter table gamedb.a import tablespace;               // 导入表空间


mysql> select * from gamedb.a;

###############################################################################################################

2018年 07月 20日 星期五 09:37:58 CST

192.168.4.50--host50（客户端）
192.168.4.51--host51（主master）
192.168.4.52--host52（从slave）

mysql主从同步
什么是主从同步？
实现的功能是什么？
怎么配置？
 
1.--主master库(192.168.4.51-host51)配置如下：
1）启用binlog日志文件
[mysqld]
log-bin=master51
server_id=51
binlog_format="mixed"

2）用户授权：给从库体内加连接时使用的用户名
mysql > grant  replication slave on *.*  to  repluser@'%' identified  by "123qqq...A";


3）查看正在使用的binlog日志信息
mysql> show  master status;
+-----------------+----------+--------------+------------------+-------------------+
| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-----------------+----------+--------------+------------------+-------------------+
| master51.000001 |      739 |              |                  |                   |
+-----------------+----------+--------------+------------------+-------------------+
1 row in set (0.00 sec)

2.--从slave库(192.168.4.52-host52)配置如下：
1)指定server—id
[mysqld]
server_id=52

]# systemctl restart mysqld

2)测试授权用户
mysql  -h 192.168.4.51  -urepluser  -p123qqq...A;

mysql> show  grants;
+--------------------------------------------------+
| Grants for repluser@%                            |
+--------------------------------------------------+
| GRANT REPLICATION SLAVE ON *.* TO 'repluser'@'%' |
+--------------------------------------------------+
1 row in set (0.00 sec)


3)管理本机登录指定主库信息
[1]]# mysql  -uroot -p123456

[2]mysql> change master to master_host="192.168.4.51",master_user="repluser",master_password="123qqq...A",master_log_file="master51.000001",master_log_pos=739;
Query OK, 0 rows affected, 2 warnings (0.19 sec)

[3]mysql> start slave;
Query OK, 0 rows affected (0.03 sec)

[4]mysql> show  slave status\G;
...
Slave_IO_Running: Yes      
Slave_SQL_Running: Yes
...

排错方法：


mysql > stop slave;
mysql > change master to master_log_file="master51.000001";

4)查看配置


客户端测试主从同配置？
在mster主库(host51)服务器上管理员本机登录，添加客户端(host50)存储数据时，使用的连接用户。
mysql> create database  gamedb;
Query OK, 1 row affected (0.08 sec)

mysql> create table gamedb.t1(id  int);
Query OK, 0 rows affected (0.23 sec)

mysql> grant select,insert  on  gamedb.* to webadmin@"%"  identified by "123qqq...A";
Query OK, 0 rows affected, 1 warning (0.05 sec)


客户端连接主库存储数据

--[root@host50 ~]

[root@host50 ~]# mysql  -h192.168.4.51  -uwebadmin  -p123qqq...A

mysql> show grants;
+------------------------------------------------------+
| Grants for webadmin@%                                |
+------------------------------------------------------+
| GRANT USAGE ON *.* TO 'webadmin'@'%'                 |
| GRANT SELECT, INSERT ON `gamedb`.* TO 'webadmin'@'%' |
+------------------------------------------------------+
[root@host50 ~]
mysql> insert  into  t1  values(222);
mysql> insert  into  t1  values(2222);
mysql> insert  into  t1  values(22222);
mysql> insert  into  t1  values(222265562);
mysql> insert  into  t1  values(22432);

mysql> select  *  from  t1;
+-----------+
| id        |
+-----------+
|       222 |
|      2222 |
|     22222 |
| 222265562 |
|     22432 |
+-----------+



--[root@host51~]

mysql> select * from t1;
+-----------+
| id        |
+-----------+
|       222 |
|      2222 |
|     22222 |
| 222265562 |
|     22432 |
+-----------+
5 rows in set (0.00 sec)




--[root@host52~]

mysql> select * from   gamedb.t1;
+-----------+
| id        |
+-----------+
|       222 |
|      2222 |
|     22222 |
| 222265562 |
|     22432 |
+-----------+
5 rows in set (0.00 sec)



主从同步原理？

mysql> show  processlist;
+----+----------+--------------------+--------+-------------+------+---------------------------------------------------------------+-------------------+
| Id | User     | Host               | db     | Command     | Time | State                                                         | Info              |
+----+----------+--------------------+--------+-------------+------+---------------------------------------------------------------+-------------------+
|  8 | repluser | 192.168.4.52:56916 | NULL   | Binlog Dump | 5439 | Master has sent all binlog to slave; waiting for more updates | NULL              |
|  9 | webadmin | 192.168.4.50:33540 | gamedb | Sleep       |  804 |                                                               | NULL              |
| 15 | root     | localhost          | NULL   | Query       |    0 | starting                                                      | show  processlist |
+----+----------+--------------------+--------+-------------+------+---------------------------------------------------------------+-------------------+
3 rows in set (0.00 sec)


--如何让从库暂时不同步主库的数据
在从库执行：mysql > stop  slave


--如何把从库还原成独立的数据库服务器？
]#rm  -rf  master.info   relay-log.info
]#rm  -rf  host53-relay-bin.*
]# systemctl  restart mysqld
mysql > show slave status;


--[root@host53 ~]# cd  /var/lib/mysql
--[root@host53 mysql]# ls
auto.cnf         gamedb                   ibdata1      mysql               public_key.pem
ca-key.pem       host53-relay-bin.000002  ib_logfile0  mysql.sock          relay-log.info
ca.pem           host53-relay-bin.000003  ib_logfile1  mysql.sock.lock     server-cert.pem
client-cert.pem  host53-relay-bin.index   ibtmp1       performance_schema  server-key.pem
client-key.pem   ib_buffer_pool           master.info  private_key.pem     sys
--[root@host53 mysql]# rm  -rf  master.info  relay-log.info 
--[root@host53 mysql]# rm  -rf  host53-relay-bin.* 
--[root@host53 mysql]# systemctl  restart  mysqld
--[root@host53 mysql]# ls
auto.cnf         client-key.pem  ib_logfile0  mysql.sock          public_key.pem
ca-key.pem       gamedb          ib_logfile1  mysql.sock.lock     server-cert.pem
ca.pem           ib_buffer_pool  ibtmp1       performance_schema  server-key.pem
client-cert.pem  ibdata1         mysql        private_key.pem     sys


########################################################################################################

mysql主从同步模式：

主从同步结构模式：

一主一从
一主多从

--mysql> select  user,host from mysql.user;
+-----------+-------------+
| user      | host        |
+-----------+-------------+
| repluser  | %           |
| webadmin  | %           |
| webuser   | %           |
| admin     | 192.168.4.% |
| mysql.sys | localhost   |
| root      | localhost   |
+-----------+-------------+
6 rows in set (0.00 sec)



###########################################################################


2018年 07月 21日 星期六 09:32:31 CST


master 选项
binlog_do_db=库列表名   //只允许同步的库 

binlog_ignore_db=库列表名   //只不允许同步的库


slave 选项


主从同步复制模式


--master：


mysql> show  variables like "have_dynamic_loading"
    -> ;
+----------------------+-------+
| Variable_name        | Value |
+----------------------+-------+
| have_dynamic_loading | YES   |
+----------------------+-------+
1 row in set (0.01 sec)

mysql> install   plugin  rpl_semi_sync_master
    -> soname 'semisync_master.so';
Query OK, 0 rows affected (0.08 sec)


mysql> select plugin_name ,plugin_status from information_schema.plugins  where plugin_name like '%semi%';
+----------------------+---------------+
| plugin_name          | plugin_status |
+----------------------+---------------+
| rpl_semi_sync_master | ACTIVE        |
+----------------------+---------------+
1 row in set (0.01 sec)


启用半同步复制

mysql> show  variables like "rpl_semi_sync_%_enabled";
+------------------------------+-------+
| Variable_name                | Value |
+------------------------------+-------+
| rpl_semi_sync_master_enabled | OFF   |
+------------------------------+-------+
1 row in set (0.01 sec)

mysql> set  global   rpl_semi_sync_master_enabled=1;
Query OK, 0 rows affected (0.00 sec)


mysql> show  variables like "rpl_semi_sync_%_enabled";
+------------------------------+-------+
| Variable_name                | Value |
+------------------------------+-------+
| rpl_semi_sync_master_enabled | ON    |
+------------------------------+-------+
1 row in set (0.00 sec)




--slave：



mysql> install   plugin  rpl_semi_sync_slave soname 'semisync_slave.so';              Query OK, 0 rows affected (0.06 sec)

mysql> select plugin_name ,plugin_status from information_schema.plugins  where plugin_name like '%semi%';
+----------------------+---------------+
| plugin_name          | plugin_status |
+----------------------+---------------+
| rpl_semi_sync_master | ACTIVE        |
| rpl_semi_sync_slave  | ACTIVE        |
+----------------------+---------------+
2 rows in set (0.00 sec)



mysql> set  global   rpl_semi_sync_slave_enabled=1;
Query OK, 0 rows affected (0.00 sec)

mysql> show  variables like "rpl_semi_sync_%_enabled";
+------------------------------+-------+
| Variable_name                | Value |
+------------------------------+-------+
| rpl_semi_sync_master_enabled | ON    |
| rpl_semi_sync_slave_enabled  | ON    |
+------------------------------+-------+
2 rows in set (0.01 sec)



永久配置半同步模式：

master：

[mysqld]
plugin-load=rpl_semi_sync_master=semisync_master.so
rpl_semi_sync_master_enabled=1


slave：

[mysqld]
plugin-load=rpl_semi_sync_slave=semisync_slave.so
rpl_semi_sync_slave_enabled=1


master and slave（既有主又有从的服务器）
[mysqld]
plugin-load="rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"  --必须写在一起
rpl_semi_sync_master_enabled=1
rpl_semi_sync_slave_enabled=1

mysql> show variables  like 'rpl_semi_sync_%_enabled';
+------------------------------+-------+
| Variable_name                | Value |
+------------------------------+-------+
| rpl_semi_sync_master_enabled | ON    |
| rpl_semi_sync_slave_enabled  | ON    |
+------------------------------+-------+
2 rows in set (0.00 sec)


###############################################################################################


mysql数据读写分离：把客户端查询（读，select）数据库的请求和写（insert）入数据的请求，分别给不同的数据库服务器处理




mysql数据读写分离结构的目的：减轻主库的并发访问压力，提高从库的硬件利用率

部署mysql数据读写分离：
人肉分类：需要程序员协同完成，规定程序咋其存储数据时连接master数据库服务，查询数据时连接slave数据库服务

部署实现数据读写分离服务实现：mysql中间件  -———>  mycat  mysql-proxy  maxscale

maxscale-2.1.2-1.rhel.7.x86_64.rpm


##############################################################################################
    +----------+         +----------+
    |  host50  | ------> |  host56  |
    +----------+         +----------+                
                             | 
                             |
          ---------------------------------------
                  |                      |
           +------------+          +------------+
           |   host51   |          |   host52   |
           +------------+          +------------+

配置数据读写分离服务：
1.部署mysql主从同步结构（一主（host51）一丛（host52））



2.测试主从同步配置
2.1在主库给客户端授权存储数据时，连接服务器的用户密码

mysql> create database testdb;
mysql> create table testdb.t1(id  int);
mysql> grant  select  ,insert  on db1.*  to  yaya99@'%'  identified by '123qqq...A';



修改配置文件(host56)

]# cp  /etc/maxscale.cnf{,.bak}  //备份

vim /etc/maxscale.cnf
    ...
  
  9 [maxscale]
 10 threads=auto     //线程数设置
    ...
 
 18 [server1]
 19 type=server
 20 address=192.168.4.51
 21 port=3306
 22 protocol=MySQLBackend
 23
 24 [server2]
 25 type=server
 26 address=192.168.4.52
 27 port=3306
 28 protocol=MySQLBackend
    ...

 35 [MySQL Monitor]      //定义监控的服务器
 36 type=monitor
 37 module=mysqlmon
 38 servers=server1, server2
 39 user=scalemon
 40 passwd=123qqq...A
 41 monitor_interval=10000  //10000毫秒
    ...

//注释掉52-58行  ctrl v --> 下键  --> shift i --> #  ---> esc
 52 #[Read-Only Service]       
 53 #type=service 
 54 #router=readconnroute
 55 #servers=server1
 56 #user=myuser
 57 #passwd=mypwd
 58 #router_options=slave
    ...

 63 [Read-Write Service]             //定义读写数据分离服务
 64 type=service
 65 router=readwritesplit
 66 servers=server1, server2
 67 user=maxscale                    //设置用户
 68 passwd=123qqq...A                //设置密码
 69 max_slave_connections=100%
    ...

 85 #[Read-Only Listener]
 86 #type=listener
 87 #service=Read-Only Service
 88 #protocol=MySQLClient
 89 #port=4008
    ...
 
 97 [MaxAdmin Listener]
 98 type=listener
 99 service=MaxAdmin Service
100 protocol=maxscaled
101 socket=default
102 port=4016

 

根据配置文件的设置(-- host51 上配置)



mysql > grant replication  slave,replication client on *.* to scalemon@'%'  identified by '123qqq...A';


mysql > grant select on mysql.*  to maxscale@'%' identified by '123qqq...A';


mysql > select user from mysql.user where user in ("scalemax","maxscale");


在服务器host56上测试授权用户

]#which  mysql 
]#yum -y install mariadb

]# mysql  -h192.168.4.51  -uscalemon  -p123qqq...A
]# mysql  -h192.168.4.52  -uscalemon  -p123qqq...A

]# mysql  -h192.168.4.51  -umaxsacle  -p123qqq...A
]# mysql  -h192.168.4.52  -umaxsacle  -p123qqq...A


启动服务

[root@host56 ~]# maxscale  -f  /etc/maxscale.cnf 

查看服务信息

[root@host56 ~]# ps -C maxscale
  PID TTY          TIME CMD
 4192 ?        00:00:00 maxscale
[root@host56 ~]# ss -antulp  | grep -i maxscale
tcp    LISTEN     0      128      :::4016         :::*           users:(("maxscale",pid=4192,fd=12))
tcp    LISTEN     0      128      :::4006         :::*           users:(("maxscale",pid=4192,fd=11))

测试读写分离服务器的配置
4.1在host56本机上访问管理，查看

[root@host56 ~]# maxadmin  -uadmin  -pmariadb  -P4016
MaxScale> list servers
Servers.
-------------------+-----------------+-------+-------------+--------------------
Server             | Address         | Port  | Connections | Status              
-------------------+-----------------+-------+-------------+--------------------
server1            | 192.168.4.51    |  3306 |           0 | Master, Running
server2            | 192.168.4.52    |  3306 |           0 | Slave, Running
-------------------+-----------------+-------+-------------+--------------------
MaxScale> 



[root@host51~]#
mysql> show master status;
+-------------+----------+--------------+------------------+-------------------+
| File        | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-------------+----------+--------------+------------------+-------------------+
| db51.000001 |     4055 |              |                  |                   |
+-------------+----------+--------------+------------------+-------------------+
1 row in set (0.00 sec)

[root@host50 ~]# mysql -h192.168.4.56  -P4006 -uyaya9  -p123qqq...A
mysql> insert into  db1.t1 values(777);

[root@host51~]#mysql -uroot -p123456
mysql> show master status;
+-------------+----------+--------------+------------------+-------------------+
| File        | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-------------+----------+--------------+------------------+-------------------+
| db51.000001 |     4865 |              |                  |                   |
+-------------+----------+--------------+------------------+-------------------

--position改变证明写在host51

___________________________________________________________________________________

[root@host52~]#mysql -uroot -p123456
mysql> insert  into  db1.t1 values (333);
Query OK, 1 row affected (0.06 sec)
mysql> insert  into  db1.t1 values (333);
Query OK, 1 row affected (0.06 sec)
mysql> insert  into  db1.t1 values (333);
Query OK, 1 row affected (0.06 sec)


[root@host50~]#mysql  -h192.168.4.56  -uyaya99  -p123qqq...A
mysql> select  *  from db1.t1;
+------+
| id   |
+------+
|    1 |
|   11 |
|  111 |
|    9 |
|    9 |
|    9 |
|  666 |
|  666 |
|  666 |
|  333 |
|  333 |
|  333 |
+------+
12 rows in set (0.00 sec)


[root@host51~#mysql -uroot -p123456

mysql> select  *  from  db1.t1;
+------+
| id   |
+------+
|    1 |
|   11 |
|  111 |
|    9 |
|    9 |
|    9 |
|  666 |
|  666 |
|  666 |
+------+
9 rows in set (0.00 sec)

--在host52中插入数据，在host50中可以查到，但在host51中查不到，证明读在host51

___________________________________________________________________________________________



mysql多实例：在一台物理主机上运行多个数据库服务

[root@host50 ~]# systemctl  stop mysqld
[root@host50 ~]# systemctl  disable  mysqld



装包

[root@host50 ~]# tar  -zxvf  mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz 
[root@host50 ~]# mv  mysql-5.7.20-linux-glibc2.12-x86_64  /usr/local/mysql
[root@host50 ~]# vim  /etc/profile
   ...
 export  PATH=/usr/local/mysql/bin:$PATH

[root@host50 ~]# source /etc/profile
[root@host50 ~]# echo $PATH
/usr/local/mysql/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin


创建主配置文件

[root@host50 ~]# mv  /etc/my.cnf{,.bak}
[root@host50 ~]#

[mysqld_multi]                                // 启用多实例
mysqld = /usr/local/mysql/bin/mysqld_safe     // 指定进程文件的路径
mysqladmin = /usr/local/mysql/bin/mysqladmin  // 指定管理命令路径
user = root                                   // 指定调用进程的用户

[mysqld1]   // 实例进程名称 ,X 表示实例名称 , 如 [mysql2]
port = 3307                     /           // 端口号
datadir = /data3307                        // 数据库目录 ,要手动创建
socket =/data3307/mysql.sock               // 指定 sock 文件的路径和名称
pid-file = /data3307/mysqld.pid            // 进程 pid 号文件位置
log-error = /data3307/mysqld.err           // 错误日志位置

[mysqld2]   // 实例进程名称 ,X 表示实例名称 , 如 [mysql2]
port = 3308                                // 端口号
datadir = /data3308                        // 数据库目录 ,要手动创建
socket =/data3308/mysql.sock               // 指定 sock 文件的路径和名称
pid-file = /data3308/mysqld.pid            // 进程 pid 号文件位置
log-error = /data3308/mysqld.err           // 错误日志位置

:x


mkdir /data3307
mkdir /data3308

初始化授权库

[root@localhost bin]# mysqld --user=mysql --basedir= /usr/local/mysql --datadir=/data3307 --initialize      // 初始化授权库



[root@host50 data3307]# mysqld --user=mysql --basedir=/usr/local/mysql --datadir=/data3307 --initialize

2018-07-21T10:49:13.594652Z 1 [Note] A temporary password is generated for root@localhost: 6umelTr4:tt<

[root@host50 data3307]# mysqld --user=mysql --basedir=/usr/local/mysql --datadir=/data3308 --initialize

2018-07-21T10:51:10.086495Z 1 [Note] A temporary password is generated for root@localhost: 8xE?i2(s9bKq



启动服务

[root@host50 ~]#mysqld_multi  start 1 
[root@host50 ~]#ss -antupl  |grep 3307
tcp    LISTEN     0      80       :::3307      :::*     u[root@ho[r
[root@host50 ~]# mysql  -uroot -p'6umelTr4:tt<'  -S  /data3307/mysql.sock
mysql> alter  user  root@"localhost"   identified  by "123456";
Query OK, 0 rows affected (0.00 sec)

[root@host50 ~]# mysqld_multi  start 2
[root@host50 ~]# ss -antupl  |grep 3308
tcp    LISTEN     0      80       :::3308     :::*       users:(("mysqld",pid=2130,fd=18))
[root@host50 ~]# mysql  -uroot -p'6umelTr4:tt<'  -S  /data3308/mysql.sock
mysql> alter  user  root@"localhost"  identified  by  "123456";
Query OK, 0 rows affected (0.00 sec)



停止指定的实例服务
[root@host50 ~]#mysqld_multi  --user=root   --password=密码  stop 编号

###########################################################################


mysql> show  variables like '%password%';
+---------------------------------------+--------+
| Variable_name                         | Value  |
+---------------------------------------+--------+
| default_password_lifetime             | 0      |
| disconnect_on_expired_password        | ON     |
| log_builtin_as_identified_by_password | OFF    |
| mysql_native_password_proxy_users     | OFF    |
| old_passwords                         | 0      |
| report_password                       |        |
| sha256_password_proxy_users           | OFF    |
| validate_password_check_user_name     | OFF    |
| validate_password_dictionary_file     |        |
| validate_password_length              | 8      |
| validate_password_mixed_case_count    | 1      |
| validate_password_number_count        | 1      |
| validate_password_policy              | MEDIUM |
| validate_password_special_char_count  | 1      |
+---------------------------------------+--------+
14 rows in set (0.00 sec)

mysql> set [global]  变量名=值;   //临时修改

vim /etc/my.cnf                  //永久修改 

mysql服务日志的类型有四种： 
错误日志  binlog日志  查询日志  慢查询日志

查询日志：记录执行的所有sql命令，默认没有开启



三.部署高可用集群：
3.1 准备实验拓扑:
host 56 管理主机（不需要运行数据库服务）
host 51-55 是数据库服务器（只保留初始的4个库）


把软件包拷贝到所有的主机里51-56
在所有的主机上安装软件包51-56
]# cd mha-soft-student 
]# ls 
master_ip_failover
mha4mysql-manager-0.56.tar.gz
mha4mysql-node-0.56-0.el6.noarch.rpm
perl-Config-Tiny-2.14-7.el7.noarch.rpm
perl-Email-Date-Format-1.002-15.el7.noarch.rpm
perl-Log-Dispatch-2.41-1.el7.1.noarch.rpm
perl-Mail-Sender-0.8.23-1.el7.noarch.rpm
perl-Mail-Sendmail-0.79-21.el7.art.noarch.rpm
perl-MIME-Lite-3.030-1.el7.noarch.rpm
perl-MIME-Types-1.38-2.el7.noarch.rpm
perl-Parallel-ForkManager-1.18-2.el7.noarch.rpm
]#yum  -y  install  perl-*

所有数据库服务器之间可以无密码登录

#######################################################################################################################

--MHA高可用配置

部署集群环境:
一主多从  主从同步结构
在做主库的主机上开启半同步复制 且设置不自动删除中继日志
配置免密钥登录:56 -->(51-55)  51<-->55
所有主机都要安装软件依赖包perl

配置集群:
1.配置数据库服务器:安装mha_node软件包mha
2.配置管理主机:
2.1安装软件包:mha_node(51-56)和 mha_manager(56)
2.2创建管理命令
2.3编写主配置文件app1.cnf（定义56主机本机的配置  指定数据库服务器）
2.4根据配置文件的设置在数据库服务器上创建监控用户和在本机创建故障切换脚本并修改
2.5测试主配置文件的免密服务（masterha_check_ssh --conf=/etc/mha/app1.cnf）和主从同步服务（masterha_check_repl --conf=/etc/mha/app1.cnf）
2.6手动把规定的vip地址部署在主库上
2.7启动管理服务（masterha_check_repl --conf=/etc/mha/app1.cnf）并查看状态（masterha_check_status --conf=/etc/mha/app1.cnf）

3.测试集群
3.1访问集群存储数据 （客户端连接VIP地址访问数据库服务）
3.2测试高可用

4.把挂掉的原主库添加到集群里
4.1把挂掉的主机的数据库与当前的主库同步
4.2把挂掉的主机设置为当前主库的从库
4.3把挂掉主机的信息添加到管理主机的主配置文件作为备用主库


########################################################################################################################


拓扑结构

            master51
	        |
		|
______________________________________________________
  |		|         |         |		|
 slave52    slave53   slave54     slave55      mgm56
                                              Manager


一、配置所有数据节点主机之间可以互相以ssh密钥对方式认证登陆
二、配置manager56主机 无密码ssh登录 所有数据节点主机

三、配置主从同步,要求如下：
51 主库		    开半同步复制
52 从库（备用主库）  开半同步复制
53 从库（备用主库）  开半同步复制
54 从库 不做备用主库所以不用开半同步复制 
55 从库 不做备用主库所以不用开半同步复制


3.1、master51配置：
vim  /etc/my.cnf
[mysqld]
plugin-load = "rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"
rpl-semi-sync-master-enabled = 1
rpl-semi-sync-slave-enabled = 1

server_id=51
log-bin=master51
binlog-format="mixed"
:wq

[root@db107 ~]# systemctl  restart mysqld

[root@db107 ~]# ls /var/lib/mysql/master51.*
/var/lib/mysql/master51.000001  /var/lib/mysql/master51.index

[root@db107 ~]# mysql -uroot -p123456
mysql> grant  replication slave  on  *.*  to repluser@"%"  identified by "123456";
Query OK, 0 rows affected, 1 warning (10.04 sec)

mysql> set global relay_log_purge=off;
Query OK, 0 rows affected (0.15 sec)

mysql> show master status;
+-----------------+----------+--------------+------------------+-------------------+
| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-----------------+----------+--------------+------------------+-------------------+
| master51.000001 |      441 |              |                  |                   |
+-----------------+----------+--------------+------------------+-------------------+
mysql> quit;


3.2、备用master52的配置
vim /etc/my.cnf
[mysqld]
plugin-load = "rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"
rpl-semi-sync-master-enabled = 1
rpl-semi-sync-slave-enabled = 1

server_id=52
log-bin=master52
binlog-format="mixed"

]# systemctl restart mysqld
[root@db108 ~]# ls /var/lib/mysql/master52.*
/var/lib/mysql/master52.000001  /var/lib/mysql/master52.index

[root@db108 ~]# mysql  -uroot  -p123456

mysql> set global relay_log_purge=off; 
Query OK, 0 rows affected (0.13 sec)

mysql> change master to 
    -> master_host="192.168.4.51",
    -> master_user="repluser",
    -> master_password="123456",
    -> master_log_file="master51.000001",
    -> master_log_pos=441;
Query OK, 0 rows affected, 2 warnings (0.04 sec长生)

mysql> start slave;
Query OK, 0 rows affected (0.01 sec)


[root@db108 ~]# mysql -uroot -p123456 -e "show slave status\G"  | grep -i YES
mysql: [Warning] Using a password on the command line interface can be insecure.
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
[root@db108 ~]# 


3.3、备用master53的配置
]#  vim /etc/my.cnf
[mysqld]
plugin-load = "rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"
rpl-semi-sync-master-enabled = 1
rpl-semi-sync-slave-enabled = 1

server_id=53
log-bin=master53
binlog-format="mixed"
:wq

[root@db109 ~]# systemctl  restart mysqld
[root@db109 ~]# ls /var/lib/mysql/master53.*
/var/lib/mysql/master53.000001  /var/lib/mysql/master53.index
[root@db109 ~]# 

[root@db109 ~]# mysql -uroot -p123456
mysql> set global relay_log_purge=off;
Query OK, 0 rows affected (0.14 sec)

mysql> change master  to master_host="192.168.4.51",master_user="repluser",master_password="123456",master_log_file="master51.000001",master_log_pos=441;
Query OK, 0 rows affected, 2 warnings (0.05 sec)

mysql> start slave;
Query OK, 0 rows affected (0.00 sec)

mysql> 

[root@db109 ~]# mysql -uroot -p123456 -e "show slave status\G" | grep -i yes
mysql: [Warning] Using a password on the command line interface can be insecure.
             Slave_IO_Running: Yes
             Slave_SQL_Running: Yes
[root@db109 ~]# 


3.4、配置从服务器54
[root@db111 ~]# vim /etc/my.cnf
[mysqld]
server_id=54
:wq

[root@db111 ~]# systemctl  restart mysqld
[root@db111 ~]# mysql -uroot -p123456
mysql> change master  to master_host="192.168.4.51",master_user="repluser",master_password="123456",master_log_file="master51.000001",master_log_pos=441;
Query OK, 0 rows affected, 2 warnings (0.09 sec)

mysql> start slave;
Query OK, 0 rows affected (0.00 sec)

mysql> quit;
Bye
[root@db111 ~]# 
[root@db111 ~]# mysql -uroot -p123456 -e "show slave status\G" | grep -i yes
mysql: [Warning] Using a password on the command line interface can be insecure.
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
[root@db111 ~]# 


3.5、配置从服务器55
[root@db111 ~]# vim /etc/my.cnf
[mysqld]
server_id=55
:wq

[root@db111 ~]# systemctl  restart mysqld
[root@db111 ~]# mysql -uroot -p123456
mysql> change master  to master_host="192.168.4.51",master_user="repluser",master_password="123456",master_log_file="master51.000001",master_log_pos=441;
Query OK, 0 rows affected, 2 warnings (0.09 sec)

mysql> start slave;
Query OK, 0 rows affected (0.00 sec)

mysql> quit;
Bye
[root@db111 ~]# 
[root@db111 ~]# mysql -uroot -p123456 -e "show slave status\G" | grep -i yes
mysql: [Warning] Using a password on the command line interface can be insecure.
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
[root@db111 ~]# 


3.6、在客户端测试主从同步配置
3.6.1  在主库51上添加访问数据的授权用户
[root@db107 ~]# mysql -uroot -p123456
mysql> grant all on  db.* to admin@"%" identified by "123456";

3.6.2  在客户端主机连接主库51 建库表记录
mysql> create database db;
Query OK, 1 row affected (0.01 sec)

mysql> create table  db.t1 (id int);
Query OK, 0 rows affected (0.04 sec)

mysql> insert into db.t1 values(999);
Query OK, 1 row affected (0.15 sec)

mysql> insert into db.t1 values(999);
Query OK, 1 row affected (0.05 sec)

mysql> select  * from gamedb.t1;
+------+select * from db.t1;
| id   |
+------+
|  999 |
|  999 |
+------+
2 rows in set (0.00 sec)

mysql> 

3.6.3  在客户端使用授权用户连接从库52-55,也能看到同样的库表及记录

[root@host114 ~]# mysql -h从库IP地址 -uadmin -p123456
mysql> select  * from gamedb.t1;
+------+
| id   |
+------+
|  999 |
|  999 |
+------+


#################################################################################

配置集群
yum  -y install  perl*    //51-56都需要安装 

perl-Config-Tiny-2.14-7.el7.noarch.rpm
perl-Email-Date-Format-1.002-15.el7.noarch.rpm
perl-Log-Dispatch-2.41-1.el7.1.noarch.rpm
perl-Mail-Sender-0.8.23-1.el7.noarch.rpm
perl-Mail-Sendmail-0.79-21.el7.art.noarch.rpm
perl-MIME-Lite-3.030-1.el7.noarch.rpm
perl-MIME-Types-1.38-2.el7.noarch.rpm
perl-Parallel-ForkManager-1.18-2.el7.noarch.rpm


配置数据库服务器(51-55) (--参考上节)
安装mha_node软件
yum -y install perl-DBD-mysql
rpm -ivh mha4mysql-node-0.56-0.el6.noarch.rpm

配置管理主机(56)
yum -y install perl-DBD-mysql
rpm -ivh mha4mysql-node-0.56-0.el6.noarch.rpm

tar -zxvf mha4mysql-manager-0.56.tar.gz 
cd mha4mysql-manager-0.56

perl Makefile.PL                //perl编译,失败,缺少依赖包
yum -y install perl-ExtUtils-* perl-CPAN-*
                                //根据报错提示安装缺少的包

perl Makefile.PL                //perl编译,成功
make && make install            //安装

cd mha4mysql-manager-0.56/bin/

cp -r * /root/bin/              //拷贝mha的程序到bin下

在52.53执行:
grant replication slave on *.* to ljw@'%' identified by "123456";
                               //授权

在56操作:
mkdir /etc/mha

cd mha4mysql-manager-0.56/samples/conf/

cp app1.cnf /etc/mha              //复制配置文件模板到服务目录

vim /etc/mha/app1.cnf
[server default]                  //管理主机默认配置
manager_workdir=/etc/mha          //服务工作目录
manager_log=/etc/mha/manager.log  #日志

master_ip_failover_script=/etc/mha/master_ip_failover  #指定脚本路径

ssh_user=root                     //连接用户
ssh_port=22                       //连接端口

repl_user=ljw                     //主从同步用户
repl_password=123456              //主从同步密码

user=root                         //监控数据库使用的用户
password=123456                   //监控数据库使用的密码

[server1]
hostname=192.168.4.51             //数据库地址
port=3306                         //默认端口号3306,可以忽略
candidate_master=1                //candidate_master代表会竞选主库

[server2]
hostname=192.168.4.52
candidate_master=1

[server3]
hostname=192.168.4.53
candidate_master=1

[server4]
hostname=192.168.4.54
no_master=1                       //no_master代表不竞选主库

[server5]
hostname=192.168.4.55
no_master=1
:wq

cd mha-soft-student/
   
cp master_ip_failover /etc/mha    //把脚本拷贝到配置文件指定目录

vim /etc/mha/master_ip_failover   //查看脚本


在51-55上添加授权:（--不仅仅是备用master添加授权，还包括其他纯slave）

grant all on *.* to root@'%' identified by "123456";
                                  //添加56mha配置文件中监控数据的用户


在56上执行：
masterha_check_ssh --conf=/etc/mha/app1.cnf
                                  //测试56主机的免密登录是否成功
 
chmod +x /etc/mha/master_ip_failover
                                  //给脚本执行权限

masterha_check_repl --conf=/etc/mha/app1.cnf
                                  //测试51-55的主从同步是否成功

在主机51上操作:
ifconfig eth0:1 192.168.4.100/24
                                  //把vip地址手动部署到主机51上

--remove_dead_master_conf         //删除挂掉的主机的配置文件信息


--ignore_last_failover            //忽略主库的健康性检查
                                    --取消不可以在8小时内连续切换主库机制


在56上执行：
masterha_manager --conf=/etc/mha/app1.cnf  --remove_dead_master_conf --ignore_last_failover
                                  //启动mha服务
[root@host56 mha-soft-student]# masterha_manager --conf=/etc/mha/app1.cnf  --remove_dead_master_conf --ignore_last_failover
Tue Jul 24 12:37:52 2018 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.
Tue Jul 24 12:37:52 2018 - [info] Reading application default configuration from /etc/mha/app1.cnf..
Tue Jul 24 12:37:52 2018 - [info] Reading server configuration from /etc/mha/app1.cnf..


masterha_check_status --conf=/etc/mha/app1.cnf
                                  //查看状态

[root@host56 ~]# masterha_check_status --conf=/etc/mha/app1.cnf
app1 (pid:5786) is running(0:PING_OK), master:192.168.4.51



测试高可用
把当前主库51的数据库服务停止,客户端访问数据库连接不会断开,但查看主机名显示的是52主机的主机名;在52主机查看vip地址也可以查到,主库51的配置在管理主机56的配置文件中删除

systemctl stop mysqld
systemctl start mysqld
change master to  master_host="192.168.4.52",master_user="ljw",master_password="123456",master_log_file="db52.000001",master_log_pos=154;
                                    //把51主机配置为52的从库
start slave;

show slave status\G;


在56配置文件中添加51的主机信息
vim /etc/mha/app1.cnf
[server1]
candidate_master=1
hostname=192.168.4.51               //把51主机的信息添加到56的主配置文件中

masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover                //56主机启动mha服务


################################################################################################################

--mha高可用配置

部署集群环境:
一主多从  主从同步结构
在做主库的主机上开启半同步复制 且设置不自动删除中继日志
配置免密钥登录:56 -->(51-55)  51<-->55
所有主机都要安装软件依赖包perl

配置集群:
1.配置数据库服务器:安装mha_node软件包
2.配置管理主机:
2.1安装软件包:mha_node(51-56)和 mha_manager(56)
2.2创建管理命令
2.3编写主配置文件app1.cnf（定义56主机本机的配置  指定数据库服务器）
2.4根据配置文件的设置在数据库服务器上创建监控用户和在本机创建故障切换脚本并修改
2.5测试主配置文件的免密服务（masterha_check_ssh --conf=/etc/mha/app1.cnf）和主从同步服务（masterha_check_repl --conf=/etc/mha/app1.cnf）
2.6手动把规定的vip地址部署在主库上
2.7启动管理服务（masterha_check_repl --conf=/etc/mha/app1.cnf）并查看状态（masterha_check_status --conf=/etc/mha/app1.cnf）

3.测试集群
3.1访问集群存储数据 （客户端连接VIP地址访问数据库服务）
3.2测试高可用

4.把挂掉的原主库添加到集群里
4.1把挂掉的主机的数据库与当前的主库同步
4.2把挂掉的主机设置为当前主库的从库
4.3把挂掉主机的信息添加到管理主机的主配置文件作为备用主库




#############################################################################

mysql> create table t1 select name ,uid, shell from user limit 5;
Query OK, 5 rows affected (0.33 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> create table t2 select name ,uid, homedir,gid  from user limit 6;
Query OK, 6 rows affected (0.27 sec)
Records: 6  Duplicates: 0  Warnings: 0

mysql> drop table t1;
Query OK, 0 rows affected (0.11 sec)

mysql> create table t1 select name ,uid, shell from user limit 3;
Query OK, 3 rows affected (0.23 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> show tables;
+--------------+
| Tables_in_db |
+--------------+
| t1           |
| t2           |
| user         |
| v2           |
+--------------+
4 rows in set (0.00 sec)

mysql> select * from t1 left  join t2  on t1.name=t2.name and t1.uid=t2.uid;
+--------+------+---------------+--------+------+---------+------+
| name   | uid  | shell         | name   | uid  | homedir | gid  |
+--------+------+---------------+--------+------+---------+------+
| root   |    0 | /bin/bash     | root   |    0 | /root   |    0 |
| bin    |    1 | /sbin/nologin | bin    |    1 | /bin    |    1 |
| daemon |    2 | /sbin/nologin | daemon |    2 | /sbin   |    2 |
+--------+------+---------------+--------+------+---------+------+
3 rows in set (0.00 sec)



mysql> create  view  v3  as select  t1.name as aname, t2.name as  bname,t1.uid as auid,t2.uid as buid from t1 left join t2 on t1.uid=t2.uid;
Query OK, 0 rows affected (0.04 sec)

mysql> show  tables;
+--------------+
| Tables_in_db |
+--------------+
| t1           |
| t2           |
| user         |
| v2           |
| v3           |
+--------------+
5 rows in set (0.00 sec)

mysql> select  * from v3;
+--------+--------+------+------+
| aname  | bname  | auid | buid |
+--------+--------+------+------+
| root   | root   |    0 |    0 |
| bin    | bin    |    1 |    1 |
| daemon | daemon |    2 |    2 |
+--------+--------+------+------+
3 rows in set (0.00 sec)

mysql> create  view  v4  as select  a.name as aname, b.name as  bname,a.uid as auid,b.uid as buid from t1 a left join t2 b on a.uid=b.uid;
Query OK, 0 rows affected (0.05 sec)

mysql> select  * from v4;
+--------+--------+------+------+
| aname  | bname  | auid | buid |
+--------+--------+------+------+
| root   | root   |    0 |    0 |
| bin    | bin    |    1 |    1 |
| daemon | daemon |    2 |    2 |
+--------+--------+------+------+
3 rows in set (0.00 sec)



--创建视图时，忽略已有的视图aA_D;qFN8gT,

mysql> create or  replace  view  v3  as select uid,name from user;
Query OK, 0 rows affected (0.04 sec)

mysql> select *  from v3;
+-------+---------------------+
| uid   | name                |
+-------+---------------------+
|     0 | root                |
|     1 | bin                 |
|     2 | daemon              |
|     3 | adm                 |
|     4 | lp                  |
|     5 | sync                |
|     6 | shutdown            |
|     7 | halt                |
|     8 | mail                |
|    11 | operator            |aA_D;qFN8gT,
|    12 | games               |
|    14 | ftp                 |
|    99 | nobody              |
|   192 | systemd-network     |
|    81 | dbus                |
|   999 | polkitd             |
|   998 | libstoragemgmt      |
|    32 | rpc                 |
|   997 | colord              |
|   996 | saslauth            |
|   173 | abrt                |
|   172 | rtkit               |
|    75 | radvd               |
|   995 | chrony              |
|    59 | tss                 |
|   113 | usbmuxd             |
|   994 | geoclue             |
|   107 | qemu                |
|    29 | rpcuser             |
| 65534 | nfsnobody           |
|   993 | setroubleshoot      |
|   171 | pulse               |
|    42 | gdm                 |
|   992 | gnome-initial-setup |
|    74 | sshd                |
|    70 | avahi               |
|    89 | postfix             |
|    38 | ntp                 |
|    72 | tcpdump             |
|  1000 | lisi                |
|    27 | mysql               |
+-------+---------------------+
41 rows in set (0.00 sec)


with check option
local  仅检查视图的创建条件
CASCADED  同时要满足基本的限制(默认)

mysql> create table user2 select  id,name,password,homedir from user where uid <=40;
Query OK, 16 rows affected (0.39 sec)
Records: 16  Duplicates: 0  Warnings: 0

mysql> select * from  user2;
+----+----------+----------+------------------+
| id | name     | password | homedir          |
+----+----------+----------+------------------+
|  1 | root     | x        | /root            |
|  2 | bin      | x        | /bin             |
|  3 | daemon   | x        | /sbin            |
|  4 | adm      | x        | /var/adm         |
|  5 | lp       | x        | /var/spool/lpd   |
|  6 | sync     | x        | /sbin            |
|  7 | shutdown | x        | /sbin            |
|  8 | halt     | x        | /sbin            |
|  9 | mail     | x        | /var/spool/mail  |
| 10 | operator | x        | /root            |
| 11 | games    | x        | /usr/games       |
| 12 | ftp      | x        | /var/ftp         |
| 18 | rpc      | x        | /var/lib/rpcbind |
| 29 | rpcuser  | x        | /var/lib/nfs     |
| 38 | ntp      | x        | /etc/ntp         |
| 41 | mysql    | x        | /var/lib/mysql   |
+----+----------+----------+------------------+
16 rows in set (0.00 sec)


mysql> create  view v6 as select * from user2 where id <= 10 with check option;
Query OK, 0 rows affected (0.07 sec)

mysql> show  create view v6;
+------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------+----------------------+
| View | Create View                                                                                                                                                                                                                                                                     | character_set_client | collation_connection |
+------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------+----------------------+
| v6   | CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `v6` AS select `user2`.`id` AS `id`,`user2`.`name` AS `name`,`user2`.`password` AS `password`,`user2`.`homedir` AS `homedir` from `user2` where (`user2`.`id` <= 10) WITH CASCADED CHECK OPTION | utf8                 | utf8_general_ci      |
+------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------+----------------------+
1 row in set (0.00 sec)


mysql> create view v7 as  select name,id ,password from user2 where id <=18;
Query OK, 0 rows affected (0.07 sec)

mysql> select *  from  v7;
+----------+----+----------+
| name     | id | password |
+----------+----+----------+
| root     |  1 | x        |
| bin      |  2 | x        |
| daemon   |  3 | x        |
| adm      |  4 | x        |
| lp       |  5 | x        |
| sync     |  6 | x        |
| shutdown |  7 | x        |
| halt     |  8 | x        |
| mail     |  9 | x        |
| operator | 10 | x        |
| games    | 11 | x        |
| ftp      | 12 | x        |
| rpc      | 18 | x        |
+----------+----+----------+
13 rows in set (0.00 sec)

mysql> create view v17 as select name,id,password from v7 where id>=10;
Query OK, 0 rows affected (0.04 sec)

mysql> select *  from  v17;
+----------+----+----------+
| name     | id | password |
+----------+----+----------+
| operator | 10 | x        |
| games    | 11 | x        |
| ftp      | 12 | x        |
| rpc      | 18 | x        |
+----------+----+----------+
4 rows in set (0.00 sec)


mysql> update v17  set id=15 where name='rpc';
Query OK, 1 row affected (0.30 sec)
Rows matched: 1  Changed: 1  Warnings: 0


mysql> select *  from  v7;
+----------+----+----------+
| name     | id | password |
+----------+----+----------+
| root     |  1 | x        |
| bin      |  2 | x        |
| daemon   |  3 | x        |
| adm      |  4 | x        |
| lp       |  5 | x        |
| sync     |  6 | x        |
| shutdown |  7 | x        |
| halt     |  8 | x        |
| mail     |  9 | x        |
| operator | 10 | x        |
| games    | 11 | x        |
| ftp      | 12 | x        |
| rpc      | 15 | x        |
+----------+----+----------+
13 rows in set (0.01 sec)


mysql> select *  from  v17;
+----------+----+----------+
| name     | id | password |
+----------+----+----------+
| operator | 10 | x        |
| games    | 11 | x        |
| ftp      | 12 | x        |
| rpc      | 15 | x        |
+----------+----+----------+
4 rows in set (0.00 sec)

-- with local check option;

mysql> create view v18 as select name,id,password from v7 where id >=10 with local check option;
Query OK, 0 rows affected (0.03 sec)



mysql> update v18  set id=20 where name='rpc';
Query OK, 1 row affected (0.04 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select *  from  v18;
+----------+----+----------+
| name     | id | password |
+----------+----+----------+
| operator | 10 | x        |
| games    | 11 | x        |
| ftp      | 12 | x        |
+----------+----+----------+
3 rows in set (0.00 sec)

mysql> select *  from  v7;
+----------+----+----------+
| name     | id | password |
+----------+----+----------+
| root     |  1 | x        |
| bin      |  2 | x        |
| daemon   |  3 | x        |
| adm      |  4 | x        |
| lp       |  5 | x        |
| sync     |  6 | x        |
| shutdown |  7 | x        |
| halt     |  8 | x        |
| mail     |  9 | x        |
| operator | 10 | x        |
| games    | 11 | x        |
| ftp      | 12 | x        |
+----------+----+----------+
12 rows in set (0.00 sec)

mysql> select *  from  user2;
+----+----------+----------+------------------+
| id | name     | password | homedir          |
+----+----------+----------+------------------+
|  1 | root     | x        | /root            |
|  2 | bin      | x        | /bin             |
|  3 | daemon   | x        | /sbin            |
|  4 | adm      | x        | /var/adm         |
|  5 | lp       | x        | /var/spool/lpd   |
|  6 | sync     | x        | /sbin            |
|  7 | shutdown | x        | /sbin            |
|  8 | halt     | x        | /sbin            |
|  9 | mail     | x        | /var/spool/mail  |
| 10 | operator | x        | /root            |
| 11 | games    | x        | /usr/games       |
| 12 | ftp      | x        | /var/ftp         |
| 20 | rpc      | x        | /var/lib/rpcbind |
| 29 | rpcuser  | x        | /var/lib/nfs     |
| 38 | ntp      | x        | /etc/ntp         |
| 41 | mysql    | x        | /var/lib/mysql   |
+----+----------+----------+------------------+
16 rows in set (0.00 sec)





mysql> delimiter //
mysql> create procedure p1()
    -> begin
    -> select count(name) from db.user;
    -> end
    -> //
Query OK, 0 rows affected (0.00 sec)
mysql> delimiter ;


mysql>select db,name,type,body  from mysql.proc;


mysql>select db,name,type,body  from mysql.proc where name='p1'\G;

调用procedure：

mysql> call  p1;
+-------------+
| count(name) |
+-------------+
|          41 |
+-------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

删除procedure

mysql>drop procedure p1;

#############################################################################

mysql视图:
基本使用:
create view 视图名 as sql查询 ;       //创建视图
create view t2 as select name,uid,shell from v1.t1;
                                     //利用t1表的name,uid,shell字段数据建视图表
视图表和基表互相影响,修改其中一个,另一个也会改变

create view t3(vname,vuid,vshell) as select name,uid,shell from t1;
                                     //利用t1表的name,uid,shell字段数据建视图表
                                       并设置字段名为vname,vuid,vshell
show table status;                   
                                     //查看表状态,comment的值为view即为视图表

show create view v1.t1\G;
                                     //查看视图表的创建命令

drop view t2;                        //删除视图表


创建视图的完整格式:
create table t2 select name,uid,shell from t1 limit 5;
create table t3 select name,uid,homedir,gid from t1 limit 8;
                                     //快速创建两张基表

select a.name as aname,b.name as bname,a.uid as auid,b.uid as buid from t2 a left join t3 b on a.name=b.name and a.uid=b.uid;
                             //以t2表和t3表中name,uid字段的数据创建一个视图表,
                               并把字段名分别改为,aname,auid,bname,buid
                               t2 a 与 t3 b为定义变量,调用a即为调用t2表,
                               调用b即为调用t3表
+--------+--------+------+------+
| aname  | bname  | auid | buid |
+--------+--------+------+------+
| root   | root   |    0 |    0 |
| bin    | bin    |    1 |    1 |
| daemon | daemon |    2 |    2 |
| adm    | adm    |    3 |    3 |
| lp     | lp     |    4 |    4 |
+--------+--------+------+------+

create or replace view t2 as select name,uid from t1;
                         //以t1表的name,uid数据创建t2并覆盖原来的t2表

create view t5 as select name,uid from t1 with local check option;
                         //只检查视图自己的创建条件

create view t6 as select * from t5 where uid<80 with cascaded check option;
                         //同时满足视图和基表的条件(默认为cascaded)
                              
update t6 set uid=81 where name="root";
                         //修改失败,uid=81不满足基表条件

create view t8 as select name,id,passwd from t7 where id>=10 with local check option;                  //以t7表id>=10的数据创建t8表
 
update t8 set id=200 where name="rpc";
                         //修改name值为rpc的行id为200,满足t8的创建条件,可以修改

##############################################################################
第十二天下午:

mysql存储过程:mysql服务里的脚本
                                                                           
delimiter //             //把命令结束符改成//

create procedure a1() 
begin 
select count(name) from v1.t1; 
select name,uid from v1.t1 where id<50; 
end//                    //添加存储过程,a1为存储过程名

delimiter ;              //把命令结束符改回;

show procedure status\G;
                         //查看已有的存储过程

select db,name,type,body from mysql.proc where name="a1"\G;
                         //查看指定的存储过程

call a1;                 //调用存储过程

drop procedure a1;       //删除指定存储过程

系统环境变量:会话变量,全局变量

show session variables;   //查看会话变量

show global variables;    //查看全局变量

用户变量:当前登录的用户定义的变量,只对当前用户生效,退出清空

set @name="ljw";          //定义自定义变量
 
select @name;             //调用自定义变量

局部变量:只在存储过程中有效

create procedure a1() begin declare a int default 20; declare b char (15); set b="ljw";select a;select b; end//
                          //定义和调用局部变量

select a,b                //同时调用多个局部变量中间用逗号隔开

存储过程的参数类型:in(输入参数) out(输出参数) inout(输入/输出参数)
计划 

delimiter //

create procedure a1(in a char(15))      //使用in定义参数
begin select user,host from mysql.user where user=a; 
end//                     //存储过程中加入参数,

delimiter ;

call a1("root");          //调用存储过程时也要加入参数
+------+-----------+
| user | host      |
+------+-----------+
| root | localhost |
+------+-----------+

delimiter //

create procedure a2(out a char(15))     //使用out定义参数
begin 
select name  into a from v1.t1 where id=10;
select a; 
end//

delimiter ;

call a2(@a);
+----------+
| a        |
+----------+
| operator |
+----------+

delimiter //

create procedure b1(out b int(15)) 
begin 
select count(shell) into b from v1.t1 where shell="/bin/bash";
select b; 
end//

delimiter ;
                                    //查看shell为/bin/bash的shell个数

call b1(@a);
+------+
| b    |
+------+
|    2 |
+------+

delimiter //

create procedure a1(in bash char(100),in nologin char(120),
out a int(2),out b int(2)) 
begin 
declare c int(2); 
set c=0; 
select count(shell) into a from db.t1 where shell=bash;         1
select count(shell) into b from db.t1 where shell=nologin;      2
set c=a+b; 
select c; 
end//
                       //把1的查询结果给a,2的查询结果给b

call a1("/bin/bash","/sbin/nologin",@q,@w);                         
+------+
| c    |
+------+
|   3  |
+------+
select count(shell) into a from v1.t1 where shell=bash;


############################################################################

2018年 07月 26日 星期四 10:36:50 CST

——————————————————————————————————-————————
delimiter //
create  procedure showlines (in  number int(2))
begin
select id,name ,password from db.user  limit number;
end
//
delimiter ;
call showlines(1);
——————————————————————————————————————————

+----+------+----------+
| id | name | password |
+----+------+----------+
|  1 | root | x        |
+----+------+----------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

--或者书写格式：

mysql> delimiter //  create  procedure showlines1 (in  number int(2)) begin select id,name ,password from db.user  limit number;end //
mysql>  delimiter ;
mysql> call showlines(1);
+----+------+----------+
| id | name | password |
+----+------+----------+
|  1 | root | x        |
+----+------+----------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)


——————————————————————————————————————————-
delimiter //
create  procedure showlines2 (in  number int(2))
begin
if number is null then 
  select id,name ,password from db.user  limit 1;
else
  select id,name ,password from db.user  limit number;
end if;
end
//
delimiter ;
call showlines2(1);
——————————————————————————————————————————

mysql> delimiter //
mysql> create  procedure showlines2 (in  number int(2))
    -> begin
    -> if number is null then 
    ->   select id,name ,password from db.user  limit 1;
    -> else
    ->   select id,name ,password from db.user  limit number;
    -> end if;
    -> end
    -> //
Query OK, 0 rows affected (0.00 sec)

mysql> delimiter ;

mysql> set  @a=5;
Query OK, 0 rows affected (0.00 sec)

mysql> call showlines2(@a);
+----+--------+----------+
| id | name   | password |
+----+--------+----------+
|  1 | root   | x        |
|  2 | bin    | x        |
|  3 | daemon | x        |
|  4 | adm    | x        |
|  5 | lp     | x        |
+----+--------+----------+
5 rows in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

mysql> call showlines2(@b);              //@b变量不存在
+----+------+----------+
| id | name | password |
+----+------+----------+
|  1 | root | x        |
+----+------+----------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)


###############################################################################

循环结构

--while循环
___________________________________________________________________

delimiter //
create procedure prinum (in  number  int(2))
begin  
declare x int(2) default 1;
while x <= number do
   select x;
   set x = x+1;
end  while;
end  //
delimiter ; 
____________________________________________________________________



mysql> delimiter //
mysql> create procedure prinum (in  number  int(2))
    -> begin  
    -> declare x int(2) default 1;
    -> while x <= number do
    ->    select x;
    ->    set x = x+1;aA_D;qFN8gT,
    -> end  while;
    -> end  //
Query OK, 0 rows affected (0.00 sec)

mysql> delimiter ; 

mysql> call prinum(5);
+------+
| x    |
+------+
|    1 |
+------+
1 row in set (0.00 sec)

+------+
| x    |
+------+
|    2 |
+------+
1 row in set (0.00 sec)

+------+
| x    |
+------+
|    3 |
+------+
1 row in set (0.00 sec)

+------+
| x    |
+------+
|    4 |
+------+
1 row in set (0.00 sec)

+------+aA_D;qFN8gT,
| x    |
+------+
|    5 |
+------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

___________________________________________________________________

delimiter //
create procedure odd1()
begin  
declare number int(2);
declare x int(2) default 1;
declare useruid int(2);
select count(*)  into  number  from db.user;
while  x <= number  do
   select uid into useruid from db.user where id = x;
   if useruid%2 = 0 then
     select name,uid from user where id = x;
   end if;
   set x =x+1;
end  while;
end  //
delimiter ; 

call odd(10);


__________________________________________________________________

delimiter //
create procedure odd31(number int(2))
begin  
declare x int(2) default 1;
declare useruid int(2);
while  x <= number  do
   select uid into useruid from db.user where id = x;
   if useruid%2 = 0 then
     select id,name,uid from user where id = x;
   end if;
   set x =x+1;
end  while;
end  //
delimiter ; 

mysql> call odd31(10);

+----+------+------+
| id | name | uid  |
+----+------+------+
|  1 | root |    0 |
+----+------+------+
1 row in set (0.00 sec)

+----+--------+------+
| id | name   | uid  |
+----+--------+------+
|  3 | daemon |    2 |
+----+--------+------+
1 row in set (0.00 sec)

+----+------+------+
| id | name | uid  |
+----+------+------+
|  5 | lp   |    4 |
+----+------+------+
1 row in set (0.00 sec)

+----+----------+------+
| id | name     | uid  |
+----+----------+------+
|  7 | shutdown |    6 |
+----+----------+------+
1 row in set (0.00 sec)

+----+------+------+
| id | name | uid  |
+----+------+------+
|  9 | mail |    8 |
+----+------+------+
1 row in set (0.00 sec)

Query OK, 1 row affected (0.00 sec)
___________________________________________________________________


--loop循环

loop 

执行的sql命令
 ...
end loop;



delimiter //
create procedure loop1()
begin
 declare x int(2) default 1;
 loop 
  select x;
  set x = x+ 1;
 end  loop;
end  //
delimiter ;
call  loop1;

死循环aA_D;qFN8gT,


--repeat 

repeat 

执行的命令;
...
until 条件
end repeat;



delimiter //
create procedure repeat1()
begin
 declare x int(2) default 1;
 repeat
  select x;
  set x = x + 1;
  until x=5
 end  repeat;
end  //
delimiter ;

mysql> call repeat1;
+------+
| x    |
+------+
|    1 |
+------+
1 row in set (0.01 sec)

+------+
| x    |
+------+
|    2 |
+------+
1 row in set (0.01 sec)

+------+
| x    |
+------+
|    3 |
+------+
1 row in set (0.01 sec)

+------+
| x    |
+------+
|    4 |
+------+
1 row in set (0.01 sec)

Query OK, 0 rows affected (0.01 sec)

----------------------------------------------------------------------


LEAVE 表签名； 结束循环  与shell中break用法一样
 
   LEAVE 标签名;    // 跳出循环
 ITERATE 标签名;    // 放弃本次循环,执行下一次循环

delimiter //
create procedure loop3()
begin
 declare x int(2) default 1;
 lable1:loop
  select x;
  set x = x + 1;
  if x=5 then
  LEAVE lable1;
  end if;
 end  loop;aA_D;qFN8gT,
end  //
delimiter ;

mysql> call loop3;
+------+
| x    |
+------+
|    1 |
+------+
1 row in set (0.00 sec)

+------+
| x    |
+------+
|    2 |
+------+
1 row in set (0.00 sec)

+------+
| x    |
+------+
|    3 |
+------+
1 row in set (0.00 sec)

+------+
| x    |
+------+
|    4 |
+------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)





输出1-20之间含有数字5或者是数字5的倍数的数

delimiter //
create procedure pro()
begin
     declare x int(2) default 1;
     label1:while x <= 20 do
       if x%5 = 0 or x regexp 5 then 
          select x;
       else
          set x = x + 1;
          ITERATE label1;
       end if;
       set x = x+1;
     end  while;
end  //
delimiter ;

call pro;

+------+
| x    |
+------+
|    5 |
+------+
1 row in set (0.00 sec)

+------+
| x    |
+------+
|   10 |
+------+
1 row in set (0.00 sec)

+------+
| x    |
+------+
|   15 |
+------+
1 row in set (0.00 sec)

+------+
| x    |
+------+
|   20 |
+------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

#################################################################################




create table employee(ID int(2) primary key auto_increment, name char(15), pay float(7,2),sex enum("boy","girl"),sharding_id  int(11) );



insert into employee(name ,pay ,sex,sharding_id) values("bob",2000,"boy",10010),("lucy",8000,"girl",10000),("jerry",2100,"boy",10000),("tom",3000,"boy",10000),("dom",3000,"boy",10010);






##################################################################################

2018年 07月 27日 星期五 11:33:38 CST

Nosql_day_01
搭建Redis数据库服务器
部署网站架构LAMP支持Redis数据库服务


Redis介绍：分布式内存存储服务器并支持数据的持久化和多种数据类型。
中文官网： www.redis.cn


1. 装包
[root@host51 hao]# rpm  -q   gcc  gcc-c++
[root@host51 hao]# yum   -y  install   gcc  gcc-c++
[root@host51 hao]# tar -xf redis-4.0.8.tar.gz 
[root@host51 hao]# cd redis-4.0.8/
[root@host51 redis-4.0.8]# ls
00-RELEASENOTES  COPYING  Makefile   redis.conf       runtest-sentinel  tests
BUGS             deps     MANIFESTO  runtest          sentinel.conf     utils
CONTRIBUTING     INSTALL  README.md  runtest-cluster  src
[root@host51 redis-4.0.8] make  &&  make  install
[root@host51 redis-4.0.8]# cd utils/
[root@host51 utils]# ./install_server.sh
Welcome to the redis service installer
This script will help you easily set up a running redis server

Please select the redis port for this instance: [6379] 
Selecting default: 6379
Please select the redis config file name [/etc/redis/6379.conf] 
Selected default - /etc/redis/6379.conf
Please select the redis log file name [/var/log/redis_/etc/init.d/redis_63796379.log] 
Selected default - /var/log/redis_6379.log
Please select the data directory for this instance [/var/lib/redis/6379] 
Selected default - /var/lib/redis/6379
Please select the redis executable path [/usr/local/bin/redis-server] 
Selected config:
Port           : 6379
Config file    : /etc/redis/6379.conf
Log file       : /var/log/redis_6379.log
Data dir       : /var/lib/redis/6379
Executable     : /usr/local/bin/redis-server
Cli Executable : /usr/local/bin/redis-cli
Is this ok? Then press ENTER to go on or Ctrl-C to abort.
Copied /tmp/6379.conf => /etc/init.d/redis_6379
Installing service...
Successfully added to chkconfig!
Successfully added to runlevels 345!
Starting Redis server...
Installation successful!
[root@host51 utils]# ss -antup |  grep  6379
tcp    LISTEN     0      128    127.0.0.1:6379                  *:*                   users:(("redis-server",pid=7313,fd=6))



2. 修改配置文件（/etc/redis/6327.conf）
不编辑 按照默认配置运行 




3. 启动服务  做完初始化配置后，自动启动服务

[root@host51 utils]# ss -antup |  grep  6379
tcp    LISTEN     0      128    127.0.0.1:6379                  *:*                   users:(("redis-server",pid=7313,fd=6))


4. 查看服务信息

[root@host51 utils]# ss -antup |  grep 6379

[root@host51 utils]# ps  -C  redis-server
  PID TTY          TIME CMD
 7313 ?        00:00:00 redis-server

[root@host51 utils]# /etc/init.d/redis_6379  status
Redis is running (7313)

[root@host51 utils]# /etc/init.d/redis_6379  status|start|stop

[root@host51 utils]# /etc/init.d/redis_6379 stop  //--必须关掉，再修改端口号



5. 询问服务

[root@host51 utils]# redis-cli
127.0.0.1:6379> exit

修改服务使用的ip地址和端口号

vim /etc/redis/6379.conf
  70 bind 127.0.0.1 --> 70 bind 192.168.4.51
  93 port 6351
  
[root@host51 ~]# /etc/init.d/redis_6379  start

[root@host51 ~]# redis-cli  -h  192.168.4.51 -p 6351
192.168.4.51:6351> 

怎么使其他主机连接51的方法


[root@host51 ~]# scp  -r  /usr/local/bin/redis-cli   192.168.4.50:/usr/local/bin/
[root@host50 ~]# redis-cli  -h  192.168.4.51 -p 6351
192.168.4.51:6351> 


修改服务器使用的ip地址和端口号停止服务的方法

方法一：

[root@host51 ~]# redis-cli  -h  192.168.4.51 -p  6351 shutdown


方法二：vim  /etc/init.d/redis_6379  修改脚本的配置

43 $CLIEXEC -h 192.168.4.51  -p 6351  shutdown





[root@host51 ~]# redis-cli  -h  192.168.4.51 -p 6351
192.168.4.51:6351> 

192.168.4.51:6351> select 2  //切换2号库
OK
192.168.4.51:6351[2]> select 0
OK
192.168.4.51:6351> key  *
(error) ERR unknown command 'key'
192.168.4.51:6351> keys  *
1) "name"
2) "age"
192.168.4.51:6351> keys  a?
(empty list or set)
192.168.4.51:6351> keys  a??
1) "age"
192.168.4.51:6351> EXISTS  name
(integer) 1
192.168.4.51:6351> ttL name
(integer) -1                    //-1 表示永不过期  -2 表示过期
192.168.4.51:6351> type  age
string
192.168.4.51:6351> type  name
string
192.168.4.51:6351> EXPIRE age  10   //10秒后过期
(integer) 1
192.168.4.51:6351> keys  *
1) "name"

>flushall  清除所有库所有值
>flushdb   清除当前库所有值
>sett keyname keyvalue    // 存储
>Select 数据库编号 0-15    // 切换库
>get keyname              // 获取
>Keys *                   // 打印所以变量
>Exits keyname            // 测试是否存在
> ttl keyname             // 查看生存时间
> type keyname            // 查看类型
>move keyname dbname      // 移动变量
>expire keyname 10        // 设置有效时间
> del keyname             // 删除变量
> flushall                // 删除所有变量
> save                    // 保存变量
> shutdown                // 关闭服务

 vim  /etc/redis/6379.conf

  12 # 1k => 1000 bytes
  13 # 1kb => 1024 bytes
  14 # 1m => 1000000 bytes
  15 # 1mb => 1024*1024 bytes
  16 # 1g => 1000000000 bytes
  17 # 1gb => 1024*1024*1024 bytes

 501:requirepass 123456

[root@host51 ~]# /etc/init.d/redis_6379  stop
Stopping ...
Redis stopped
[root@host51 ~]# /etc/init.d/redis_6379  start
Starting Redis server...
[root@host51 ~]# ss -antup |  grep 6351
tcp    LISTEN     0      128    192.168.4.51:6351                  *:*                   users:(("redis-server",pid=2445,fd=6))
tcp    FIN-WAIT-2 0      0      192.168.4.51:6351               192.168.4.50:41486              
tcp    TIME-WAIT  0      0      192.168.4.51:6351               192.168.4.51:35088              
[root@host51 ~]# redis-cli  -h  192.168.4.51 -p 6351
192.168.4.51:6351> set  name 55
(error) NOAUTH Authentication required.
192.168.4.51:6351> auth  123456
OK

或者
[root@host51 ~]# redis-cli  -h  192.168.4.51 -p 6351 -a 123456
192.168.4.51:6351> set  name  66
OK
192.168.4.51:6351> 


################################################################################



[root@host50 html]# vim  index.html

<html>
 <form action="reg.php" method="post">
 <h1> reg login user info :</h1>下列选项中，不是保存数据库管理员登录初始密码的有（ ）。
 <h3>LoginName: </h3><input type="text" name="name" size="20" maxlength="255"/>
 <br />
 <br />
 <h3>LoginPass: </h3><input type="text" name="password" size="20" maxlength="255"/>
 <br />
 <br />
 <h3><input type="submit" name="submit" value="SUBMIT"/> </h3></p>
 </form>
</html>



vim  reg.php

<?php
$servername = "localhost";
$username = "root";
$password = "123qqq...A";
$dbname = "bbsdb";

$conn = new mysqli($servername, $username, $password,$dbname);
if ($conn -> connect_error){
   die("link fail:". $conn->connect_error );
}else{echo "link mysql ok"; echo "         ";}

$username=$_POST['name'];
$userpassword=$_POST['password'];

$sql="insert into userinfo(name ,password) values('$username','$userpassword')";
if($conn ->query($sql)){echo "insert data ok";}
$conn->close();
?>


#####################################################################

2018年 07月 28日 星期六 10:34:18 CST

--启动redis服务
--php支持redis服务51 LNMP

1.装包

1.1 装php 和 nginx

yum  -y  install   gcc  gcc-c++  pcre-devel  zlib-devel
yum  -y  install php   php-mysql
rpm  -ivh  php-devel-5.4.16-42.el7.x86_64.rpm
tar  -xf  nginx-1.12.2.tar.gz
cd nginx-1.12.2/
./configure  --user=nginx
useradd nginx
make  &&  make install
systemctl  restart php-fpm
systemctl  enable   php-fpm
ln -s   /usr/local/nginx/sbin/nginx   /sbin/
nginx
ss -antulp  |grep 80

1.2 装redis 

tar  -xf  php-redis-2.2.4
phpize    //查看服务  报错  缺少依赖包
rpm -ivh php-devel-5.4.16-42.el7.x86_64.rpm
yum -y  install autoconf   automake 
rpm  -ivh  php-devel-5.4.16-42.el7.x86_64.rpm
phpize
./configure  --with-php-config=/usr/bin/php-config
make && make install 


ls /usr/lib64/php/modules
redis.so


2.修改php程序的配置文件，调用模块
vim /etc/php.ini
728 extension_dir = "/usr/lib64/php/modules/"
730 extension = "redis.so"
:x


systemctl   restart php-fpm.service
php -m  | grep -i  redis
redis

3.编写php脚本（连接 redis服务存储数据）
vim  /usr/local/nginx/html/redis.php

<?php
$redis = new redis();
$redis->connect('192.168.4.51',"6351");
$redis->auth('123456');
$redis->set('school','tearena');
echo $redis->get('school');
?>

4.测试配置
4.1 访问51网站服务器的redis.php网页文件
4.2 主机的redis服务查看存储的数据
redis-cli -h 192.168.4.51 -p 6351 -a 123456
92.168.4.51:6351> set  name 2
(error) CLUSTERDOWN Hash slot not served

##############################################################################

2018年 07月 30日 星期一 09:27:43 CST (51-56 都要装redis)


[root@host51 ~]# redis-cli  -h 192.168.4.51 -p  6351
192.168.4.51:6351> CLUSTER INFO
cluster_state:fail           
cluster_slots_assigned:0
cluster_slots_ok:0
cluster_slots_pfail:0
cluster_slots_fail:0
cluster_known_nodes:1
cluster_size:0
cluster_current_epoch:0
cluster_my_epoch:0
cluster_stats_messages_sent:0
cluster_stats_messages_received:0
192.168.4.51:6351> 

[root@host51 ~]# yum  -y  install ruby  rubygems 

[root@host51 redis-cluster]# ls
redis-3.2.1.gem  ruby-devel-2.0.0.648-30.el7.x86_64.rpm

[root@host51 redis-cluster]# rpm  -ivh  ruby-devel-2.0.0.648-30.el7.x86_64.rpm 

[root@host51 redis-cluster]# gem  install redis-3.2.1.gem
Successfully installed redis-3.2.1
Parsing documentation for redis-3.2.1
Installing ri documentation for redis-3.2.1
1 gem installed



--创建脚本

cd redis-4.0.8/src/

mkdir /root/bin

cp  redis-trib.rb  /root/bin



--创建集群

[root@host51 bin]# redis-trib.rb  create --replicas 1  
192.168.4.51:6351   192.168.4.52:6352   192.168.4.53:6353  
192.168.4.54:6354   192.168.4.55:6355   192.168.4.56:6356

>>> Creating cluster
>>> Performing hash slots allocation on 6 nodes...
Using 3 masters:
192.168.4.51:6351
192.168.4.52:6352
192.168.4.53:6353
Adding replica 192.168.4.55:6355 to 192.168.4.51:6351
Adding replica 192.168.4.56:6356 to 192.168.4.52:6352
Adding replica 192.168.4.54:6354 to 192.168.4.53:6353
M: 0c54c9b4fbafc65873c4175287d402749bcdd81c 192.168.4.51:6351
   slots:0-5460 (5461 slots) master
M: 58e8f7c5c349a324002a687831708885d799e6fc 192.168.4.52:6352
   slots:5461-10922 (5462 slots) master
M: ddd7fb352c96096e73240fb61a6558d5653748ad 192.168.4.53:6353
   slots:10923-16383 (5461 slots) master
S: 6e0a9ba82d3efc00f23d1e82368d982dbb25ed73 192.168.4.54:6354
   replicates ddd7fb352c96096e73240fb61a6558d5653748ad
S: 6779b8c3d09ce0eaa1c9c3b4dd6bb190b03f8037 192.168.4.55:6355
   replicates 0c54c9b4fbafc65873c4175287d402749bcdd81c
S: 2f0e0b3501dd8c853f27659e043a270f5e975429 192.168.4.56:6356
   replicates 58e8f7c5c349a324002a687831708885d799e6fc
Can I set the above configuration? (type 'yes' to accept): yes


>>> Nodes configuration updated
>>> Assign a different config epoch to each node
>>> Sending CLUSTER MEET messages to join the cluster
Waiting for the cluster to join..
>>> Performing Cluster Check (using node 192.168.4.51:6351)
M: 0c54c9b4fbafc65873c4175287d402749bcdd81c 192.168.4.51:6351
   slots:0-5460 (5461 slots) master
   1 additional replica(s)
M: 58e8f7c5c349a324002a687831708885d799e6fc 192.168.4.52:6352
   slots:5461-10922 (5462 slots) master
   1 additional replica(s)
S: 2f0e0b3501dd8c853f27659e043a270f5e975429 192.168.4.56:6356
   slots: (0 slots) slave
   replicates 58e8f7c5c349a324002a687831708885d799e6fc
M: ddd7fb352c96096e73240fb61a6558d5653748ad 192.168.4.53:6353
   slots:10923-16383 (5461 slots) master
   1 additional replica(s)
S: 6e0a9ba82d3efc00f23d1e82368d982dbb25ed73 192.168.4.54:6354
   slots: (0 slots) slave
   replicates ddd7fb352c96096e73240fb61a6558d5653748ad
S: 6779b8c3d09ce0eaa1c9c3b4dd6bb190b03f8037 192.168.4.55:6355
   slots: (0 slots) slave
   replicates 0c54c9b4fbafc65873c4175287d402749bcdd81c
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.


如果创建nodes失败  执行

[root@host51 bin]# redis-cli   -h  192.168.4.51  -p 6351
192.168.4.51:6351> CLUSTER nodes

查看未连接的节点，然后重置

[root@host51 bin]# redis-cli   -h  192.168.4.51  -p 6351
192.168.4.51:6351> CLUSTER reset



查看集群信息

192.168.4.51:6351> CLUSTER INFO
cluster_state:ok
cluster_slots_assigned:16384
cluster_slots_ok:16384
cluster_slots_pfail:0
cluster_slots_fail:0
cluster_known_nodes:6
cluster_size:3
cluster_current_epoch:6
cluster_my_epoch:1
cluster_stats_messages_ping_sent:2823
cluster_stats_messages_pong_sent:2873
cluster_stats_messages_sent:5696
cluster_stats_messages_ping_received:2868
cluster_stats_messages_pong_received:2823
cluster_stats_messages_meet_received:5
cluster_stats_messages_received:5696

192.168.4.51:6351> CLUSTER NODES
58e8f7c5c349a324002a687831708885d799e6fc 192.168.4.52:6352@16352 master - 0 1532918112795 2 connected 5461-10922
2f0e0b3501dd8c853f27659e043a270f5e975429 192.168.4.56:6356@16356 slave 58e8f7c5c349a324002a687831708885d799e6fc 0 1532918112595 6 connected
ddd7fb352c96096e73240fb61a6558d5653748ad 192.168.4.53:6353@16353 master - 0 1532918112595 3 connected 10923-16383
6e0a9ba82d3efc00f23d1e82368d982dbb25ed73 192.168.4.54:6354@16354 slave ddd7fb352c96096e73240fb61a6558d5653748ad 0 1532918111000 4 connected
6779b8c3d09ce0eaa1c9c3b4dd6bb190b03f8037 192.168.4.55:6355@16355 slave 0c54c9b4fbafc65873c4175287d402749bcdd81c 0 1532918112595 5 connected
0c54c9b4fbafc65873c4175287d402749bcdd81c 192.168.4.51:6351@16351 myself,master - 0 1532918111000 1 connected 0-5460


在客户端连接集群存储数据（连接master库的ip地址）

[root@host50 ~]# redis-cli -c -h 192.168.4.51  -p6351
192.168.4.51:6351> set  anme 2
-> Redirected to slot [11897] located at 192.168.4.53:6353
OK
192.168.4.53:6353> set  name 5
-> Redirected to slot [5798] located at 192.168.4.52:6352
OK

集群工作原理


存储数据的工作原理：
key 和 crc16 算法   把计算后得到的数字和16384做求模运算 

读取数据的工作原理：
key 和 crc16 算法   把计算后得到的数字和16384做求模运算


测试集群高可用






添加masetr主机：


[root@host51 ~]# redis-trib.rb  add-node 192.168.4.47:6347 192.168.4.51:6351


[root@host51 ~]# redis-trib.rb  check 192.168.4.51:6351
>>> Performing Cluster Check (using node 192.168.4.51:6351)
M: 0c54c9b4fbafc65873c4175287d402749bcdd81c 192.168.4.51:6351
   slots:0-5460 (5461 slots) master
   1 additional replica(s)
M: 58e8f7c5c349a324002a687831708885d799e6fc 192.168.4.52:6352
   slots:5461-10922 (5462 slots) master
   1 additional replica(s)
M: b8c8d4c8e55f70514370b0f6b6319a9fd8bd25cb 192.168.4.47:6347
   slots: (0 slots) master
   0 additional replica(s)
S: 2f0e0b3501dd8c853f27659e043a270f5e975429 192.168.4.56:6356
   slots: (0 slots) slave
   replicates 58e8f7c5c349a324002a687831708885d799e6fc
M: ddd7fb352c96096e73240fb61a6558d5653748ad 192.168.4.53:6353
   slots:10923-16383 (5461 slots) master
   1 additional replica(s)
S: 6e0a9ba82d3efc00f23d1e82368d982dbb25ed73 192.168.4.54:6354
   slots: (0 slots) slave
   replicates ddd7fb352c96096e73240fb61a6558d5653748ad
S: 6779b8c3d09ce0eaa1c9c3b4dd6bb190b03f8037 192.168.4.55:6355
   slots: (0 slots) slave
   replicates 0c54c9b4fbafc65873c4175287d402749bcdd81c
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.



[root@host51 ~]# redis-trib.rb  reshard 192.168.4.51:6351


[root@host51 bin]# redis-trib.rb  add-node  --slave 192.168.4.48:6348 192.168.4.51:6351


[root@host51 ~]# redis-trib.rb  check 192.168.4.51:6351
>>> Performing Cluster Check (using node 192.168.4.51:6351)
M: 0c54c9b4fbafc65873c4175287d402749bcdd81c 192.168.4.51:6351
   slots:1365-5460 (4096 slots) master
   1 additional replica(s)
S: 6017e8c6681a83ac1a5ffd63e1e7aee379570dcb 192.168.4.48:6348
   slots: (0 slots) slave
   replicates b8c8d4c8e55f70514370b0f6b6319a9fd8bd25cb
M: 58e8f7c5c349a324002a687831708885d799e6fc 192.168.4.52:6352
   slots:6827-10922 (4096 slots) master
   1 additional replica(s)
M: b8c8d4c8e55f70514370b0f6b6319a9fd8bd25cb 192.168.4.47:6347
   slots:0-1364,5461-6826,10923-12287 (4096 slots) master
   1 additional replica(s)
S: 2f0e0b3501dd8c853f27659e043a270f5e975429 192.168.4.56:6356
   slots: (0 slots) slave
   replicates 58e8f7c5c349a324002a687831708885d799e6fc
M: ddd7fb352c96096e73240fb61a6558d5653748ad 192.168.4.53:6353
   slots:12288-16383 (4096 slots) master
   1 additional replica(s)
S: 6e0a9ba82d3efc00f23d1e82368d982dbb25ed73 192.168.4.54:6354
   slots: (0 slots) slave
   replicates ddd7fb352c96096e73240fb61a6558d5653748ad
S: 6779b8c3d09ce0eaa1c9c3b4dd6bb190b03f8037 192.168.4.55:6355
   slots: (0 slots) slave
   replicates 0c54c9b4fbafc65873c4175287d402749bcdd81c
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.



添加从库时指定主库master  192.168.4.50 --> 192.168.4.52 slave


[root@host51 bin]# redis-trib.rb  add-node  --slave --master-id  0c54c9b4fbafc65873c4175287d402749bcdd81c   192.168.4.100:6310  192.168.4.51:6351


[root@host51 ~]# redis-trib.rb   check  192.168.4.51:6351
>>> Performing Cluster Check (using node 192.168.4.51:6351)
M: 0c54c9b4fbafc65873c4175287d402749bcdd81c 192.168.4.51:6351
   slots:1365-5460 (4096 slots) master
   2 additional replica(s)
S: 2aaec3eac9a596e6004703bab8155a2339e93fe2 192.168.4.100:6310
   slots: (0 slots) slave
   replicates 0c54c9b4fbafc65873c4175287d402749bcdd81c
S: 2f0e0b3501dd8c853f27659e043a270f5e975429 192.168.4.56:6356
   slots: (0 slots) slave
   replicates 58e8f7c5c349a324002a687831708885d799e6fc
S: 6779b8c3d09ce0eaa1c9c3b4dd6bb190b03f8037 192.168.4.55:6355
   slots: (0 slots) slave
   replicates 0c54c9b4fbafc65873c4175287d402749bcdd81c
S: 6017e8c6681a83ac1a5ffd63e1e7aee379570dcb 192.168.4.48:6348
   slots: (0 slots) slave
   replicates b8c8d4c8e55f70514370b0f6b6319a9fd8bd25cb
M: 58e8f7c5c349a324002a687831708885d799e6fc 192.168.4.52:6352
   slots:6827-10922 (4096 slots) master
   1 additional replica(s)
M: b8c8d4c8e55f70514370b0f6b6319a9fd8bd25cb 192.168.4.47:6347
   slots:0-1364,5461-6826,10923-12287 (4096 slots) master
   1 additional replica(s)
M: ddd7fb352c96096e73240fb61a6558d5653748ad 192.168.4.53:6353
   slots:12288-16383 (4096 slots) master
   1 additional replica(s)
S: 6e0a9ba82d3efc00f23d1e82368d982dbb25ed73 192.168.4.54:6354
   slots: (0 slots) slave
   replicates ddd7fb352c96096e73240fb61a6558d5653748ad
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.



删除从库  从库id：0c54c9b4fbafc65873c4175287d402749bcdd81c　

[root@host51 bin]# redis-trib.rb  del-node  192.168.4.56:6351  0c54c9b4fbafc65873c4175287d402749bcdd81c　　　　　　　　　   


删除主库master 

[root@host51 bin]# redis-trib.rb   reshard   192.168.4.51:6351

[root@host51 ~]# redis-trib.rb  check 192.168.4.51:6351
>>> Performing Cluster Check (using node 192.168.4.51:6351)
M: 0c54c9b4fbafc65873c4175287d402749bcdd81c 192.168.4.51:6351
   slots:1365-5460 (4096 slots) master
   1 additional replica(s)
S: 2f0e0b3501dd8c853f27659e043a270f5e975429 192.168.4.56:6356
   slots: (0 slots) slave
   replicates b8c8d4c8e55f70514370b0f6b6319a9fd8bd25cb
S: 6779b8c3d09ce0eaa1c9c3b4dd6bb190b03f8037 192.168.4.55:6355
   slots: (0 slots) slave
   replicates 0c54c9b4fbafc65873c4175287d402749bcdd81c
S: 6017e8c6681a83ac1a5ffd63e1e7aee379570dcb 192.168.4.48:6348
   slots: (0 slots) slave
   replicates b8c8d4c8e55f70514370b0f6b6319a9fd8bd25cb
M: 58e8f7c5c349a324002a687831708885d799e6fc 192.168.4.52:6352
   slots: (0 slots) master
   0 additional replica(s)
M: b8c8d4c8e55f70514370b0f6b6319a9fd8bd25cb 192.168.4.47:6347
   slots:0-1364,5461-12287 (8192 slots) master
   2 additional replica(s)
M: ddd7fb352c96096e73240fb61a6558d5653748ad 192.168.4.53:6353
   slots:12288-16383 (4096 slots) master
   1 additional replica(s)
S: 6e0a9ba82d3efc00f23d1e82368d982dbb25ed73 192.168.4.54:6354
   slots: (0 slots) slave
   replicates ddd7fb352c96096e73240fb61a6558d5653748ad
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.


删除主库   --主库master的id 58e8f7c5c349a324002a687831708885d799e6fc

[root@host51 bin]# redis-trib.rb  del-node  192.168.4.51:6351  58e8f7c5c349a324002a687831708885d799e6fc


添加修复后的主库master 


###############################################################################################


redischucking复制（类似mysql服务的主从同步）

一主一从（把52设置为51的从）
[root@host51 ~]# redis-cli   -h  192.168.4.51 -p 6351
192.168.4.51:6351> keys  * 
(empty list or set)
192.168.4.51:6351> set  name 5
OK
192.168.4.51:6351> set  age 6
OK

192.168.4.51:6351> INFO replication
# Replication
role:master
connected_slaves:1
slave0:ip=192.168.4.52,port=6352,state=online,offset=602,lag=1
master_replid:46eabe86c75e353f039473d363eb1bbc841b4c24
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:602
second_repl_offset:-1
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:1
repl_backlog_histlen:602






[root@host52 ~]# redis-cli  -h  192.168.4.52  -p 6352
192.168.4.52:6352> salveof  192.168.4.51  6351
(error) ERR unknown command 'salveof'
192.168.4.52:6352> slaveof  192.168.4.51  6351
OK
192.168.4.52:6352> keys  * 
1) "age"
2) "name"
192.168.4.52:6352> get  age
"6"
192.168.4.52:6352> get  name
"5"


192.168.4.52:6352> INFO replication
# Replication
role:slave
master_host:192.168.4.51
master_port:6351
master_link_status:up
master_last_io_seconds_ago:8
master_sync_in_progress:0
slave_repl_offset:616
slave_priority:100
slave_read_only:1
connected_slaves:0
master_replid:46eabe86c75e353f039473d363eb1bbc841b4c24
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:616
second_repl_offset:-1
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:1
repl_backlog_histlen:616



一主多从

[root@host53 ~]# redis-cli   -h  192.168.4.53  -p 6353
192.168.4.53:6353> INFO replication
# Replication
role:master
connected_slaves:0
master_replid:2bf648656abc1b018250ea86483abc338f8c0c41
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:0
second_repl_offset:-1
repl_backlog_active:0
repl_backlog_size:1048576
repl_backlog_first_byte_offset:0
repl_backlog_histlen:0
192.168.4.53:6353> slaveof  192.168.4.51  6351
OK
192.168.4.53:6353> info  replication
# Replication
role:slave
master_host:192.168.4.51
master_port:6351
master_link_status:up
master_last_io_seconds_ago:9
master_sync_in_progress:0
slave_repl_offset:742
slave_priority:100
slave_read_only:1
connected_slaves:0
master_replid:46eabe86c75e353f039473d363eb1bbc841b4c24
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:742
second_repl_offset:-1
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:743
repl_backlog_histlen:0
192.168.4.53:6353> keys *
1) "age"
2) "name"


[root@host51 ~]# redis-cli   -h  192.168.4.51 -p 6351

192.168.4.51:6351> INFO replication
# Replication
role:master
connected_slaves:1
slave0:ip=192.168.4.52,port=6352,state=online,offset=602,lag=1
master_replid:46eabe86c75e353f039473d363eb1bbc841b4c24
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:602
second_repl_offset:-1
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:1
repl_backlog_histlen:602
192.168.4.51:6351> INFO replication
# Replication
role:master
connected_slaves:2
slave0:ip=192.168.4.52,port=6352,state=online,offset=798,lag=0
slave1:ip=192.168.4.53,port=6353,state=online,offset=798,lag=1
master_replid:46eabe86c75e353f039473d363eb1bbc841b4c24
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:798
second_repl_offset:-1
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:1
repl_backlog_histlen:798



主从从
把53手动切换成主库  -- slaveof  no  one
192.168.4.53:6353> slaveof  no  one 
OK

192.168.4.53:6353> slaveof  192.168.4.52 6352       // slaveof  主库ip  主库端口号
OK

52是51的从库，53是52的从库
192.168.4.52:6352> set  hao 9
(error) READONLY You can not write against a read only slave.


配额命令行配置，马上生效 不需要重启服务（一旦重启服务失效）



修改配置文件，永久有效，但需哟啊重启服务才能生效。

[root@host53 ~]# /etc/init.d/redis_6379  stop

vim  /etc/redis/6379.conf
...

282 slaveof 192.168.4.52 6352

...

:x

[root@host53 ~]# /etc/init.d/redis_6379  restart

主库设置了连接密码，从库


[root@host51 ~]# vim  /etc/redis/6379.conf 

501 requirepass 123456


[root@host52 ~]# vim  /etc/redis/6379.conf

282 slaveof 192.168.4.51 6351
289 masterauth 123456

##################################################################################################

--主从同步的哨兵模式(主从从)

--从库：

[root@host52 ~]# vim /etc/sentinel.conf   //哨兵程序
sentinel  monitor  redis51  192.168.4.51  6351  1
sentinel  auth-pass  redis51  123456
:x

[root@host52 ~]# redis-sentinel /etc/sentinel.conf


--51宕机

[root@host51 ~]# redis-cli   -h  192.168.4.51 -p 6351
192.168.4.51:6351> shutdown


--52变成了主库

[root@host52 ~]# redis-cli  -p 6352  -h 192.168.4.52
192.168.4.52:6352> info  replication
# Replication
role:master
connected_slaves:1
slave0:ip=192.168.4.53,port=6353,state=online,offset=26928,lag=0
master_replid:5db321c285d1189944a05a48ac78a41fcd82874e
master_replid2:4899fb1dfb7fcda46bc4f8754abeceef9ba926ea
master_repl_offset:26928
second_repl_offset:13530
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:155
repl_backlog_histlen:26774
     

--开启51

[root@host51 ~]# /etc/init.d/redis_6379    start


--查看51

[root@host51 ~]# redis-cli   -h  192.168.4.51 -p 6351
192.168.4.51:6351> auth 123456
OK
192.168.4.51:6351> info  replication
# Replication
role:slave
master_host:192.168.4.52
master_port:6352
master_link_status:up
master_last_io_seconds_ago:1
master_sync_in_progress:0
slave_repl_offset:71193
slave_priority:100
slave_read_only:1
connected_slaves:0
master_replid:5db321c285d1189944a05a48ac78a41fcd82874e
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:71193
second_repl_offset:-1
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:70329
repl_backlog_histlen:865
192.168.4.51:6351> 



--查看52,51和53都变成了从库

[root@host52 ~]# redis-cli  -p 6352  -h 192.168.4.52
192.168.4.52:6352> info  replication
# Replication
role:master
connected_slaves:2
slave0:ip=192.168.4.53,port=6353,state=online,offset=107829,lag=0
slave1:ip=192.168.4.51,port=6351,state=online,offset=107815,lag=0
master_replid:5db321c285d1189944a05a48ac78a41fcd82874e
master_replid2:4899fb1dfb7fcda46bc4f8754abeceef9ba926ea
master_repl_offset:107829
second_repl_offset:13530
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:155
repl_backlog_histlen:107675



_________________________________________________________________________




[root@host52 6379]# redis-cli   -h  192.168.4.52  -p 6352
192.168.4.52:6352> keys  *
1) "name"
2) "age"
3) "h"
4) "sex"

[root@host52 ~]# /etc/init.d/redis_6379   stop
Stopping ...
Redis stopped

[root@host52 ~]# cd  /var/lib/redis/6379/
[root@host52 6379]# ls
dump.rdb
[root@host52 6379]# rm  -rf  dump.rdb 
[root@host52 6379]# /etc/init.d/redis_6379   restart 
/var/run/redis_6379.pid does not exist, process is not running
Starting Redis server...
[root@host52 6379]# redis-cli  -h  192.168.4.52  -p 6352
192.168.4.52:6352> keys *
(empty list or set)



redis服务持久化方式介绍
redis关于RDB（Reids DataBase）文件的配置


vim  /etc/redis/6379.conf


217 #   save ""               //去掉注释，禁用RDB
254 dbfilename "dump.rdb"



数据从内存保存到硬盘的频率 
– save 900 1                 // 900 秒内且有 1 次修改存盘
– save 300 10                // 300 秒内且有 10 次修改存盘
– save 60 10000              // 60 秒内且有 10000 修改存盘




AOF

[root@host51 6379]# /etc/init.d/redis_6379  stop

[root@host51 6379]# vim   /etc/redis/6379.conf


 672 appendonly yes

 676 appendfilename "appendonly.aof"




RDB和AOF同时启用--> AOF优先


/etc/init.d/redis_6379  stop

vim  appendonly.aof
随意修改配置文件

/etc/init.d/redis_6379  start
ss -antulp | grep redis-server

redis-check-aof  --fix   appendonly.aof
/etc/init.d/redis_6379  start
 rm  -rf /var/run/redis_6379.pid exists
/etc/init.d/redis_6379  start




AOF 文件记录,写操作的三种方式：

vim   /etc/redis/6379.conf
– appendfsync always      // 有新的写操作立即记录,性能差,完整性好。
– appendfsync everysec    // 每秒记录一次,宕机时会丢失 1 秒的数据
– appendfsync no          // 从不记录



String 字符串
[root@host51 ~]# redis-cli -h 192.168.4.51 -p 6351
192.168.4.51:6351> set first  12345674896
OK
192.168.4.51:6351> get first
"12345674896"
192.168.4.51:6351> setrange  first  4  ****
(integer) 11
192.168.4.51:6351> get first
"1234****896"

######################################################################################

2018年 08月 01日 星期三 09:25:33 CST

List 列表:

--Redis 的 list 是一个字符队列
--先进后出
--一个 key 可以有多个值


--lpush key value [value...]

– 将一个或多个值 value 插入到列表 key 的表头
– Key 不存在,则创建 key

lpush list a b c //list1 值依次为 c b a
等同于 lpush list a; lpush list b; lpush list c

--lrange key start stop 
  
 - 从开始位置读取 key 的值到 stop 结束
>lrange list 0 2     // 从 0 位开始,读到 2 位为止
>lrange list 0 -1    // 从开始读到结束为止
>lrange list 0 -2    // 从开始读到倒数第 2 位值

--lindex key index

– 返回列表中第 index 个值

如 lindex key 0 ; lindex key 2; lindex key -2


--lset key index value

– 将 key 中 index 位置的值修改为 value
>lset list 3 test    // 将 list 中第 3 个值修改为 test


--lpop key
– 移除并返回列表头元素数据, key 不存在则返回 nil

>lpop list   // 删除表头元素,可以多次执行

--llen key
– 返回列表 key 的长度

--lpush key value [value...]
– 将 value 插入到 key 的表头

--rpush key value [value...]
– 将 value 插入到 key 的末尾
>rpush list3 a b c           //list3 值为 a b c
>rpush list3 d               // 末尾插入 d

--rpop key
– 删除并返回 key 末尾的值
– >rpush list3 a b c        //list3 值为 a b c
   >rpush list3 d            // 末尾插入 d


192.168.4.51:6351> lpush  website   a  m  d  r  g h j
(integer) 7
192.168.4.51:6351> type  website
list
192.168.4.51:6351> lrange  website 0 -1
1) "j"
2) "h"
3) "g"
4) "r"
5) "d"
6) "m"
7) "a"
192.168.4.51:6351> lrange  website 0 3
1) "j"
2) "h"
3) "g"
4) "r"
192.168.4.51:6351> lrange  website 0 -2
1) "j"
2) "h"
3) "g"
4) "r"
5) "d"
6) "m"
192.168.4.51:6351> lrange  website -2 -1
1) "m"
2) "a"
192.168.4.51:6351> llen  website
(integer) 7
192.168.4.51:6351> index  website  0
(error) ERR unknown command 'index'
192.168.4.51:6351> lindex  website  0
"j"
192.168.4.51:6351> lpop website
"j"
192.168.4.51:6351> llen website
(integer) 6
192.168.4.51:6351> lindex  website 2
"r"
192.168.4.51:6351> lrange  website 0 -1
1) "h"
2) "g"
3) "r"
4) "d"
5) "m"
6) "a"
192.168.4.51:6351> lindex  website -2
"m"
192.168.4.51:6351> lindex  website 2
"r"
192.168.4.51:6351> lindex  website  -1
"a"
192.168.4.51:6351> lset website 1 88
OK
192.168.4.51:6351> lrange  website 0 -1
1) "h"
2) "88"
3) "r"
4) "d"
5) "m"
6) "a"
192.168.4.51:6351> lset website  2  hhhhhhh
OK
192.168.4.51:6351> lrange  website 0 -1
1) "h"
2) "88"
3) "hhhhhhh"
4) "d"
5) "m"
6) "a"
192.168.4.51:6351> rpush  website  l p  s  a
(integer) 10
192.168.4.51:6351> lrange  website 0 -1
 1) "h"
 2) "88"
 3) "hhhhhhh"
 4) "d"
 5) "m"
 6) "a"
 7) "l"
 8) "p"
 9) "s"
10) "a"
192.168.4.51:6351> lpush  website  7  8  9
(integer) 13
192.168.4.51:6351> lrange  website 0 -1
 1) "9"
 2) "8"
 3) "7"
 4) "h"
 5) "88"
 6) "hhhhhhh"
 7) "d"
 8) "m"
 9) "a"
10) "l"
11) "p"
12) "s"
13) "a"
192.168.4.51:6351> rpop  website
"a"



--Hash 表


• Redis hash 是一个 string 类型的 field 和 value 的映射表
• 一个 key 可对应多个 field ,一个 field 对应一个 value
• 将一个对象存储为 hash 类型,较于每个字段都存储成string 类型更能节省内存





--hset key field value
– 将 hash 表中 field 值设置为 value
>hset site google 'www.g.cn'
>hset site baidu 'www.baidu.com'

--hget key filed
– 获取 hash 表中 field 的值
>hget site google


--hmset key field value [field value...]
– 同时给 hash 表中的多个 field 赋值
>hmset site google www.g.cn baidu www.baidu.com


--hmget key field [field...]
– 返回 hash 表中多个 field 的值
>hmget site google baidu

--hkeys key
– 返回 hash 表中所有 field 名称
>hmset site google www.g.cn baidu www.baidu.com
>hkeys site

--hgetall key
– 返回 hash 表中所有 field 的值

-- hvals key
– 返回 hash 表中所有 filed 的值
>hvals key

--hdel key field [field...]
– 删除 hash 表中多个 field 的值,不存在则忽略
>hdel site google baidu


#######################################################################################

MongoDB

--[root@host51 ~]# mkdir  -p /usr/local/mongodb
--[root@host51 ~]# cd /hao
--[root@host51 hao]# tar  xf  mongodb-linux-x86_64-rhel70-3.6.3.tgz 
--[root@host51 hao]# cd mongodb-linux-x86_64-rhel70-3.6.3/
--[root@host51 mongodb-linux-x86_64-rhel70-3.6.3]# ls
bin  GNU-AGPL-3.0  MPL-2  README  THIRD-PARTY-NOTICES
--[root@host51 mongodb-linux-x86_64-rhel70-3.6.3]# cp  -r  bin/   /usr/local/mongodb
--[root@host51 mongodb-linux-x86_64-rhel70-3.6.3]# cd /usr/local/mongodb
--[root@host51 mongodb]# ls
bin
--[root@host51 mongodb]#  mkdir -p  etc   log  data/db
--[root@host51 mongodb]# ls
bin  data  etc  log
--[root@host51 mongodb]# vim  /etc/profile
export  PATH=/usr/local/mongodb/bin:$PATH
:x
--[root@host51 mongodb]# source  /etc/profile
--[root@host51 mongodb]# echo $PATH
/usr/local/mongodb/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin
[root@host51 mongodb]# 


手动创建服务主配置文件
--[root@host51 mongodb]# vim  /usr/local/mongodb/etc/mongodb.conf

logpath=/usr/local/mongodb/log/mongodb.log
logappend=true
dbpath=/usr/local/mongodb/data/db
fork=true

:x

启动服务
--[root@host51 mongodb]# mongod  -f  /usr/local/mongodb/etc/mongodb.conf 
about to fork child process, waiting until server is ready for connections.
forked process: 3169
child process started successfully, parent exiting

查看进程
--[root@host51 mongodb]# ps  -C  mongod
  PID TTY          TIME CMD
 3169 ?        00:00:00 mongod

查看端口
--[root@host51 mongodb]# ss   -utlpn | grep mongod
tcp    LISTEN     0      128    127.0.0.1:27017                 *:*                   users:(("mongod",pid=3169,fd=11))

连接服务
--[root@host51 mongodb]# mongo

关闭服务
--[root@host51 mongodb]# mongod  -f  /usr/local/mongodb/etc/mongodb.conf  --shutdown


vim  /etc/bashrc

alias start='mongod  -f  /usr/local/mongodb/etc/mongodb.conf'
alias stop='mongod  -f  /usr/local/mongodb/etc/mongodb.conf  --shutdown'

:x

启动服务
--[root@host51 mongodb]# start

关闭服务
--[root@host51 mongodb]# stop

______________________________________________________________________________________

--[root@host51 mongodb]# stop

--[root@host51 mongodb]# vim  /usr/local/mongodb/etc/mongodb.conf
 ...

bind_ip=192.168.4.51
port=27051
:x

--[root@host51 mongodb]# start
[root@host51 ~]# mongo  --host 192.168.4.51 --port 27051

______________________________________________________________________________


[root@host51 ~]# mongo  --host 192.168.4.51 --port 27051
> show  dbs
admin   0.000GB
config  0.000GB
local   0.000GB
> 


> use hao--[root@host51 mongodb]# mongod  -f  /usr/local/mongodb/etc/mongodb.conf  --shutdown
switched to db hao
> db
hao mongod  -f  /usr/local/mongodb/etc/mongodb.conf
> show tables
> db.hao.save({'name':'ok','sex':'boy'})
WriteResult({ "nInserted" : 1 })
> show tables
hao
> db.hao.find()
{ "_id" : ObjectId("5b612fc1205e7c64654a9ee5"), "name" : "ok", "sex" : "boy" }
 
> db.hao.findOne()
{
	"_id" : ObjectId("5b612fc1205e7c64654a9ee5"),
	"name" : "ok",
	"sex" : "boy"
}




> db.hao.save({name:'jack',school:danei,single:false})
2018-08-01T14:25:23.573+0800 E QUERY    [thread1] ReferenceError: danei is not defined :
@(shell):1:26
> db.hao.save({name:'jack',school:'danei',single:false})
WriteResult({ "nInserted" : 1 })
> db.hao.save({name:'jdck',school:'dawai',single:ture,pay:null})
2018-08-01T14:26:17.150+0800 E QUERY    [thread1] ReferenceError: ture is not defined :
@(shell):1:41
> db.hao.save({name:'jdck',school:'dawai',single:true,pay:null})
WriteResult({ "nInserted" : 1 })
> db.hao.find()
{ "_id" : ObjectId("5b61526d205e7c64654a9eeb"), "name" : "jack", "school" : "danei", "single" : false }
{ "_id" : ObjectId("5b615291205e7c64654a9eec"), "name" : "jdck", "school" : "dawai", "single" : true, "pay" : null }
> db.count()
2018-08-01T14:26:46.212+0800 E QUERY    [thread1] TypeError: db.count is not a function :
@(shell):1:1
> db.hao.count()
2
> db.hao.save({name:'利好',school:'达中',single:true,pay:null})
WriteResult({ "nInserted" : 1 })
> db.hao.count()
3
> db.hao.find()
{ "_id" : ObjectId("5b61526d205e7c64654a9eeb"), "name" : "jack", "school" : "danei", "single" : false }
{ "_id" : ObjectId("5b615291205e7c64654a9eec"), "name" : "jdck", "school" : "dawai", "single" : true, "pay" : null }
{ "_id" : ObjectId("5b6152d1205e7c64654a9eed"), "name" : "利好", "school" : "达中", "single" : true, "pay" : null }
> 
> db.hao.save({name:'zhangsan',like:['game','eat','climbing']})
WriteResult({ "nInserted" : 1 })
> db.hao.save({name:'tom',xf:NumberInt(3)})
WriteResult({ "nInserted" : 1 })
> db.hao.save({name:'tom',xf:NumberLong(1918)})
WriteResult({ "nInserted" : 1 })
> db.hao.save({name:'tom',xf:NumberInt(198.56)})
WriteResult({ "nInserted" : 1 })
> db.hao.find()
{ "_id" : ObjectId("5b61526d205e7c64654a9eeb"), "name" : "jack", "school" : "danei", "single" : false }
{ "_id" : ObjectId("5b615291205e7c64654a9eec"), "name" : "jdck", "school" : "dawai", "single" : true, "pay" : null }
{ "_id" : ObjectId("5b6152d1205e7c64654a9eed"), "name" : "利好", "school" : "达中", "single" : true, "pay" : null }
{ "_id" : ObjectId("5b615538205e7c64654a9eee"), "name" : "zhangsan", "like" : [ "game", "eat", "climbing" ] }
{ "_id" : ObjectId("5b615588205e7c64654a9eef"), "name" : "tom", "xf" : 3 }
{ "_id" : ObjectId("5b61559b205e7c64654a9ef0"), "name" : "tom", "xf" : NumberLong(1918) }
{ "_id" : ObjectId("5b6155a3205e7c64654a9ef1"), "name" : "tom", "xf" : 198 }

> db.hao.save(
... {
... lanme:'php',
... code:function(){/* <?php  echo "hello world"; ?> */},
... like:10000000000000000
... }
... )
WriteResult({ "nInserted" : 1 })
>

> db.hao.save({tarena:{addresses:'beijing',tel:123456789,person:'hansy'}})
WriteResult({ "nInserted" : 1 })
> db.hao.save({ywzd:{writer:'dmy',pay:68,version:'v2'}})
WriteResult({ "nInserted" : 1 })
> 

#######################################################################################


2018年 08月 02日 星期四 11:05:25 CST


配置 Replica Sets 副本集

--配置

--[root@host51 mongodb]# mongod  -f  /usr/local/mongodb/etc/mongodb.conf  --shutdown

vim  /usr/local/mongodb/etc/mongodb.conf
dbpath=/usr/localmongodb/data/db
fork=true
bind_ip=192.168.4.51
replSet=rs1

--[root@host51 mongodb]# start 



--[root@host52 mongodb]# mongod  -f  /usr/local/mongodb/etc/mongodb.conf  --shutdown

vim  /usr/local/mongodb/etc/mongodb.conf
dbpath=/usr/localmongodb/data/db
fork=true
bind_ip=192.168.4.52
replSet=rs1

--[root@host52 mongodb]# start 




--[root@host53 mongodb]# mongod  -f  /usr/local/mongodb/etc/mongodb.conf  --shutdown

vim  /usr/local/mongodb/etc/mongodb.conf
dbpath=/usr/localmongodb/data/db
fork=true
bind_ip=192.168.4.53
replSet=rs1

--[root@host51 mongodb]# start 



--初始化（任意一台主机，我选51）

[root@host51 ~]# mongo  --host 192.168.4.5mongo  --host  192.168.4.51  --port 270511  --port  27051
--> config = {
... _id:"rs1",
... members:[
... {_id:0,host:"192.168.4.51:27051"},
... {_id:1,host:"192.168.4.52:27052"},
... {_id:2,host:"192.168.4.53:27053"}
... ]
... };
{
	"_id" : "rs1",
	"members" : [
		{
			"_id" : 0,
			"host" : "192.168.4.51:27051"
		},
		{
			"_id" : 1,
			"host" : "192.168.4.52:27052"
		},
		{
			"_id" : 2,
			"host" : "192.168.4.53:27053"
		}
	]
}

--> rs.initiate(config)
{
	"ok" : 1,
	"operationTime" : Timestamp(1533176863, 1),
	"$clusterTime" : {
		"clusterTime" : Timestamp(1533176863, 1),
		"signature" : {
			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
			"keyId" : NumberLong(0)
		}
	}
}
--rs1:SECONDARY> rs.status( )
{
	"set" : "rs1",
	"date" : ISODate("2018-08-02T02:28:16.509Z"),
	"myState" : 1,
	"term" : NumberLong(1),
	"heartbeatIntervalMillis" : NumberLong(2000),
	"optimes" : {
		"lastCommittedOpTime" : {
			"ts" : Timestamp(1533176895, 1),
			"t" : NumberLong(1)
		},
		"readConcernMajorityOpTime" : {
			"ts" : Timestamp(1533176895, 1),
			"t" : NumberLong(1)
		},
		"appliedOpTime" : {
			"ts" : Timestamp(1533176895, 1),
			"t" : NumberLong(1)
		},
		"durableOpTime" : {
			"ts" : Timestamp(1533176895, 1),
			"t" : NumberLong(1)
		}
	},
	"members" : [
		{
			"_id" : 0,
			"name" : "192.168.4.51:27051",
			"health" : 1,
			"state" : 1,
			"stateStr" : "PRIMARY",
			"uptime" : 270,
			"optime" : {
				"ts" : Timestamp(1533176895, 1),
				"t" : NumberLong(1)2018年 08月 02日 星期四 11:05:25 CST
			},
			"optimeDate" : ISODate("2018-08-02T02:28:15Z"),
			"infoMessage" : "could not find member to sync from",
			"electionTime" : Timestamp(1533176874, 1),
			"electionDate" : ISODate("2018-08-02T02:27:54Z"),
			"configVersion" : 1,
			"self" : true
		},
		{
			"_id" : 1,
			"name" : "192.168.4.52:27052",
			"health" : 1,
			"state" : 2,
			"stateStr" : "SECONDARY",
			"uptime" : 33,
			"optime" : {
				"ts" : Timestamp(1533176895, 1),
				"t" : NumberLong(1)
			},
			"optimeDurable" : {
				"ts" : Timestamp(1533176895, 1),
				"t" : NumberLong(1)
			},
			"optimeDate" : ISODate("2018-08-02T02:28:15Z"),
			"optimeDurableDate" : ISODate("2018-08-02T02:28:15Z"),
			"lastHeartbeat" : ISODate("2018-08-02T02:28:16.204Z"),
			"lastHeartbeatRecv" : ISODate("2018-08-02T02:28:15.439Z"),
			"pingMs" : NumberLong(0),
			"syncingTo" : "192.168.4.51:27051",
			"configVersion" : 1
		},
		{
			"_id" : 2,
			"name" : "192.168.4.53:27053",
			"health" : 1,
			"state" : 2,
			"stateStr" : "SECONDARY",
			"uptime" : 33,
			"optime" : {
				"ts" : Timestamp(1533176895, 1),
				"t" : NumberLong(1)
			},
			"optimeDurable" : {
				"ts" : Timestamp(1533176895, 1),
				"t" : NumberLong(1)
			},
			"optimeDate" : ISODate("2018-08-02T02:28:15Z"),
			"optimeDurableDate" : ISODate("2018-08-02T02:28:15Z"),
			"lastHeartbeat" : ISODate("2018-08-02T02:28:16.201Z"),
			"lastHeartbeatRecvmongo  --host  192.168.4.51  --port 27051" : ISODate("2018-08-02T02:28:15.660Z"),
			"pingMs" : NumberLong(0),2018年 08月 02日 星期四 11:05:25 CST
			"syncingTo" : "192.168.4.51:27051",
			"configVersion" : 1
		}
	],
	"ok" : 1,
	"operationTime" : Timestamp(1533176895, 1),
	"$clusterTime" : {
		"clusterTime" : Timestamp(1533176895, 1),
		"signature" : {
			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
			"keyId" : NumberLong(0)
		}
	}
}
--rs1:PRIMARY> rs .isMaster( )
{
	"hosts" : [
		"192.168.4.51:27051",
		"192.168.4.52:27052",
		"192.168.4.53:27053"
	],
	"setName" : "rs1",
	"setVersion" : 1,
	"ismaster" : true,
	"secondary" : false,
	"primary" : "192.168.4.51:27051",
	"me" : "192.168.4.51:27051",mongo  --host  192.168.4.51  --port 27051
	"electionId" : ObjectId("7fffffff0000000000000001"),
	"lastWrite" : {
		"opTime" : {
			"ts" : Timestamp(1533176905, 1),
			"t" : NumberLong(1)
		},
		"lastWriteDate" : ISODate("2018-08-02T02:28:25Z"),
		"majorityOpTime" : {
			"ts" : Timestamp(1533176905, 1),
			"t" : NumberLong(1)
		},
		"majorityWriteDate" : ISODate("2018-08-02T02:28:25Z")
	},
	"maxBsonObjectSize" : 16777216,
	"maxMessageSizeBytes" : 48000000,
	"maxWriteBatchSize" : 100000,
	"localTime" : ISODate("2018-08-02T02:28:33.533Z"),
	"logicalSessionTimeoutMinutes" : 30,
	"minWireVersion" : 0,
	"maxWireVersion" : 6,
	"readOnly" : false,
	"ok" : 1,
	"operationTime" : Timestamp(1533176905, 1),
	"$clusterTime" : {
		"clusterTime" : Timestamp(1533176905, 1),
		"signature" : {
			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
			"keyId" : NumberLong(0)
		}
	}
}
--rs1:PRIMARY> 


--测试验证
[root@host51 ~]# mongo  --host 192.168.4.51  --port  27051
rs1:PRIMARY> show  dbs
admin   0.000GB
config  0.000GB
local   0.000GB
userdb  0.000GB
you     0.000GB
rs1:PRIMARY> use  db101
switched to db db101
rs1:PRIMARY> db
db101
rs1:PRIMARY> db.c1.save({name:'boy',sex:'girl'})
WriteResult({ "nInserted" : 1 })



--在52.53上
[root@host52 ~]#  mongo  --port  27052  --host   192.168.4.52
--rs1:SECONDARY> db.getMongo( ).setSlaveOk( )    // db.getMongo( ).setSlaveOk( ) 允许从库查看数据
rs1:SECONDARY> show dbs
admin   0.000GB
config  0.000GB
db101   0.000GB
local   0.000GB
userdb  0.000GB
you     0.000GB
rs1:SECONDARY> use  db101
switched to db db101
rs1:SECONDARY> show  tables
c1


[root@host53 ~]# mongo  --host  192.168.4.53  --port  27053
--rs1:SECONDARY> db.getMongo( ).setSlaveOk( )
rs1:SECONDARY> show tables;
rs1:SECONDARY> show dbs
admin   0.000GB
config  0.000GB
db101   0.000GB
local   0.000GB
userdb  0.000GB
you     0.000GB
rs1:SECONDARY> use db101
switched to db db101
rs1:SECONDARY> show tables
c1
rs1:SECONDARY> db.c1.find()
{ "_id" : ObjectId("5b627134b753b570da208bbf"), "name" : "boy", "sex" : "girl" }


关掉51

--[root@host51 ~]# stop




--[root@host52 ~]#  mongo  --port  27052  --host   192.168.4.52
rs1:SECONDARY> rs .isMaster( )
{
	"hosts" : [
		"192.168.4.51:27051",
		"192.168.4.52:27052",
		"192.168.4.53:27053"
	],
	"setName" : "rs1",
	"setVersion" : 1,
	"ismaster" : false,
	"secondary" : true,
	"primary" : "192.168.4.53:27053",     -- // 53变成了主库
	"me" : "192.168.4.52:27052",
	"lastWrite" : {
		"opTime" : {
			"ts" : Timestamp(1533180208, 1),
			"t" : NumberLong(2)
		},
		"lastWriteDate" : ISODate("2018-08-02T03:23:28Z"),
		"majorityOpTime" : {
			"ts" : Timestamp(1533180208, 1),
			"t" : NumberLong(2)
		},
		"majorityWriteDate" : ISODate("2018-08-02T03:23:28Z")
	},
	"maxBsonObjectSize" : 16777216,
	"maxMessageSizeBytes" : 48000000,
	"maxWriteBatchSize" : 100000,
	"localTime" : ISODate("2018-08-02T03:23:35.122Z"),
	"logicalSessionTimeoutMinutes" : 30,
	"minWireVersion" : 0,
	"maxWireVersion" : 6,
	"readOnly" : false,
	"ok" : 1,
	"operationTime" : Timestamp(1533180208, 1),
	"$clusterTime" : {
		"clusterTime" : Timestamp(1533180208, 1),
		"signature" : {
			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
			"keyId" : NumberLong(0)
		}
	}
}



--[root@host53 ~]#  mongo  --port  27053  --host   192.168.4.53
rs1:SECONDARY> rs .isMaster( )
{
	"hosts" : [
		"192.168.4.51:27051",
		"192.168.4.52:27052",
		"192.168.4.53:27053"
	],
	"setName" : "rs1",
	"setVersion" : 1,
	"ismaster" : true,
	"secondary" : false,
	"primary" : "192.168.4.53:27053",
	"me" : "192.168.4.53:27053",
	"electionId" : ObjectId("7fffffff0000000000000002"),
	"lastWrite" : {
		"opTime" : {
			"ts" : Timestamp(1533180228, 1),
			"t" : NumberLong(2)
		},
		"lastWriteDate" : ISODate("2018-08-02T03:23:48Z"),
		"majorityOpTime" : {
			"ts" : Timestamp(1533180228, 1),
			"t" : NumberLong(2)
		},
		"majorityWriteDate" : ISODate("2018-08-02T03:23:48Z")
	},
	"maxBsonObjectSize" : 16777216,
	"maxMessageSizeBytes" : 48000000,
	"maxWriteBatchSize" : 100000,
	"localTime" : ISODate("2018-08-02T03:23:49.614Z"),
	"logicalSessionTimeoutMinutes" : 30,
	"minWireVersion" : 0,
	"maxWireVersion" : 6,
	"readOnly" : false,
	"ok" : 1,
	"operationTime" : Timestamp(1533180228, 1),
	"$clusterTime" : {
		"clusterTime" : Timestamp(1533180228, 1),
		"signature" : {
			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
			"keyId" : NumberLong(0)
		}
	}
}


--修复好51,开启51

[root@host51 ~]# start


--[root@host53 ~]#  mongo  --port  27053  --host   192.168.4.53

rs1:SECONDARY> rs .isMaster( )
{
	"hosts" : [
		"192.168.4.51:27051",
		"192.168.4.52:27052",
		"192.168.4.53:27053"
	],
	"setName" : "rs1",
	"setVersion" : 1,
	"ismaster" : true,
	"secondary" : false,
	"primary" : "192.168.4.53:27053",
	"me" : "192.168.4.53:27053",
	"electionId" : ObjectId("7fffffff0000000000000002"),
	"lastWrite" : {
		"opTime" : {
			"ts" : Timestamp(1533180228, 1),
			"t" : NumberLong(2)
		},
		"lastWriteDate" : ISODate("2018-08-02T03:23:48Z"),
		"majorityOpTime" : {
			"ts" : Timestamp(1533180228, 1),
			"t" : NumberLong(2)
		},
		"majorityWriteDate" : ISODate("2018-08-02T03:23:48Z")
	},
	"maxBsonObjectSize" : 16777216,
	"maxMessageSizeBytes" : 48000000,
	"maxWriteBatchSize" : 100000,
	"localTime" : ISODate("2018-08-02T03:23:49.614Z"),
	"logicalSessionTimeoutMinutes" : 30,
	"minWireVersion" : 0,
	"maxWireVersion" : 6,
	"readOnly" : false,
	"ok" : 1,
	"operationTime" : Timestamp(1533180228, 1),
	"$clusterTime" : {
		"clusterTime" : Timestamp(1533180228, 1),
		"signature" : {
			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
			"keyId" : NumberLong(0)
		}
	}
}
rs1:PRIMARY> 
rs1:PRIMARY> show  dbs
admin   0.000GB
config  0.000GB
db101   0.000GB
local   0.000GB
userdb  0.000GB
you     0.000GB
rs1:PRIMARY> use  db101
switched to db db101
rs1:PRIMARY> db.c3.save({uid:565,gid:696})
WriteResult({ "nInserted" : 1 })


--[root@host52 ~]#  mongo  --port  27052  --host   192.168.4.52

rs1:SECONDARY> rs .isMaster( )
{
	"hosts" : [
		"192.168.4.51:27051",
		"192.168.4.52:27052",
		"192.168.4.53:27053"
	],
	"setName" : "rs1",
	"setVersion" : 1,
	"ismaster" : false,
	"secondary" : true,
	"primary" : "192.168.4.53:27053",
	"me" : "192.168.4.52:27052",
	"lastWrite" : {
		"opTime" : {
			"ts" : Timestamp(1533180208, 1),
			"t" : NumberLong(2)
		},
		"lastWriteDate" : ISODate("2018-08-02T03:23:28Z"),
		"majorityOpTime" : {
			"ts" : Timestamp(1533180208, 1),
			"t" : NumberLong(2)
		},
		"majorityWriteDate" : ISODate("2018-08-02T03:23:28Z")
	},
	"maxBsonObjectSize" : 16777216,
	"maxMessageSizeBytes" : 48000000,
	"maxWriteBatchSize" : 100000,
	"localTime" : ISODate("2018-08-02T03:23:35.122Z"),
	"logicalSessionTimeoutMinutes" : 30,
	"minWireVersion" : 0,
	"maxWireVersion" : 6,
	"readOnly" : false,
	"ok" : 1,
	"operationTime" : Timestamp(1533180208, 1),
	"$clusterTime" : {
		"clusterTime" : Timestamp(1533180208, 1),
		"signature" : {
			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
			"keyId" : NumberLong(0)
		}
	}
}
rs1:SECONDARY> 
rs1:SECONDARY> db
db101
rs1:SECONDARY> show tables
c1
c2
c3
rs1:SECONDARY> db.c3.find()
{ "_id" : ObjectId("5b627a60c1418f8776822a7f"), "uid" : 565, "gid" : 696 }



[root@host51 ~]# mongo  --host 192.168.4.51  --port  27051

rs1:SECONDARY> db
test
rs1:SECONDARY> show dbs
2018-08-02T11:29:55.854+0800 E QUERY    [thread1] Error: listDatabases failed:{
	"operationTime" : Timestamp(1533180588, 1),
	"ok" : 0,
	"errmsg" : "not master and slaveOk=false",
	"code" : 13435,
	"codeName" : "NotMasterNoSlaveOk",
	"$clusterTime" : {
		"clusterTime" : Timestamp(1533180588, 1),
		"signature" : {
			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
			"keyId" : NumberLong(0)
		}
	}
} :
_getErrorWithCode@src/mongo/shell/utils.js:25:13rs1:PRIMARY> db.c1.save({_id:"abc",name:'bob'})
WriteResult({ "nMatched" : 0, "nUpserted" : 1, "nModified" : 0, "_id" : "abc" })
rs1:PRIMARY> db.c1.find()
{ "_id" : "abc", "name" : "bob" }
rs1:PRIMARY> db.c1.save({_id:"abcd",name:'bob'})
WriteResult({ "nMatched" : 0, "nUpserted" : 1, "nModified" : 0, "_id" : "abcd" })
rs1:PRIMARY> db.c1.find()
{ "_id" : "abc", "name" : "bob" }
{ "_id" : "abcd", "name" : "bob" }
rs1:PRIMARY> db.c1.save({_id:"abc",name:'tom'})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
rs1:PRIMARY> db.c1.find()
{ "_id" : "abc", "name" : "tom" }
{ "_id" : "abcd", "name" : "bob" }
rs1:PRIMARY> db.c1.save({_id:"abce",name:'tom'})
WriteResult({ "nMatched" : 0, "nUpserted" : 1, "nModified" : 0, "_id" : "abce" })
rs1:PRIMARY> db.c1.find()
{ "_id" : "abc", "name" : "tom" }
{ "_id" : "abcd", "name" : "bob" }
{ "_id" : "abce", "name" : "tom" }
rs1:PRIMARY> db.c1.insert({_id:'abc',name:'tom'})
WriteResult({
	"nInserted" : 0,
	"writeError" : {
		"code" : 11000,
		"errmsg" : "E11000 duplicate key error collection: userdb.c1 index: _id_ dup key: { : \"abc\" }"
	}
})
rs1:PRIMARY> db.c1.insert({_id:'abcf',name:'tom'})
WriteResult({ "nInserted" : 1 })
rs1:PRIMARY> db.c1.find()
{ "_id" : "abc", "name" : "tom" }
{ "_id" : "abcd", "name" : "bob" }
{ "_id" : "abce", "name" : "tom" }
{ "_id" : "abcf", "name" : "tom" }
rs1:PRIMARY> db.c1.insert({_id:'abcf',name:'toma'})
WriteResult({
	"nInserted" : 0,
	"writeError" : {
		"code" : 11000,
		"errmsg" : "E11000 duplicate key error collection: userdb.c1 index: _id_ dup key: { : \"abcf\" }"
	}
})
rs1:PRIMARY> db.c1.find()
{ "_id" : "abc", "name" : "tom" }
{ "_id" : "abcd", "name" : "bob" }
{ "_id" : "abce", "name" : "tom" }
{ "_id" : "abcf", "name" : "tom" }

Mongo.prototype.getDBs@src/mongo/shell/mongo.js:65:1
shellHelper.show@src/mongo/shell/utils.js:816:19
shellHelper@src/mongo/shell/utils.js:706:15
@(shellhelp2):1:1
rs1:SECONDARY> db.getMongo( ).setSlaveOk( )     --//此步必不可少，否则查不出来数据库信息
rs1:SECONDARY> show  dbs
admin   0.000GB
config  0.000GB
db101   0.000GB
local   0.000GB
userdb  0.000GB
you     0.000GB
rs1:SECONDARY> use db101
switched to db db101
rs1:SECONDARY> db.c3.find()
{ "_id" : ObjectId("5b627a60c1418f8776822a7f"), "uid" : 565, "gid" : 696 }


##########################################################################################

插入文档

save( )
• 格式
– db. 集合名 .save({ key:“ 值”, key:” 值” })

• 注意
– 集合不存在时创建集合,后插入记录
– _id 字段值 已存在时 修改文档字段值
– _id 字段值 不已存在时 插入文档


insert()
• 格式
– db. 集合名 .insert({key:“ 值”, key:” 值” })

• 注意
– 集合不存在时创建集合,后插入记录
– _id 字段值 已存在时放弃插入
– _id 字段值 不已存在时 插入文档


insert()插入多条记录
db. 集合名 .insertMany(
[
{name:"xiaojiu“,age:19} ,
{name:"laoshi“,email:”yaya@tedu.cn”}
]
)




rs1:PRIMARY> db.c1.save({_id:"abc",name:'bob'})
WriteResult({ "nMatched" : 0, "nUpserted" : 1, "nModified" : 0, "_id" : "abc" })
rs1:PRIMARY> db.c1.find()
{ "_id" : "abc", "name" : "bob" }
rs1:PRIMARY> db.c1.save({_id:"abcd",name:'bob'})
WriteResult({ "nMatched" : 0, "nUpserted" : 1, "nModified" : 0, "_id" : "abcd" })
rs1:PRIMARY> db.c1.find()
{ "_id" : "abc", "name" : "bob" }
{ "_id" : "abcd", "name" : "bob" }
rs1:PRIMARY> db.c1.save({_id:"abc",name:'tom'})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
rs1:PRIMARY> db.c1.find()
{ "_id" : "abc", "name" : "tom" }
{ "_id" : "abcd", "name" : "bob" }
rs1:PRIMARY> db.c1.save({_id:"abce",name:'tom'})
WriteResult({ "nMatched" : 0, "nUpserted" : 1, "nModified" : 0, "_id" : "abce" })
rs1:PRIMARY> db.c1.find()
{ "_id" : "abc", "name" : "tom" }
{ "_id" : "abcd", "name" : "bob" }
{ "_id" : "abce", "name" : "tom" }
rs1:PRIMARY> db.c1.insert({_id:'abc',name:'tom'})
WriteResult({
	"nInserted" : 0,
	"writeError" : {
		"code" : 11000,
		"errmsg" : "E11000 duplicate key error collection: userdb.c1 index: _id_ dup key: { : \"abc\" }"
	}
})
rs1:PRIMARY> db.c1.insert({_id:'abcf',name:'tom'})
WriteResult({ "nInserted" : 1 })
rs1:PRIMARY> db.c1.find()
{ "_id" : "abc", "name" : "tom" }
{ "_id" : "abcd", "name" : "bob" }
{ "_id" : "abce", "name" : "tom" }
{ "_id" : "abcf", "name" : "tom" }
rs1:PRIMARY> db.c1.insert({_id:'abcf',name:'toma'})
WriteResult({
	"nInserted" : 0,
	"writeError" : {
		"code" : 11000,
		"errmsg" : "E11000 duplicate key error collection: userdb.c1 index: _id_ dup key: { : \"abcf\" }"
	}
})
rs1:PRIMARY> db.c1.find()
{ "_id" : "abc", "name" : "tom" }
{ "_id" : "abcd", "name" : "bob" }
{ "_id" : "abce", "name" : "tom" }
{ "_id" : "abcf", "name" : "tom" }




--rs1:PRIMARY> db.c2.insert( [ {name:'xiaoqu',age:56}, {anem:'laoshi',email:'yaya@tedu.cn'}] )
BulkWriteResult({
	"writeErrors" : [ ],
	"writeConcernErrors" : [ ],
	"nInserted" : 2,
	"nUpserted" : 0,
	"nMatched" : 0,
	"nModified" : 0,
	"nRemoved" : 0,
	"upserted" : [ ]
})
rs1:PRIMARY> 
--rs1:PRIMARY> db.c2.find()         //默认一次显示20行
{ "_id" : ObjectId("5b62a3d79cc7da33c4a1ebf6"), "name" : "xiaoqu", "age" : 56 }
{ "_id" : ObjectId("5b62a3d79cc7da33c4a1ebf7"), "anem" : "laoshi", "email" : "yaya@tedu.cn" }
rs1:PRIMARY> 


--rs1:PRIMARY> db.coluser.find()
{ "_id" : ObjectId("5b61747f4f82a7a973fb935e"), "name" : "yay", "password" : "45", "uid" : "5", "gid" : "6", "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b61798dcb5073d0d51c31b9"), "name" : "yay", "password" : "45", "uid" : "5", "gid" : "6", "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19690"), "name" : "yay", "password" : 45, "uid" : 5, "gid" : 6, "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19691"), "name" : "yay", "password" : 45, "uid" : 5, "gid" : 6, "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19692"), "name" : "root", "password" : "x", "uid" : 0, "gid" : 0, "comment" : "root", "homedir" : "/root", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19693"), "name" : "bin", "password" : "x", "uid" : 1, "gid" : 1, "comment" : "bin", "homedir" : "/bin", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19694"), "name" : "daemon", "password" : "x", "uid" : 2, "gid" : 2, "comment" : "daemon", "homedir" : "/sbin", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19695"), "name" : "adm", "password" : "x", "uid" : 3, "gid" : 4, "comment" : "adm", "homedir" : "/var/adm", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19696"), "name" : "lp", "password" : "x", "uid" : 4, "gid" : 7, "comment" : "lp", "homedir" : "/var/spool/lpd", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19697"), "name" : "sync", "password" : "x", "uid" : 5, "gid" : 0, "comment" : "sync", "homedir" : "/sbin", "shell" : "/bin/sync" }
{ "_id" : ObjectId("5b6182053cc3595a80b19698"), "name" : "shutdown", "password" : "x", "uid" : 6, "gid" : 0, "comment" : "shutdown", "homedir" : "/sbin", "shell" : "/sbin/shutdown" }
{ "_id" : ObjectId("5b6182053cc3595a80b19699"), "name" : "halt", "password" : "x", "uid" : 7, "gid" : 0, "comment" : "halt", "homedir" : "/sbin", "shell" : "/sbin/halt" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969a"), "name" : "mail", "password" : "x", "uid" : 8, "gid" : 12, "comment" : "mail", "homedir" : "/var/spool/mail", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969b"), "name" : "operator", "password" : "x", "uid" : 11, "gid" : 0, "comment" : "operator", "homedir" : "/root", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969c"), "name" : "games", "password" : "x", "uid" : 12, "gid" : 100, "comment" : "games", "homedir" : "/usr/games", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969d"), "name" : "ftp", "password" : "x", "uid" : 14, "gid" : 50, "comment" : "FTP User", "homedir" : "/var/ftp", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969e"), "name" : "nobody", "password" : "x", "uid" : 99, "gid" : 99, "comment" : "Nobody", "homedir" : "/", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969f"), "name" : "systemd-network", "password" : "x", "uid" : 192, "gid" : 192, "comment" : "systemd Network Management", "homedir" : "/", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a0"), "name" : "dbus", "password" : "x", "uid" : 81, "gid" : 81, "comment" : "System message bus", "homedir" : "/", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a1"), "name" : "polkitd", "password" : "x", "uid" : 999, "gid" : 998, "comment" : "User for polkitd", "homedir" : "/", "shell" : "/sbin/nologin" }
Type "it" for more
--rs1:PRIMARY> db.coluser.find({},{_id:0,name:1,shell:1})
{ "name" : "yay", "shell" : "/bin/bash" }
{ "name" : "yay", "shell" : "/bin/bash" }
{ "name" : "yay", "shell" : "/bin/bash" }
{ "name" : "yay", "shell" : "/bin/bash" }
{ "name" : "root", "shell" : "/bin/bash" }
{ "name" : "bin", "shell" : "/sbin/nologin" }
{ "name" : "daemon", "shell" : "/sbin/nologin" }
{ "name" : "adm", "shell" : "/sbin/nologin" }
{ "name" : "lp", "shell" : "/sbin/nologin" }
{ "name" : "sync", "shell" : "/bin/sync" }
{ "name" : "shutdown", "shell" : "/sbin/shutdown" }
{ "name" : "halt", "shell" : "/sbin/halt" }
{ "name" : "mail", "shell" : "/sbin/nologin" }
{ "name" : "operator", "shell" : "/sbin/nologin" }
{ "name" : "games", "shell" : "/sbin/nologin" }
{ "name" : "ftp", "shell" : "/sbin/nologin" }
{ "name" : "nobody", "shell" : "/sbin/nologin" }
{ "name" : "systemd-network", "shell" : "/sbin/nologin" }
{ "name" : "dbus", "shell" : "/sbin/nologin" }
{ "name" : "polkitd", "shell" : "/sbin/nologin" }
Type "it" for more
--rs1:PRIMARY> db.coluser.find({_id:0,name:1,shell:1})
--rs1:PRIMARY> db.coluser.find({name:1,shell:1})
--rs1:PRIMARY> db.coluser.find({},{name:1,shell:1})
{ "_id" : ObjectId("5b61747f4f82a7a973fb935e"), "name" : "yay", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b61798dcb5073d0d51c31b9"), "name" : "yay", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19690"), "name" : "yay", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19691"), "name" : "yay", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19692"), "name" : "root", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19693"), "name" : "bin", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19694"), "name" : "daemon", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19695"), "name" : "adm", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19696"), "name" : "lp", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19697"), "name" : "sync", "shell" : "/bin/sync" }
{ "_id" : ObjectId("5b6182053cc3595a80b19698"), "name" : "shutdown", "shell" : "/sbin/shutdown" }
{ "_id" : ObjectId("5b6182053cc3595a80b19699"), "name" : "halt", "shell" : "/sbin/halt" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969a"), "name" : "mail", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969b"), "name" : "operator", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969c"), "name" : "games", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969d"), "name" : "ftp", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969e"), "name" : "nobody", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969f"), "name" : "systemd-network", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a0"), "name" : "dbus", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a1"), "name" : "polkitd", "shell" : "/sbin/nologin" }
Type "it" for more
--rs1:PRIMARY> db.coluser.find({shell:'/bin/bash'})
{ "_id" : ObjectId("5b61747f4f82a7a973fb935e"), "name" : "yay", "password" : "45", "uid" : "5", "gid" : "6", "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b61798dcb5073d0d51c31b9"), "name" : "yay", "password" : "45", "uid" : "5", "gid" : "6", "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19690"), "name" : "yay", "password" : 45, "uid" : 5, "gid" : 6, "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19691"), "name" : "yay", "password" : 45, "uid" : 5, "gid" : 6, "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19692"), "name" : "root", "password" : "x", "uid" : 0, "gid" : 0, "comment" : "root", "homedir" : "/root", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b196b9"), "name" : "lisi", "password" : "x", "uid" : 1000, "gid" : 1000, "comment" : "lisi", "homedir" : "/home/lisi", "shell" : "/bin/bash" }







limit( 数字 ) // 显示前几行
> db. 集合名 .find().limit(3)

--rs1:PRIMARY> db.coluser.find().limit(2)
{ "_id" : ObjectId("5b61747f4f82a7a973fb935e"), "name" : "yay", "password" : "45", "uid" : "5", "gid" : "6", "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b61798dcb5073d0d51c31b9"), "name" : "yay", "password" : "45", "uid" : "5", "gid" : "6", "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }


skip( 数字 )
// 跳过前几行

--rs1:PRIMARY> db.coluser.find()
{ "_id" : ObjectId("5b61747f4f82a7a973fb935e"), "name" : "yay", "password" : "45", "uid" : "5", "gid" : "6", "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b61798dcb5073d0d51c31b9"), "name" : "yay", "password" : "45", "uid" : "5", "gid" : "6", "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19690"), "name" : "yay", "password" : 45, "uid" : 5, "gid" : 6, "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19691"), "name" : "yay", "password" : 45, "uid" : 5, "gid" : 6, "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19692"), "name" : "root", "password" : "x", "uid" : 0, "gid" : 0, "comment" : "root", "homedir" : "/root", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19693"), "name" : "bin", "password" : "x", "uid" : 1, "gid" : 1, "comment" : "bin", "homedir" : "/bin", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19694"), "name" : "daemon", "password" : "x", "uid" : 2, "gid" : 2, "comment" : "daemon", "homedir" : "/sbin", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19695"), "name" : "adm", "password" : "x", "uid" : 3, "gid" : 4, "comment" : "adm", "homedir" : "/var/adm", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19696"), "name" : "lp", "password" : "x", "uid" : 4, "gid" : 7, "comment" : "lp", "homedir" : "/var/spool/lpd", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19697"), "name" : "sync", "password" : "x", "uid" : 5, "gid" : 0, "comment" : "sync", "homedir" : "/sbin", "shell" : "/bin/sync" }
{ "_id" : ObjectId("5b6182053cc3595a80b19698"), "name" : "shutdown", "password" : "x", "uid" : 6, "gid" : 0, "comment" : "shutdown", "homedir" : "/sbin", "shell" : "/sbin/shutdown" }
{ "_id" : ObjectId("5b6182053cc3595a80b19699"), "name" : "halt", "password" : "x", "uid" : 7, "gid" : 0, "comment" : "halt", "homedir" : "/sbin", "shell" : "/sbin/halt" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969a"), "name" : "mail", "password" : "x", "uid" : 8, "gid" : 12, "comment" : "mail", "homedir" : "/var/spool/mail", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969b"), "name" : "operator", "password" : "x", "uid" : 11, "gid" : 0, "comment" : "operator", "homedir" : "/root", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969c"), "name" : "games", "password" : "x", "uid" : 12, "gid" : 100, "comment" : "games", "homedir" : "/usr/games", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969d"), "name" : "ftp", "password" : "x", "uid" : 14, "gid" : 50, "comment" : "FTP User", "homedir" : "/var/ftp", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969e"), "name" : "nobody", "password" : "x", "uid" : 99, "gid" : 99, "comment" : "Nobody", "homedir" : "/", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969f"), "name" : "systemd-network", "password" : "x", "uid" : 192, "gid" : 192, "comment" : "systemd Network Management", "homedir" : "/", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a0"), "name" : "dbus", "password" : "x", "uid" : 81, "gid" : 81, "comment" : "System message bus", "homedir" : "/", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a1"), "name" : "polkitd", "password" : "x", "uid" : 999, "gid" : 998, "comment" : "User for polkitd", "homedir" : "/", "shell" : "/sbin/nologin" }
Type "it" for more


--– > db. 集合名 .find().skip(2)

rs1:PRIMARY> db.coluser.find().skip(5)
{ "_id" : ObjectId("5b6182053cc3595a80b19693"), "name" : "bin", "password" : "x", "uid" : 1, "gid" : 1, "comment" : "bin", "homedir" : "/bin", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19694"), "name" : "daemon", "password" : "x", "uid" : 2, "gid" : 2, "comment" : "daemon", "homedir" : "/sbin", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19695"), "name" : "adm", "password" : "x", "uid" : 3, "gid" : 4, "comment" : "adm", "homedir" : "/var/adm", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19696"), "name" : "lp", "password" : "x", "uid" : 4, "gid" : 7, "comment" : "lp", "homedir" : "/var/spool/lpd", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19697"), "name" : "sync", "password" : "x", "uid" : 5, "gid" : 0, "comment" : "sync", "homedir" : "/sbin", "shell" : "/bin/sync" }
{ "_id" : ObjectId("5b6182053cc3595a80b19698"), "name" : "shutdown", "password" : "x", "uid" : 6, "gid" : 0, "comment" : "shutdown", "homedir" : "/sbin", "shell" : "/sbin/shutdown" }
{ "_id" : ObjectId("5b6182053cc3595a80b19699"), "name" : "halt", "password" : "x", "uid" : 7, "gid" : 0, "comment" : "halt", "homedir" : "/sbin", "shell" : "/sbin/halt" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969a"), "name" : "mail", "password" : "x", "uid" : 8, "gid" : 12, "comment" : "mail", "homedir" : "/var/spool/mail", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969b"), "name" : "operator", "password" : "x", "uid" : 11, "gid" : 0, "comment" : "operator", "homedir" : "/root", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969c"), "name" : "games", "password" : "x", "uid" : 12, "gid" : 100, "comment" : "games", "homedir" : "/usr/games", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969d"), "name" : "ftp", "password" : "x", "uid" : 14, "gid" : 50, "comment" : "FTP User", "homedir" : "/var/ftp", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969e"), "name" : "nobody", "password" : "x", "uid" : 99, "gid" : 99, "comment" : "Nobody", "homedir" : "/", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969f"), "name" : "systemd-network", "password" : "x", "uid" : 192, "gid" : 192, "comment" : "systemd Network Management", "homedir" : "/", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a0"), "name" : "dbus", "password" : "x", "uid" : 81, "gid" : 81, "comment" : "System message bus", "homedir" : "/", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a1"), "name" : "polkitd", "password" : "x", "uid" : 999, "gid" : 998, "comment" : "User for polkitd", "homedir" : "/", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a2"), "name" : "libstoragemgmt", "password" : "x", "uid" : 998, "gid" : 996, "comment" : "daemon account for libstoragemgmt", "homedir" : "/var/run/lsm", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a3"), "name" : "rpc", "password" : "x", "uid" : 32, "gid" : 32, "comment" : "Rpcbind Daemon", "homedir" : "/var/lib/rpcbind", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a4"), "name" : "colord", "password" : "x", "uid" : 997, "gid" : 995, "comment" : "User for colord", "homedir" : "/var/lib/colord", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a5"), "name" : "saslauth", "password" : "x", "uid" : 996, "gid" : 76, "comment" : "Saslauthd user", "homedir" : "/run/saslauthd", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a6"), "name" : "abrt", "password" : "x", "uid" : 173, "gid" : 173, "comment" : "", "homedir" : "/etc/abrt", "shell" : "/sbin/nologin" }
Type "it" for more



rs1:PRIMARY> db.coluser.find({},{_id:0,name:1,uid:1}).sort({uid:1})
{ "name" : "root", "uid" : 0 }
{ "name" : "bin", "uid" : 1 }
{ "name" : "daemon", "uid" : 2 }
{ "name" : "adm", "uid" : 3 }
{ "name" : "lp", "uid" : 4 }
{ "name" : "yay", "uid" : 5 }
{ "name" : "yay", "uid" : 5 }
{ "name" : "sync", "uid" : 5 }
{ "name" : "shutdown", "uid" : 6 }
{ "name" : "halt", "uid" : 7 }
{ "name" : "mail", "uid" : 8 }
{ "name" : "operator", "uid" : 11 }
{ "name" : "games", "uid" : 12 }
{ "name" : "ftp", "uid" : 14 }
{ "name" : "rpcuser", "uid" : 29 }
{ "name" : "rpc", "uid" : 32 }
{ "name" : "ntp", "uid" : 38 }
{ "name" : "gdm", "uid" : 42 }
{ "name" : "tss", "uid" : 59 }
{ "name" : "avahi", "uid" : 70 }
Type "it" for more


--范围比较
– $in 在...里
– $nin 不在...里
– $or 或
– > db.user.find({uid:{$in:[1,6,9]}})
– > db.user.find({uid:{$nin:[1,6,9]}})
– > db.user.find({$or: [{name:"root"},{uid:1} ]})

                  
--rs1:PRIMARY> db.coluser.find({uid:{$in:[1,6,9]}})                     //$in 在...里
{ "_id" : ObjectId("5b6182053cc3595a80b19693"), "name" : "bin", "password" : "x", "uid" : 1, "gid" : 1, "comment" : "bin", "homedir" : "/bin", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19698"), "name" : "shutdown", "password" : "x", "uid" : 6, "gid" : 0, "comment" : "shutdown", "homedir" : "/sbin", "shell" : "/sbin/shutdown" }
rs1:PRIMARY> 

 
--rs1:PRIMARY> db.coluser.find({uid:{$nin:[1,6,9]}})                    //$nin 不在...里
{ "_id" : ObjectId("5b61747f4f82a7a973fb935e"), "name" : "yay", "password" : "45", "uid" : "5", "gid" : "6", "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b61798dcb5073d0d51c31b9"), "name" : "yay", "password" : "45", "uid" : "5", "gid" : "6", "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19690"), "name" : "yay", "password" : 45, "uid" : 5, "gid" : 6, "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19691"), "name" : "yay", "password" : 45, "uid" : 5, "gid" : 6, "comment" : "my tecaher", "homedir" : "/home/dir", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19692"), "name" : "root", "password" : "x", "uid" : 0, "gid" : 0, "comment" : "root", "homedir" : "/root", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19694"), "name" : "daemon", "password" : "x", "uid" : 2, "gid" : 2, "comment" : "daemon", "homedir" : "/sbin", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19695"), "name" : "adm", "password" : "x", "uid" : 3, "gid" : 4, "comment" : "adm", "homedir" : "/var/adm", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19696"), "name" : "lp", "password" : "x", "uid" : 4, "gid" : 7, "comment" : "lp", "homedir" : "/var/spool/lpd", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b19697"), "name" : "sync", "password" : "x", "uid" : 5, "gid" : 0, "comment" : "sync", "homedir" : "/sbin", "shell" : "/bin/sync" }
{ "_id" : ObjectId("5b6182053cc3595a80b19699"), "name" : "halt", "password" : "x", "uid" : 7, "gid" : 0, "comment" : "halt", "homedir" : "/sbin", "shell" : "/sbin/halt" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969a"), "name" : "mail", "password" : "x", "uid" : 8, "gid" : 12, "comment" : "mail", "homedir" : "/var/spool/mail", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969b"), "name" : "operator", "password" : "x", "uid" : 11, "gid" : 0, "comment" : "operator", "homedir" : "/root", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969c"), "name" : "games", "password" : "x", "uid" : 12, "gid" : 100, "comment" : "games", "homedir" : "/usr/games", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969d"), "name" : "ftp", "password" : "x", "uid" : 14, "gid" : 50, "comment" : "FTP User", "homedir" : "/var/ftp", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969e"), "name" : "nobody", "password" : "x", "uid" : 99, "gid" : 99, "comment" : "Nobody", "homedir" : "/", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969f"), "name" : "systemd-network", "password" : "x", "uid" : 192, "gid" : 192, "comment" : "systemd Network Management", "homedir" : "/", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a0"), "name" : "dbus", "password" : "x", "uid" : 81, "gid" : 81, "comment" : "System message bus", "homedir" : "/", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a1"), "name" : "polkitd", "password" : "x", "uid" : 999, "gid" : 998, "comment" : "User for polkitd", "homedir" : "/", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a2"), "name" : "libstoragemgmt", "password" : "x", "uid" : 998, "gid" : 996, "comment" : "daemon account for libstoragemgmt", "homedir" : "/var/run/lsm", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a3"), "name" : "rpc", "password" : "x", "uid" : 32, "gid" : 32, "comment" : "Rpcbind Daemon", "homedir" : "/var/lib/rpcbind", "shell" : "/sbin/nologin" }
Type "it" for more
  
--rs1:PRIMARY> db.coluser.find({$or:[{name:"root"},{uid:1}]})                  //$or 或
{ "_id" : ObjectId("5b6182053cc3595a80b19692"), "name" : "root", "password" : "x", "uid" : 0, "gid" : 0, "comment" : "root", "homedir" : "/root", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5b6182053cc3595a80b19693"), "name" : "bin", "password" : "x", "uid" : 1, "gid" : 1, "comment" : "bin", "homedir" : "/bin", "shell" : "/sbin/nologin" }
rs1:PRIMARY> 


--正则匹配
– > db.user.find({name: /^a/ })
• 数值比较
– $lt $lte $gt $gte $ne
< <= > >= !=
– db.user.find( { uid: { $gte:10,$lte:40} } , {_id:0,name
:1,uid:1})
– db.user.find({uid:{$lte:5,}})



--rs1:PRIMARY> db.coluser.find({name:/^a/})
{ "_id" : ObjectId("5b6182053cc3595a80b19695"), "name" : "adm", "password" : "x", "uid" : 3, "gid" : 4, "comment" : "adm", "homedir" : "/var/adm", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a6"), "name" : "abrt", "password" : "x", "uid" : 173, "gid" : 173, "comment" : "", "homedir" : "/etc/abrt", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196b5"), "name" : "avahi", "password" : "x", "uid" : 70, "gid" : 70, "comment" : "Avahi mDNS/DNS-SD Stack", "homedir" : "/var/run/avahi-daemon", "shell" : "/sbin/nologin" }




--rs1:PRIMARY> db.coluser.find({uid:{$gte:10,$lte:50}})
{ "_id" : ObjectId("5b6182053cc3595a80b1969b"), "name" : "operator", "password" : "x", "uid" : 11, "gid" : 0, "comment" : "operator", "homedir" : "/root", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969c"), "name" : "games", "password" : "x", "uid" : 12, "gid" : 100, "comment" : "games", "homedir" : "/usr/games", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b1969d"), "name" : "ftp", "password" : "x", "uid" : 14, "gid" : 50, "comment" : "FTP User", "homedir" : "/var/ftp", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196a3"), "name" : "rpc", "password" : "x", "uid" : 32, "gid" : 32, "comment" : "Rpcbind Daemon", "homedir" : "/var/lib/rpcbind", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196ae"), "name" : "rrs1:PRIMARY> db.coluser.save({name:null,uid:null})
WriteResult({ "nInserted" : 1 })
rs1:PRIMARY> db.coluser.find({name:null})
{ "_id" : ObjectId("5b62b45e9cc7da33c4a1ebf8"), "name" : null, "uid" : null }
rs1:PRIMARY> db.coluser.find({name:NULL})
2018-08-02T15:36:09.261+0800 E QUERY    [thread1] ReferenceError: NULL is not defined :
@(shell):1:18
rs1:PRIMARY> 
pcuser", "password" : "x", "uid" : 29, "gid" : 29, "comment" : "RPC Service User", "homedir" : "/var/lib/nfs", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196b2"), "name" : "gdm", "password" : "x", "uid" : 42, "gid" : 42, "comment" : "", "homedir" : "/var/lib/gdm", "shell" : "/sbin/nologin" }
{ "_id" : ObjectId("5b6182053cc3595a80b196b7"), "name" : "ntp", "password" : "x", "uid" : 38, "gid" : 38, "comment" : "", "homedir" : "/etc/ntp", "shell" : "/sbin/nologin" }
rs1:PRIMARY> 


--匹配 null , 也可以匹配没有的字段
– > db.user.save({name:null,uid:null})
– > db.user.find({name:null})
{ "_id" : ObjectId("5afd0ddbd42772e7e458fc7
5"), "name" : null, "uid" : null }



--rs1:PRIMARY> db.coluser.save({name:null,uid:null})
WriteResult({ "nInserted" : 1 })
rs1:PRIMARY> db.coluser.find({name:null})
{ "_id" : ObjectId("5b62b45e9cc7da33c4a1ebf8"), "name" : null, "uid" : null }
rs1:PRIMARY> db.coluser.find({name:NULL})
2018-08-02T15:36:09.261+0800 E QUERY    [thread1] ReferenceError: NULL is not defined :
@(shell):1:18
rs1:PRIMARY> 




--rs1:PRIMARY> db.c1.find()
{ "_id" : "abc", "name" : "tom" }
{ "_id" : "abcd", "name" : "bob" }
{ "_id" : "abce", "name" : "tom" }
{ "_id" : "abcf", "name" : "tom" }
{ "_id" : ObjectId("5b62a3b39cc7da33c4a1ebf4"), "name" : "xiaoqu", "age" : 56 }
{ "_id" : ObjectId("5b62a3b39cc7da33c4a1ebf5"), "anem" : "laoshi", "email" : "yaya@tedu.cn" }


--rs1:PRIMARY> db.c1.update({},{$set:{name:'hao'}},true,false)
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
rs1:PRIMARY> db.c1.find()
{ "_id" : "abc", "name" : "hao" }
{ "_id" : "abcd", "name" : "bob" }
{ "_id" : "abce", "name" : "tom" }
{ "_id" : "abcf", "name" : "tom" }
{ "_id" : ObjectId("5b62a3b39cc7da33c4a1ebf4"), "name" : "xiaoqu", "age" : 56 }
{ "_id" : ObjectId("5b62a3b39cc7da33c4a1ebf5"), "anem" : "laoshi", "email" : "yaya@tedu.cn" }

--rs1:PRIMARY> db.c1.update({},{$set:{name:'hao'}},false,true)                 // 全替换false需要置于true前面
WriteResult({ "nMatched" : 6, "nUpserted" : 0, "nModified" : 5 })


--rs1:PRIMARY> db.c1.find()
{ "_id" : "abc", "name" : "hao" }
{ "_id" : "abcd", "name" : "hao" }
{ "_id" : "abce", "name" : "hao" }
{ "_id" : "abcf", "name" : "hao" }
{ "_id" : ObjectId("5b62a3b39cc7da33c4a1ebf4"), "name" : "hao", "age" : 56 }
{ "_id" : ObjectId("5b62a3b39cc7da33c4a1ebf5"), "anem" : "laoshi", "email" : "yaya@tedu.cn", "name" : "hao" }
rs1:PRIMARY> 


--$set 条件匹配时,修改指定字段的值
– db.user.update({ 条件 },$set: { 修改的字段 })
– db.user3.update({name:"bin"},{$set:{password:"A"}}

--$unset 删除与条件匹配文档的字段
– db. 集合名 .update({ 条件 },{$unset:{key:values}})
– db.user3.update({name:"bin"},{$unset:{passwor
d:"A"}})

s1:PRIMARY> db.coluser.find({name:'root'},{_id:0})
{ "name" : "root", "password" : "x", "uid" : 0, "gid" : 0, "comment" : "root", "homedir" : "/root", "shell" : "/bin/bash" }
rs1:PRIMARY> db.coluser.update({name:'root'},{$unset:{password:'x'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
rs1:PRIMARY> db.coluser.find({name:'root'},{_id:0})
{ "name" : "root", "uid" : 0, "gid" : 0, "comment" : "root", "homedir" : "/root", "shell" : "/bin/bash" }
rs1:PRIMARY> 



-- $push 向数组中添加新元素
– db. 集合名 .update({ 条件 },{$push:{ 数组名 :“ 值” }})
– db.user.insert({name:"bob",likes:
["a","b","c","d","e","f"]})
– db.user.update({name:“bob”},{$push:{likes:“w"}})


-- $addToSet 避免重复添加
– db. 集合名 .update({ 条件 },{$addToSet:{ 数组名 :”
值” }}) db.user.update({name:"bob"},{$addToSet:{likes:
“f"}})



rs1:PRIMARY> db.coluser.save({name:'lucy',like:['a','o','u','y','g','e','t']})
WriteResult({ "nInserted" : 1 })
rs1:PRIMARY> db.coluser.find({name:'lucy'},{_id:0})
{ "name" : "lucy", "like" : [ "a", "o", "u", "y", "g", "e", "t" ] }
rs1:PRIMARY> 

--rs1:PRIMARY> db.coluser.update({name:'lucy'},{$push:{like:'y'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
--rs1:PRIMARY> db.coluser.find({name:'lucy'},{_id:0})
{ "name" : "lucy", "like" : [ "a", "o", "u", "y", "g", "e", "t", "y", "y" ] }
--rs1:PRIMARY> db.coluser.update({name:'lucy'},{$push:{like:'y'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
--rs1:PRIMARY> db.coluser.find({name:'lucy'},{_id:0})
{ "name" : "lucy", "like" : [ "a", "o", "u", "y", "g", "e", "t", "y", "y", "y" ] }
--rs1:PRIMARY> db.coluser.update({name:'lucy'},{$addToSet:{like:'y'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 0 })
--rs1:PRIMARY> db.coluser.find({name:'lucy'},{_id:0})
{ "name" : "lucy", "like" : [ "a", "o", "u", "y", "g", "e", "t", "y", "y", "y" ] }




--rs1:PRIMARY> db.coluser.find({name:'lucy'},{_id:0})
{ "name" : "lucy", "like" : [ "a", "o", "u", "y", "g", "e", "t", "y", "y", "y", "F" ] }
--rs1:PRIMARY> db.coluser.update({name:'lucy'},{$addToSet:{like:'F'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 0 })
--rs1:PRIMARY> db.coluser.find({name:'lucy'},{_id:0})
{ "name" : "lucy", "like" : [ "a", "o", "u", "y", "g", "e", "t", "y", "y", "y", "F" ] }
--rs1:PRIMARY> db.coluser.update({name:'lucy'},{$addToSet:{like:'F'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 0 })
--rs1:PRIMARY> db.coluser.find({name:'lucy'},{_id:0})
{ "name" : "lucy", "like" : [ "a", "o", "u", "y", "g", "e", "t", "y", "y", "y", "F" ] }
rs1:PRIMARY> 




--$pop 从数组头部删除一个元素
– db. 集合名 .update({ 条件 },{$pop:{ 数组名 : 数字 }})
– db.user.update({name:"bob"},{$pop:{likes:1}})
– db.user.update({name:"bob"},{$pop:{likes:-1}})
   1 删除数组尾部元素    -1 删除数组头部元素



--$pull 删除数组指定元素
– db. 集合名 .update({ 条件 },{$pull:{ 数组名 : 值 }})
– db.user.update({name:"bob"},{$pull:{likes:"b"}})



rs1:PRIMARY> db.coluser.find({name:'lucy'},{_id:0})
{ "name" : "lucy", "like" : [ "a", "o", "u", "y", "g", "e", "t", "y", "y", "y", "F" ] }

rs1:PRIMARY> db.coluser.update({name:'lucy'},{$pop:{like:1}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

rs1:PRIMARY> db.coluser.find({name:'lucy'},{_id:0})
{ "name" : "lucy", "like" : [ "a", "o", "u", "y", "g", "e", "t", "y", "y", "y" ] }

rs1:PRIMARY> db.coluser.update({name:'lucy'},{$pop:{like:1}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

rs1:PRIMARY> db.coluser.find({name:'lucy'},{_id:0})
{ "name" : "lucy", "like" : [ "a", "o", "u", "y", "g", "e", "t", "y", "y" ] }

rs1:PRIMARY> db.coluser.update({name:'lucy'},{$pop:{like:-1}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

rs1:PRIMARY> db.coluser.find({name:'lucy'},{_id:0})
{ "name" : "lucy", "like" : [ "o", "u", "y", "g", "e", "t", "y", "y" ] }

rs1:PRIMARY> db.coluser.update({name:'lucy'},{$pop:{like:-1}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

rs1:PRIMARY> db.coluser.find({name:'lucy'},{_id:0})
{ "name" : "lucy", "like" : [ "u", "y", "g", "e", "t", "y", "y" ] }
rs1:PRIMARY> 




rs1:PRIMARY> db.coluser.find({name:'lucy'},{_id:0})
{ "name" : "lucy", "like" : [ "u", "y", "g", "e", "t", "y", "y" ] }

rs1:PRIMARY> db.coluser.update({name:'lucy'},{$pull:{like:'e'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

rs1:PRIMARY> db.coluser.find({name:'lucy'},{_id:0})
{ "name" : "lucy", "like" : [ "u", "y", "g", "t", "y", "y" ] }

rs1:PRIMARY> db.coluser.update({name:'lucy'},{$pull:{like:'g'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

rs1:PRIMARY> db.coluser.find({name:'lucy'},{_id:0})
{ "name" : "lucy", "like" : [ "u", "y", "t", "y", "y" ] }

rs1:PRIMARY> db.coluser.update({name:'lucy'},{$pull:{like:'y'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

rs1:PRIMARY> db.coluser.find({name:'lucy'},{_id:0})
{ "name" : "lucy", "like" : [ "u", "t" ] }
rs1:PRIMARY> 





-- $drop 删除集合的同时删除索引
– db. 集合名 .drop( )
– db.user.drop( )

-- remove() 删除文档时不删除索引
– db. 集合名 .remove({})                 // 删除所有文档
– db. 集合名 .remove({ 条件 })           // 删除与条件匹配的文档
– db.user.remove({uid:{$lte:10}})
– db.user.remove({})



rs1:PRIMARY> show  dbs
admin   0.000GB
config  0.000GB
db101   0.000GB
local   0.000GB
test    0.000GB
userdb  0.000GB
you     0.000GB
rs1:PRIMARY> use  db101
switched to db db101
rs1:PRIMARY> show tables
c1
c2
c3
rs1:PRIMARY> db.c1.find()
{ "_id" : ObjectId("5b627134b753b570da208bbf"), "name" : "boy", "sex" : "girl" }
rs1:PRIMARY> db.c2.find()
{ "_id" : ObjectId("5b62743cb753b570da208bc0"), "name1" : "boy", "se1x" : "girl" }
rs1:PRIMARY> db.c3.find()
{ "_id" : ObjectId("5b627a60c1418f8776822a7f"), "uid" : 565, "gid" : 696 }
rs1:PRIMARY> db.c3.remove({uid:565})
WriteResult({ "nRemoved" : 1 })
rs1:PRIMARY> db.c3.find()
rs1:PRIMARY> db.c2.remove({name1:'boy'})
WriteResult({ "nRemoved" : 1 })
rs1:PRIMARY> db.c2.find()
rs1:PRIMARY> db.c1.remove({sex:'girl'})
WriteResult({ "nRemoved" : 1 })
rs1:PRIMARY> db.c1.find()
rs1:PRIMARY> 



