#学生表
CREATE TABLE STUDENT
(SNO VARCHAR(3) NOT NULL, 
SNAME VARCHAR(4) NOT NULL,
SSEX VARCHAR(2) NOT NULL, 
SBIRTHDAY DATETIME,
CLASS VARCHAR(5))ENGINE=MyISAM AUTO_INCREMENT=348 DEFAULT CHARSET=utf8 ;

#课程表
CREATE TABLE COURSE
(CNO VARCHAR(5) NOT NULL, 
CNAME VARCHAR(10) NOT NULL, 
TNO VARCHAR(10) NOT NULL)ENGINE=MyISAM AUTO_INCREMENT=348 DEFAULT CHARSET=utf8 ;

#成绩表
CREATE TABLE SCORE 
(SNO VARCHAR(3) NOT NULL, 
CNO VARCHAR(5) NOT NULL, 
DEGREE NUMERIC(10, 1) NOT NULL)ENGINE=MyISAM AUTO_INCREMENT=348 DEFAULT CHARSET=utf8 ;

#教师表
CREATE TABLE TEACHER 
(TNO VARCHAR(3) NOT NULL, 
TNAME VARCHAR(4) NOT NULL, TSEX VARCHAR(2) NOT NULL, 
TBIRTHDAY DATETIME NOT NULL,
PROF VARCHAR(6), 
DEPART VARCHAR(10) NOT NULL)ENGINE=MyISAM AUTO_INCREMENT=348 DEFAULT CHARSET=utf8 ;



INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (108 ,'曾华' 
,'男' ,'1977-09-01',95033);
INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (105 ,'匡明' 
,'男' ,'1975-10-02',95031);
INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (107 ,'王丽' 
,'女' ,'1976-01-23',95033);
INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (101 ,'李军' 
,'男' ,'1976-02-20',95033);
INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (109 ,'王芳' 
,'女' ,'1975-02-10',95031);
INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (103 ,'陆君' 
,'男' ,'1974-06-03',95031);



INSERT INTO COURSE(CNO,CNAME,TNO)VALUES ('3-105' ,'计算机导论',825);
INSERT INTO COURSE(CNO,CNAME,TNO)VALUES ('3-245' ,'操作系统' ,804);
INSERT INTO COURSE(CNO,CNAME,TNO)VALUES ('6-166' ,'数据电路' ,856);
INSERT INTO COURSE(CNO,CNAME,TNO)VALUES ('9-888' ,'高等数学' ,100);



INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (103,'3-245',86);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (105,'3-245',75);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (109,'3-245',68);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (103,'3-105',92);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (105,'3-105',88);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (109,'3-105',76);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (101,'3-105',64);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (107,'3-105',91);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (108,'3-105',78);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (101,'6-166',85);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (107,'6-106',79);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (108,'6-166',81);




INSERT INTO TEACHER(TNO,TNAME,TSEX,TBIRTHDAY,PROF,DEPART) 
VALUES (804,'李诚','男','1958-12-02','副教授','计算机系');
INSERT INTO TEACHER(TNO,TNAME,TSEX,TBIRTHDAY,PROF,DEPART) 
VALUES (856,'张旭','男','1969-03-12','讲师','电子工程系');
INSERT INTO TEACHER(TNO,TNAME,TSEX,TBIRTHDAY,PROF,DEPART)
VALUES (825,'王萍','女','1972-05-05','助教','计算机系');
INSERT INTO TEACHER(TNO,TNAME,TSEX,TBIRTHDAY,PROF,DEPART) 
VALUES (831,'刘冰','女','1977-08-14','助教','电子工程系');


mysql> select  *  from  STUDENT;
+-----+--------+------+---------------------+-------+
| SNO | SNAME  | SSEX | SBIRTHDAY           | CLASS |
+-----+--------+------+---------------------+-------+
| 108 | 曾华   | 男   | 1977-09-01 00:00:00 | 95033 |
| 105 | 匡明   | 男   | 1975-10-02 00:00:00 | 95031 |
| 107 | 王丽   | 女   | 1976-01-23 00:00:00 | 95033 |
| 101 | 李军   | 男   | 1976-02-20 00:00:00 | 95033 |
| 109 | 王芳   | 女   | 1975-02-10 00:00:00 | 95031 |
| 103 | 陆君   | 男   | 1974-06-03 00:00:00 | 95031 |
+-----+--------+------+---------------------+-------+
6 rows in set (0.00 sec)

mysql> select  *  from  COURSE;
+-------+-----------------+-----+
| CNO   | CNAME           | TNO |
+-------+-----------------+-----+
| 3-105 | 计算机导论      | 825 |
| 3-245 | 操作系统        | 804 |
| 6-166 | 数据电路        | 856 |
| 9-888 | 高等数学        | 100 |
+-------+-----------------+-----+
4 rows in set (0.00 sec)

mysql> select  *  from  SCORE;
+-----+-------+--------+
| SNO | CNO   | DEGREE |
+-----+-------+--------+
| 103 | 3-245 |   86.0 |
| 105 | 3-245 |   75.0 |
| 109 | 3-245 |   68.0 |
| 103 | 3-105 |   92.0 |
| 105 | 3-105 |   88.0 |
| 109 | 3-105 |   76.0 |
| 101 | 3-105 |   64.0 |
| 107 | 3-105 |   91.0 |
| 108 | 3-105 |   78.0 |
| 101 | 6-166 |   85.0 |
| 107 | 6-106 |   79.0 |
| 108 | 6-166 |   81.0 |
+-----+-------+--------+
12 rows in set (0.00 sec)

mysql> select  *  from  TEACHER  ;
+-----+--------+------+---------------------+-----------+-----------------+
| TNO | TNAME  | TSEX | TBIRTHDAY           | PROF      | DEPART          |
+-----+--------+------+---------------------+-----------+-----------------+
| 804 | 李诚   | 男   | 1958-12-02 00:00:00 | 副教授    | 计算机系        |
| 856 | 张旭   | 男   | 1969-03-12 00:00:00 | 讲师      | 电子工程系      |
| 825 | 王萍   | 女   | 1972-05-05 00:00:00 | 助教      | 计算机系        |
| 831 | 刘冰   | 女   | 1977-08-14 00:00:00 | 助教      | 电子工程系      |
+-----+--------+------+---------------------+-----------+-----------------+
4 rows in set (0.00 sec)




#########################################################


#1、 查询Student表中的所有记录的Sname、Ssex和Class列。
SELECT * from student ORDER BY class desc,sbirthday desc;

#2、 查询教师所有的单位即不重复的Depart列。
SELECT DISTINCT depart from teacher;

#3、 查询Student表的所有记录。
SELECT * from student;

#4、 查询Score表中成绩在60到80之间的所有记录。
SELECT * from score WHERE degree BETWEEN 60 and 80;
SELECT * from score WHERE degree >= 60 and degree <=80;

#5、 查询Score表中成绩为85，86或88的记录。
SELECT * from score WHERE degree in(85,86,88);
SELECT * from score WHERE degree = 85 or degree = 86 or degree = 88;

#6、 查询Student表中“95031”班或性别为“女”的同学记录。
SELECT * from student WHERE class= '95031' or ssex = '女';

#7、 以Class降序查询Student表的所有记录。
SELECT * from student ORDER BY class desc;

#8、 以Cno升序、Degree降序查询Score表的所有记录。
SELECT * from score ORDER BY cno asc, degree DESC;

#9、 查询“95031”班的学生人数。
SELECT COUNT(class) as  95031班的学生人数 from student WHERE class = '95031';

#10、查询Score表中的最高分的学生学号和课程号。
SELECT sno,cno from score WHERE degree = (SELECT MAX(degree) from score);

#11、查询‘3-105’号课程的平均分。
SELECT avg(degree) 平均分  from score GROUP BY cno HAVING cno = '3-105';

#12、查询Score表中至少有5名学生选修的并以3开头的课程的平均分数。
SELECT cno ,avg(degree) 平均分 from score GROUP BY cno HAVING COUNT(*) >=5 and cno like '3%';

#13、查询最低分大于70，最高分小于90的Sno列。
SELECT sno from score GROUP BY sno HAVING MIN(degree)>70 and MAX(degree) < 90;

#14、查询所有学生的Sname、Cno和Degree列。
SELECT  sname,cno,degree  from student as stu INNER JOIN score as s on stu.sno = s.sno;

#15、查询所有学生的Sno、Cname和Degree列。
SELECT s.sno,cname,degree from  student stu INNER JOIN score s INNER JOIN course c on stu.sno = s.sno and c.cno = s.cno;

#16、查询所有学生的Sname、Cname和Degree列。
SELECT sname,cname,degree from  student stu INNER JOIN score s INNER JOIN course c on stu.sno = s.sno and c.cno = s.cno;

#17、查询“95033”班所选课程的平均分。
#子查询实现
SELECT cno , avg(degree) 平均分  from score  WHERE sno in (SELECT sno from student WHERE class = '95033') GROUP BY cno;
#连接查询实现
SELECT cno , avg(degree) 平均分  from student stu INNER JOIN score s  on stu.sno = s.sno and class = '95033' GROUP BY cno;

#18、假设使用如下命令建立了一个grade表：
create table grade(low decimal(3,0),upp decimal(3,0),rank char(1));
insert into grade values(90,100,'A');#40、以班号和年龄从大到小的顺序查询Student表中的全部记录。
SELECT * from student ORDER BY class desc,sbirthday desc;


#19、查询选修“3-105”课程的成绩高于“109”号同学成绩的所有同学的记录。
SELECT * from student WHERE sno in (SELECT sno  from score WHERE degree > (SELECT degree from score WHERE sno='109' and cno='3-105') and cno='3-105');
SELECT stu.*  from student as stu INNER JOIN score as s on stu.sno = s.sno and cno='3-105' and degree > (SELECT degree from score WHERE sno='109' and cno='3-105') ;

#20、查询score中选学一门以上课程的同学中分数为非最高分成绩的记录。
SELECT score.* from score INNER JOIN (SELECT sno ,MAX(degree) as maxdegree from score GROUP BY sno HAVING COUNT(*) >1) temp on score.sno = temp.sno and score.degree < temp.maxdegree;

#21、查询成绩高于学号为“109”、课程号为“3-105”的成绩的所有记录。
SELECT s.*  from student as stu INNER JOIN score as s on stu.sno = s.sno and cno='3-105' and degree > (SELECT degree from score WHERE sno='109' and cno='3-105') ;

#22、查询和学号为107的同学同年出生的所有学生的Sno、Sname和Sbirthday列。
SELECT sno ,sname,sbirthday from student WHERE year(sbirthday) = (SELECT year(sbirthday) from student WHERE sno='107');

#23、查询“张旭“教师任课的学生成绩。
SELECT * from score WHERE cno in (SELECT cno from course WHERE tno = (SELECT tno from teacher WHERE tname ='张旭'));

#24、查询选修某课程的同学人数多于5人的教师姓名。
SELECT tname from teacher WHERE tno in (SELECT tno from course WHERE cno in (SELECT cno from score GROUP BY cno HAVING COUNT(*)>5));

#25、查询95033班和95031班全体学生的记录。
SELECT * from student WHERE CLASS = '95033' or CLASS = '95031';

#26、查询存在有85分以上成绩的课程Cno.#40、以班号和年龄从大到小的顺序查询Student表中的全部记录。
SELECT * from student ORDER BY class desc,sbirthday desc;

#27、查询出“计算机系“教师所教课程的成绩表。
SELECT * from score WHERE cno in (SELECT CNO from course WHERE TNO in (SELECT tno from teacher WHERE DEPART = '计算机系'));

#28、查询“计算机系”与“电子工程系“不同职称的教师的Tname和Prof。
SELECT tname ,prof from teacher WHERE DEPART = '计算机系' and  prof not in (SELECT prof from teacher WHERE DEPART = '电子工程系')
UNION
SELECT tname ,prof from teacher WHERE DEPART = '电子工程系' and  prof not in (SELECT prof from teacher WHERE DEPART = '计算机系');

#29、查询选修编号为“3-105“课程且成绩至少高于选修编号为“3-245”的同学的Cno、Sno和Degree,并按Degree从高到低次序排序。
SELECT sno, cno ,degree from score WHERE CNO = '3-105' and DEGREE > ANY(SELECT DEGREE from score WHERE CNO = '3-245') ORDER BY degree desc;
SELECT sno, cno ,degree from score WHERE CNO = '3-105' and DEGREE > (SELECT MIN(DEGREE) from score WHERE CNO = '3-245') ORDER BY degree desc;


#30、查询选修编号为“3-105”且成绩高于选修编号为“3-245”课程的同学的Cno、Sno和Degree.
SELECT sno, cno ,degree from score WHERE CNO = '3-105' and DEGREE > ALL(SELECT DEGREE from score WHERE CNO = '3-245') ORDER BY degree desc;
SELECT sno, cno ,degree from score WHERE CNO = '3-105' and DEGREE > (SELECT MAX(DEGREE) from score WHERE CNO = '3-245') ORDER BY degree desc;

#31、查询所有教师和同学的name、sex和birthday.
SELECT sname as name , ssex as sex , sbirthday as birthday from student
UNION ALL #万一老师和学生姓名 性别 出生日相同呢 所以加了ALL
SELECT tname , tsex  , tbirthday as birthday from teacher;

#32、查询所有“女”教师和“女”同学的name、sex和birthday.
SELECT sname as name , ssex as sex , sbirthday as birthday from student WHERE ssex = '女'
UNION ALL 
SELECT tname , tsex  , tbirthday as birthday from teacher WHERE tsex = '女';

#33、查询成绩比该课程平均成绩低的同学的成绩表。
SELECT sno, cno as score_cno ,degree  from score WHERE DEGREE < (SELECT avg(DEGREE) FROM score GROUP BY CNO HAVING  CNO = score_cno );

SELECT A.* from score as A  INNER JOIN (SELECT cno , avg(DEGREE)  as avgdegree FROM score GROUP BY CNO) as B  on A.cno = B.cno and A.DEGREE < B.avgdegree;

#34、查询所有任课教师的Tname和Depart.
SELECT tname,depart from teacher WHERE TNO in (SELECT tno from course);

#35、查询所有未讲课的教师的Tname和Depart. 
SELECT tname,depart from teacher WHERE TNO not in (SELECT tno from course);

#36、查询至少有2名男生的班号。
SELECT class from  student GROUP BY class HAVING COUNT(class)>1;

#37、查询Student表中不姓“王”的同学记录。
SELECT * from student WHERE sname not like '王%';

#38、查询Student表中每个学生的姓名和年龄。
SELECT sname ,TIMESTAMPDIFF(YEAR,sbirthday,NOW()) as age from student;

#39、查询Student表中最大和最小的Sbirthday日期;。
SELECT  MAX(sbirthday),MIN(sbirthday) from student ;

#40、以班号和年龄从大到小的顺序查询Student表中的全部记录。
SELECT * from student ORDER BY class desc,sbirthday desc;

#41、查询“男”教师及其所上的课程。
SELECT * from course WHERE TNO in (SELECT TNO from teacher WHERE TSEX = '男');

#42、查询最高分同学的Sno、Cno和Degree列。
SELECT stu.sno,s.cno,s.degree from student stu INNER JOIN score s on stu.sno=s.sno and s.degree = (select max(degree) from score);

#43、查询和“李军”同性别的所有同学的Sname.
SELECT sname from student WHERE ssex  = (SELECT ssex from student where sname='李军');

#44、查询和“李军”同性别并同班的同学Sname.
SELECT sname from student WHERE ssex  = (SELECT ssex from student where sname='李军') and class = (SELECT class from student where sname='李军');

#45、查询所有选修“计算机导论”课程的“男”同学的成绩表
SELECT score.* from student INNER JOIN score INNER JOIN course on student.SNO = score.SNO AND score.CNO = course.CNO AND course.CNAME = '计算机导论' AND student.SSEX = '男';

